
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Company
 * 
 */
export type Company = $Result.DefaultSelection<Prisma.$CompanyPayload>
/**
 * Model License
 * 
 */
export type License = $Result.DefaultSelection<Prisma.$LicensePayload>
/**
 * Model Branch
 * 
 */
export type Branch = $Result.DefaultSelection<Prisma.$BranchPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model UserSession
 * 
 */
export type UserSession = $Result.DefaultSelection<Prisma.$UserSessionPayload>
/**
 * Model UserActivityLog
 * 
 */
export type UserActivityLog = $Result.DefaultSelection<Prisma.$UserActivityLogPayload>
/**
 * Model MenuCategory
 * 
 */
export type MenuCategory = $Result.DefaultSelection<Prisma.$MenuCategoryPayload>
/**
 * Model MenuProduct
 * 
 */
export type MenuProduct = $Result.DefaultSelection<Prisma.$MenuProductPayload>
/**
 * Model ProductImage
 * 
 */
export type ProductImage = $Result.DefaultSelection<Prisma.$ProductImagePayload>
/**
 * Model ModifierCategory
 * 
 */
export type ModifierCategory = $Result.DefaultSelection<Prisma.$ModifierCategoryPayload>
/**
 * Model Modifier
 * 
 */
export type Modifier = $Result.DefaultSelection<Prisma.$ModifierPayload>
/**
 * Model ProductModifierCategory
 * 
 */
export type ProductModifierCategory = $Result.DefaultSelection<Prisma.$ProductModifierCategoryPayload>
/**
 * Model Promotion
 * 
 */
export type Promotion = $Result.DefaultSelection<Prisma.$PromotionPayload>
/**
 * Model PromotionProduct
 * 
 */
export type PromotionProduct = $Result.DefaultSelection<Prisma.$PromotionProductPayload>
/**
 * Model PromotionModifierMarkup
 * 
 */
export type PromotionModifierMarkup = $Result.DefaultSelection<Prisma.$PromotionModifierMarkupPayload>
/**
 * Model PriceHistory
 * 
 */
export type PriceHistory = $Result.DefaultSelection<Prisma.$PriceHistoryPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const CompanyStatus: {
  active: 'active',
  inactive: 'inactive',
  suspended: 'suspended',
  trial: 'trial'
};

export type CompanyStatus = (typeof CompanyStatus)[keyof typeof CompanyStatus]


export const LicenseStatus: {
  active: 'active',
  expired: 'expired',
  suspended: 'suspended',
  cancelled: 'cancelled'
};

export type LicenseStatus = (typeof LicenseStatus)[keyof typeof LicenseStatus]


export const UserRole: {
  super_admin: 'super_admin',
  company_owner: 'company_owner',
  branch_manager: 'branch_manager',
  cashier: 'cashier',
  call_center: 'call_center'
};

export type UserRole = (typeof UserRole)[keyof typeof UserRole]


export const UserStatus: {
  active: 'active',
  inactive: 'inactive',
  suspended: 'suspended',
  pending: 'pending'
};

export type UserStatus = (typeof UserStatus)[keyof typeof UserStatus]


export const ModifierSelectionType: {
  single: 'single',
  multiple: 'multiple',
  counter: 'counter'
};

export type ModifierSelectionType = (typeof ModifierSelectionType)[keyof typeof ModifierSelectionType]

}

export type CompanyStatus = $Enums.CompanyStatus

export const CompanyStatus: typeof $Enums.CompanyStatus

export type LicenseStatus = $Enums.LicenseStatus

export const LicenseStatus: typeof $Enums.LicenseStatus

export type UserRole = $Enums.UserRole

export const UserRole: typeof $Enums.UserRole

export type UserStatus = $Enums.UserStatus

export const UserStatus: typeof $Enums.UserStatus

export type ModifierSelectionType = $Enums.ModifierSelectionType

export const ModifierSelectionType: typeof $Enums.ModifierSelectionType

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Companies
 * const companies = await prisma.company.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Companies
   * const companies = await prisma.company.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.company`: Exposes CRUD operations for the **Company** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Companies
    * const companies = await prisma.company.findMany()
    * ```
    */
  get company(): Prisma.CompanyDelegate<ExtArgs>;

  /**
   * `prisma.license`: Exposes CRUD operations for the **License** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Licenses
    * const licenses = await prisma.license.findMany()
    * ```
    */
  get license(): Prisma.LicenseDelegate<ExtArgs>;

  /**
   * `prisma.branch`: Exposes CRUD operations for the **Branch** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Branches
    * const branches = await prisma.branch.findMany()
    * ```
    */
  get branch(): Prisma.BranchDelegate<ExtArgs>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.userSession`: Exposes CRUD operations for the **UserSession** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserSessions
    * const userSessions = await prisma.userSession.findMany()
    * ```
    */
  get userSession(): Prisma.UserSessionDelegate<ExtArgs>;

  /**
   * `prisma.userActivityLog`: Exposes CRUD operations for the **UserActivityLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserActivityLogs
    * const userActivityLogs = await prisma.userActivityLog.findMany()
    * ```
    */
  get userActivityLog(): Prisma.UserActivityLogDelegate<ExtArgs>;

  /**
   * `prisma.menuCategory`: Exposes CRUD operations for the **MenuCategory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MenuCategories
    * const menuCategories = await prisma.menuCategory.findMany()
    * ```
    */
  get menuCategory(): Prisma.MenuCategoryDelegate<ExtArgs>;

  /**
   * `prisma.menuProduct`: Exposes CRUD operations for the **MenuProduct** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MenuProducts
    * const menuProducts = await prisma.menuProduct.findMany()
    * ```
    */
  get menuProduct(): Prisma.MenuProductDelegate<ExtArgs>;

  /**
   * `prisma.productImage`: Exposes CRUD operations for the **ProductImage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductImages
    * const productImages = await prisma.productImage.findMany()
    * ```
    */
  get productImage(): Prisma.ProductImageDelegate<ExtArgs>;

  /**
   * `prisma.modifierCategory`: Exposes CRUD operations for the **ModifierCategory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ModifierCategories
    * const modifierCategories = await prisma.modifierCategory.findMany()
    * ```
    */
  get modifierCategory(): Prisma.ModifierCategoryDelegate<ExtArgs>;

  /**
   * `prisma.modifier`: Exposes CRUD operations for the **Modifier** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Modifiers
    * const modifiers = await prisma.modifier.findMany()
    * ```
    */
  get modifier(): Prisma.ModifierDelegate<ExtArgs>;

  /**
   * `prisma.productModifierCategory`: Exposes CRUD operations for the **ProductModifierCategory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductModifierCategories
    * const productModifierCategories = await prisma.productModifierCategory.findMany()
    * ```
    */
  get productModifierCategory(): Prisma.ProductModifierCategoryDelegate<ExtArgs>;

  /**
   * `prisma.promotion`: Exposes CRUD operations for the **Promotion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Promotions
    * const promotions = await prisma.promotion.findMany()
    * ```
    */
  get promotion(): Prisma.PromotionDelegate<ExtArgs>;

  /**
   * `prisma.promotionProduct`: Exposes CRUD operations for the **PromotionProduct** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PromotionProducts
    * const promotionProducts = await prisma.promotionProduct.findMany()
    * ```
    */
  get promotionProduct(): Prisma.PromotionProductDelegate<ExtArgs>;

  /**
   * `prisma.promotionModifierMarkup`: Exposes CRUD operations for the **PromotionModifierMarkup** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PromotionModifierMarkups
    * const promotionModifierMarkups = await prisma.promotionModifierMarkup.findMany()
    * ```
    */
  get promotionModifierMarkup(): Prisma.PromotionModifierMarkupDelegate<ExtArgs>;

  /**
   * `prisma.priceHistory`: Exposes CRUD operations for the **PriceHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PriceHistories
    * const priceHistories = await prisma.priceHistory.findMany()
    * ```
    */
  get priceHistory(): Prisma.PriceHistoryDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Company: 'Company',
    License: 'License',
    Branch: 'Branch',
    User: 'User',
    UserSession: 'UserSession',
    UserActivityLog: 'UserActivityLog',
    MenuCategory: 'MenuCategory',
    MenuProduct: 'MenuProduct',
    ProductImage: 'ProductImage',
    ModifierCategory: 'ModifierCategory',
    Modifier: 'Modifier',
    ProductModifierCategory: 'ProductModifierCategory',
    Promotion: 'Promotion',
    PromotionProduct: 'PromotionProduct',
    PromotionModifierMarkup: 'PromotionModifierMarkup',
    PriceHistory: 'PriceHistory'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "company" | "license" | "branch" | "user" | "userSession" | "userActivityLog" | "menuCategory" | "menuProduct" | "productImage" | "modifierCategory" | "modifier" | "productModifierCategory" | "promotion" | "promotionProduct" | "promotionModifierMarkup" | "priceHistory"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Company: {
        payload: Prisma.$CompanyPayload<ExtArgs>
        fields: Prisma.CompanyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CompanyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CompanyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          findFirst: {
            args: Prisma.CompanyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CompanyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          findMany: {
            args: Prisma.CompanyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>[]
          }
          create: {
            args: Prisma.CompanyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          createMany: {
            args: Prisma.CompanyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CompanyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>[]
          }
          delete: {
            args: Prisma.CompanyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          update: {
            args: Prisma.CompanyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          deleteMany: {
            args: Prisma.CompanyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CompanyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CompanyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          aggregate: {
            args: Prisma.CompanyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompany>
          }
          groupBy: {
            args: Prisma.CompanyGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompanyGroupByOutputType>[]
          }
          count: {
            args: Prisma.CompanyCountArgs<ExtArgs>
            result: $Utils.Optional<CompanyCountAggregateOutputType> | number
          }
        }
      }
      License: {
        payload: Prisma.$LicensePayload<ExtArgs>
        fields: Prisma.LicenseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LicenseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LicensePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LicenseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LicensePayload>
          }
          findFirst: {
            args: Prisma.LicenseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LicensePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LicenseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LicensePayload>
          }
          findMany: {
            args: Prisma.LicenseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LicensePayload>[]
          }
          create: {
            args: Prisma.LicenseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LicensePayload>
          }
          createMany: {
            args: Prisma.LicenseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LicenseCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LicensePayload>[]
          }
          delete: {
            args: Prisma.LicenseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LicensePayload>
          }
          update: {
            args: Prisma.LicenseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LicensePayload>
          }
          deleteMany: {
            args: Prisma.LicenseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LicenseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.LicenseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LicensePayload>
          }
          aggregate: {
            args: Prisma.LicenseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLicense>
          }
          groupBy: {
            args: Prisma.LicenseGroupByArgs<ExtArgs>
            result: $Utils.Optional<LicenseGroupByOutputType>[]
          }
          count: {
            args: Prisma.LicenseCountArgs<ExtArgs>
            result: $Utils.Optional<LicenseCountAggregateOutputType> | number
          }
        }
      }
      Branch: {
        payload: Prisma.$BranchPayload<ExtArgs>
        fields: Prisma.BranchFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BranchFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BranchPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BranchFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BranchPayload>
          }
          findFirst: {
            args: Prisma.BranchFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BranchPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BranchFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BranchPayload>
          }
          findMany: {
            args: Prisma.BranchFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BranchPayload>[]
          }
          create: {
            args: Prisma.BranchCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BranchPayload>
          }
          createMany: {
            args: Prisma.BranchCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BranchCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BranchPayload>[]
          }
          delete: {
            args: Prisma.BranchDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BranchPayload>
          }
          update: {
            args: Prisma.BranchUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BranchPayload>
          }
          deleteMany: {
            args: Prisma.BranchDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BranchUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BranchUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BranchPayload>
          }
          aggregate: {
            args: Prisma.BranchAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBranch>
          }
          groupBy: {
            args: Prisma.BranchGroupByArgs<ExtArgs>
            result: $Utils.Optional<BranchGroupByOutputType>[]
          }
          count: {
            args: Prisma.BranchCountArgs<ExtArgs>
            result: $Utils.Optional<BranchCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      UserSession: {
        payload: Prisma.$UserSessionPayload<ExtArgs>
        fields: Prisma.UserSessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserSessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserSessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          findFirst: {
            args: Prisma.UserSessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserSessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          findMany: {
            args: Prisma.UserSessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>[]
          }
          create: {
            args: Prisma.UserSessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          createMany: {
            args: Prisma.UserSessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserSessionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>[]
          }
          delete: {
            args: Prisma.UserSessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          update: {
            args: Prisma.UserSessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          deleteMany: {
            args: Prisma.UserSessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserSessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserSessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          aggregate: {
            args: Prisma.UserSessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserSession>
          }
          groupBy: {
            args: Prisma.UserSessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserSessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserSessionCountArgs<ExtArgs>
            result: $Utils.Optional<UserSessionCountAggregateOutputType> | number
          }
        }
      }
      UserActivityLog: {
        payload: Prisma.$UserActivityLogPayload<ExtArgs>
        fields: Prisma.UserActivityLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserActivityLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserActivityLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserActivityLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserActivityLogPayload>
          }
          findFirst: {
            args: Prisma.UserActivityLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserActivityLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserActivityLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserActivityLogPayload>
          }
          findMany: {
            args: Prisma.UserActivityLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserActivityLogPayload>[]
          }
          create: {
            args: Prisma.UserActivityLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserActivityLogPayload>
          }
          createMany: {
            args: Prisma.UserActivityLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserActivityLogCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserActivityLogPayload>[]
          }
          delete: {
            args: Prisma.UserActivityLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserActivityLogPayload>
          }
          update: {
            args: Prisma.UserActivityLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserActivityLogPayload>
          }
          deleteMany: {
            args: Prisma.UserActivityLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserActivityLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserActivityLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserActivityLogPayload>
          }
          aggregate: {
            args: Prisma.UserActivityLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserActivityLog>
          }
          groupBy: {
            args: Prisma.UserActivityLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserActivityLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserActivityLogCountArgs<ExtArgs>
            result: $Utils.Optional<UserActivityLogCountAggregateOutputType> | number
          }
        }
      }
      MenuCategory: {
        payload: Prisma.$MenuCategoryPayload<ExtArgs>
        fields: Prisma.MenuCategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MenuCategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuCategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MenuCategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuCategoryPayload>
          }
          findFirst: {
            args: Prisma.MenuCategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuCategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MenuCategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuCategoryPayload>
          }
          findMany: {
            args: Prisma.MenuCategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuCategoryPayload>[]
          }
          create: {
            args: Prisma.MenuCategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuCategoryPayload>
          }
          createMany: {
            args: Prisma.MenuCategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MenuCategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuCategoryPayload>[]
          }
          delete: {
            args: Prisma.MenuCategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuCategoryPayload>
          }
          update: {
            args: Prisma.MenuCategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuCategoryPayload>
          }
          deleteMany: {
            args: Prisma.MenuCategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MenuCategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MenuCategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuCategoryPayload>
          }
          aggregate: {
            args: Prisma.MenuCategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMenuCategory>
          }
          groupBy: {
            args: Prisma.MenuCategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<MenuCategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.MenuCategoryCountArgs<ExtArgs>
            result: $Utils.Optional<MenuCategoryCountAggregateOutputType> | number
          }
        }
      }
      MenuProduct: {
        payload: Prisma.$MenuProductPayload<ExtArgs>
        fields: Prisma.MenuProductFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MenuProductFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProductPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MenuProductFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProductPayload>
          }
          findFirst: {
            args: Prisma.MenuProductFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProductPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MenuProductFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProductPayload>
          }
          findMany: {
            args: Prisma.MenuProductFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProductPayload>[]
          }
          create: {
            args: Prisma.MenuProductCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProductPayload>
          }
          createMany: {
            args: Prisma.MenuProductCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MenuProductCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProductPayload>[]
          }
          delete: {
            args: Prisma.MenuProductDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProductPayload>
          }
          update: {
            args: Prisma.MenuProductUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProductPayload>
          }
          deleteMany: {
            args: Prisma.MenuProductDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MenuProductUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MenuProductUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuProductPayload>
          }
          aggregate: {
            args: Prisma.MenuProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMenuProduct>
          }
          groupBy: {
            args: Prisma.MenuProductGroupByArgs<ExtArgs>
            result: $Utils.Optional<MenuProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.MenuProductCountArgs<ExtArgs>
            result: $Utils.Optional<MenuProductCountAggregateOutputType> | number
          }
        }
      }
      ProductImage: {
        payload: Prisma.$ProductImagePayload<ExtArgs>
        fields: Prisma.ProductImageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductImageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductImageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          findFirst: {
            args: Prisma.ProductImageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductImageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          findMany: {
            args: Prisma.ProductImageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>[]
          }
          create: {
            args: Prisma.ProductImageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          createMany: {
            args: Prisma.ProductImageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductImageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>[]
          }
          delete: {
            args: Prisma.ProductImageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          update: {
            args: Prisma.ProductImageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          deleteMany: {
            args: Prisma.ProductImageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductImageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductImageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductImagePayload>
          }
          aggregate: {
            args: Prisma.ProductImageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductImage>
          }
          groupBy: {
            args: Prisma.ProductImageGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductImageGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductImageCountArgs<ExtArgs>
            result: $Utils.Optional<ProductImageCountAggregateOutputType> | number
          }
        }
      }
      ModifierCategory: {
        payload: Prisma.$ModifierCategoryPayload<ExtArgs>
        fields: Prisma.ModifierCategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ModifierCategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierCategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ModifierCategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierCategoryPayload>
          }
          findFirst: {
            args: Prisma.ModifierCategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierCategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ModifierCategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierCategoryPayload>
          }
          findMany: {
            args: Prisma.ModifierCategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierCategoryPayload>[]
          }
          create: {
            args: Prisma.ModifierCategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierCategoryPayload>
          }
          createMany: {
            args: Prisma.ModifierCategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ModifierCategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierCategoryPayload>[]
          }
          delete: {
            args: Prisma.ModifierCategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierCategoryPayload>
          }
          update: {
            args: Prisma.ModifierCategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierCategoryPayload>
          }
          deleteMany: {
            args: Prisma.ModifierCategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ModifierCategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ModifierCategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierCategoryPayload>
          }
          aggregate: {
            args: Prisma.ModifierCategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateModifierCategory>
          }
          groupBy: {
            args: Prisma.ModifierCategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<ModifierCategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.ModifierCategoryCountArgs<ExtArgs>
            result: $Utils.Optional<ModifierCategoryCountAggregateOutputType> | number
          }
        }
      }
      Modifier: {
        payload: Prisma.$ModifierPayload<ExtArgs>
        fields: Prisma.ModifierFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ModifierFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ModifierFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload>
          }
          findFirst: {
            args: Prisma.ModifierFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ModifierFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload>
          }
          findMany: {
            args: Prisma.ModifierFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload>[]
          }
          create: {
            args: Prisma.ModifierCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload>
          }
          createMany: {
            args: Prisma.ModifierCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ModifierCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload>[]
          }
          delete: {
            args: Prisma.ModifierDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload>
          }
          update: {
            args: Prisma.ModifierUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload>
          }
          deleteMany: {
            args: Prisma.ModifierDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ModifierUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ModifierUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload>
          }
          aggregate: {
            args: Prisma.ModifierAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateModifier>
          }
          groupBy: {
            args: Prisma.ModifierGroupByArgs<ExtArgs>
            result: $Utils.Optional<ModifierGroupByOutputType>[]
          }
          count: {
            args: Prisma.ModifierCountArgs<ExtArgs>
            result: $Utils.Optional<ModifierCountAggregateOutputType> | number
          }
        }
      }
      ProductModifierCategory: {
        payload: Prisma.$ProductModifierCategoryPayload<ExtArgs>
        fields: Prisma.ProductModifierCategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductModifierCategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductModifierCategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductModifierCategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductModifierCategoryPayload>
          }
          findFirst: {
            args: Prisma.ProductModifierCategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductModifierCategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductModifierCategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductModifierCategoryPayload>
          }
          findMany: {
            args: Prisma.ProductModifierCategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductModifierCategoryPayload>[]
          }
          create: {
            args: Prisma.ProductModifierCategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductModifierCategoryPayload>
          }
          createMany: {
            args: Prisma.ProductModifierCategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductModifierCategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductModifierCategoryPayload>[]
          }
          delete: {
            args: Prisma.ProductModifierCategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductModifierCategoryPayload>
          }
          update: {
            args: Prisma.ProductModifierCategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductModifierCategoryPayload>
          }
          deleteMany: {
            args: Prisma.ProductModifierCategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductModifierCategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductModifierCategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductModifierCategoryPayload>
          }
          aggregate: {
            args: Prisma.ProductModifierCategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductModifierCategory>
          }
          groupBy: {
            args: Prisma.ProductModifierCategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductModifierCategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductModifierCategoryCountArgs<ExtArgs>
            result: $Utils.Optional<ProductModifierCategoryCountAggregateOutputType> | number
          }
        }
      }
      Promotion: {
        payload: Prisma.$PromotionPayload<ExtArgs>
        fields: Prisma.PromotionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PromotionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PromotionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          findFirst: {
            args: Prisma.PromotionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PromotionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          findMany: {
            args: Prisma.PromotionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>[]
          }
          create: {
            args: Prisma.PromotionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          createMany: {
            args: Prisma.PromotionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PromotionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>[]
          }
          delete: {
            args: Prisma.PromotionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          update: {
            args: Prisma.PromotionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          deleteMany: {
            args: Prisma.PromotionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PromotionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PromotionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          aggregate: {
            args: Prisma.PromotionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePromotion>
          }
          groupBy: {
            args: Prisma.PromotionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PromotionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PromotionCountArgs<ExtArgs>
            result: $Utils.Optional<PromotionCountAggregateOutputType> | number
          }
        }
      }
      PromotionProduct: {
        payload: Prisma.$PromotionProductPayload<ExtArgs>
        fields: Prisma.PromotionProductFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PromotionProductFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionProductPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PromotionProductFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionProductPayload>
          }
          findFirst: {
            args: Prisma.PromotionProductFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionProductPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PromotionProductFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionProductPayload>
          }
          findMany: {
            args: Prisma.PromotionProductFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionProductPayload>[]
          }
          create: {
            args: Prisma.PromotionProductCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionProductPayload>
          }
          createMany: {
            args: Prisma.PromotionProductCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PromotionProductCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionProductPayload>[]
          }
          delete: {
            args: Prisma.PromotionProductDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionProductPayload>
          }
          update: {
            args: Prisma.PromotionProductUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionProductPayload>
          }
          deleteMany: {
            args: Prisma.PromotionProductDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PromotionProductUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PromotionProductUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionProductPayload>
          }
          aggregate: {
            args: Prisma.PromotionProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePromotionProduct>
          }
          groupBy: {
            args: Prisma.PromotionProductGroupByArgs<ExtArgs>
            result: $Utils.Optional<PromotionProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.PromotionProductCountArgs<ExtArgs>
            result: $Utils.Optional<PromotionProductCountAggregateOutputType> | number
          }
        }
      }
      PromotionModifierMarkup: {
        payload: Prisma.$PromotionModifierMarkupPayload<ExtArgs>
        fields: Prisma.PromotionModifierMarkupFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PromotionModifierMarkupFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionModifierMarkupPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PromotionModifierMarkupFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionModifierMarkupPayload>
          }
          findFirst: {
            args: Prisma.PromotionModifierMarkupFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionModifierMarkupPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PromotionModifierMarkupFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionModifierMarkupPayload>
          }
          findMany: {
            args: Prisma.PromotionModifierMarkupFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionModifierMarkupPayload>[]
          }
          create: {
            args: Prisma.PromotionModifierMarkupCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionModifierMarkupPayload>
          }
          createMany: {
            args: Prisma.PromotionModifierMarkupCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PromotionModifierMarkupCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionModifierMarkupPayload>[]
          }
          delete: {
            args: Prisma.PromotionModifierMarkupDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionModifierMarkupPayload>
          }
          update: {
            args: Prisma.PromotionModifierMarkupUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionModifierMarkupPayload>
          }
          deleteMany: {
            args: Prisma.PromotionModifierMarkupDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PromotionModifierMarkupUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PromotionModifierMarkupUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PromotionModifierMarkupPayload>
          }
          aggregate: {
            args: Prisma.PromotionModifierMarkupAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePromotionModifierMarkup>
          }
          groupBy: {
            args: Prisma.PromotionModifierMarkupGroupByArgs<ExtArgs>
            result: $Utils.Optional<PromotionModifierMarkupGroupByOutputType>[]
          }
          count: {
            args: Prisma.PromotionModifierMarkupCountArgs<ExtArgs>
            result: $Utils.Optional<PromotionModifierMarkupCountAggregateOutputType> | number
          }
        }
      }
      PriceHistory: {
        payload: Prisma.$PriceHistoryPayload<ExtArgs>
        fields: Prisma.PriceHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PriceHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PriceHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload>
          }
          findFirst: {
            args: Prisma.PriceHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PriceHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload>
          }
          findMany: {
            args: Prisma.PriceHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload>[]
          }
          create: {
            args: Prisma.PriceHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload>
          }
          createMany: {
            args: Prisma.PriceHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PriceHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload>[]
          }
          delete: {
            args: Prisma.PriceHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload>
          }
          update: {
            args: Prisma.PriceHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload>
          }
          deleteMany: {
            args: Prisma.PriceHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PriceHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PriceHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PriceHistoryPayload>
          }
          aggregate: {
            args: Prisma.PriceHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePriceHistory>
          }
          groupBy: {
            args: Prisma.PriceHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<PriceHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.PriceHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<PriceHistoryCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CompanyCountOutputType
   */

  export type CompanyCountOutputType = {
    branches: number
    licenses: number
    menuCategories: number
    menuProducts: number
    modifierCategories: number
    modifiers: number
    promotions: number
    users: number
  }

  export type CompanyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    branches?: boolean | CompanyCountOutputTypeCountBranchesArgs
    licenses?: boolean | CompanyCountOutputTypeCountLicensesArgs
    menuCategories?: boolean | CompanyCountOutputTypeCountMenuCategoriesArgs
    menuProducts?: boolean | CompanyCountOutputTypeCountMenuProductsArgs
    modifierCategories?: boolean | CompanyCountOutputTypeCountModifierCategoriesArgs
    modifiers?: boolean | CompanyCountOutputTypeCountModifiersArgs
    promotions?: boolean | CompanyCountOutputTypeCountPromotionsArgs
    users?: boolean | CompanyCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes
  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyCountOutputType
     */
    select?: CompanyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountBranchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BranchWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountLicensesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LicenseWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountMenuCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MenuCategoryWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountMenuProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MenuProductWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountModifierCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModifierCategoryWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountModifiersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModifierWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountPromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionWhereInput
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Count Type BranchCountOutputType
   */

  export type BranchCountOutputType = {
    users: number
  }

  export type BranchCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | BranchCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes
  /**
   * BranchCountOutputType without action
   */
  export type BranchCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BranchCountOutputType
     */
    select?: BranchCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BranchCountOutputType without action
   */
  export type BranchCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    activityLogs: number
    sessions: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    activityLogs?: boolean | UserCountOutputTypeCountActivityLogsArgs
    sessions?: boolean | UserCountOutputTypeCountSessionsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountActivityLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserActivityLogWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSessionWhereInput
  }


  /**
   * Count Type MenuCategoryCountOutputType
   */

  export type MenuCategoryCountOutputType = {
    products: number
  }

  export type MenuCategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | MenuCategoryCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * MenuCategoryCountOutputType without action
   */
  export type MenuCategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategoryCountOutputType
     */
    select?: MenuCategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MenuCategoryCountOutputType without action
   */
  export type MenuCategoryCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MenuProductWhereInput
  }


  /**
   * Count Type MenuProductCountOutputType
   */

  export type MenuProductCountOutputType = {
    modifierCategories: number
    promotionModifierMarkups: number
    promotionProducts: number
    productImages: number
  }

  export type MenuProductCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modifierCategories?: boolean | MenuProductCountOutputTypeCountModifierCategoriesArgs
    promotionModifierMarkups?: boolean | MenuProductCountOutputTypeCountPromotionModifierMarkupsArgs
    promotionProducts?: boolean | MenuProductCountOutputTypeCountPromotionProductsArgs
    productImages?: boolean | MenuProductCountOutputTypeCountProductImagesArgs
  }

  // Custom InputTypes
  /**
   * MenuProductCountOutputType without action
   */
  export type MenuProductCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProductCountOutputType
     */
    select?: MenuProductCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MenuProductCountOutputType without action
   */
  export type MenuProductCountOutputTypeCountModifierCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductModifierCategoryWhereInput
  }

  /**
   * MenuProductCountOutputType without action
   */
  export type MenuProductCountOutputTypeCountPromotionModifierMarkupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionModifierMarkupWhereInput
  }

  /**
   * MenuProductCountOutputType without action
   */
  export type MenuProductCountOutputTypeCountPromotionProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionProductWhereInput
  }

  /**
   * MenuProductCountOutputType without action
   */
  export type MenuProductCountOutputTypeCountProductImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductImageWhereInput
  }


  /**
   * Count Type ModifierCategoryCountOutputType
   */

  export type ModifierCategoryCountOutputType = {
    modifiers: number
    productCategories: number
  }

  export type ModifierCategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modifiers?: boolean | ModifierCategoryCountOutputTypeCountModifiersArgs
    productCategories?: boolean | ModifierCategoryCountOutputTypeCountProductCategoriesArgs
  }

  // Custom InputTypes
  /**
   * ModifierCategoryCountOutputType without action
   */
  export type ModifierCategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierCategoryCountOutputType
     */
    select?: ModifierCategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ModifierCategoryCountOutputType without action
   */
  export type ModifierCategoryCountOutputTypeCountModifiersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModifierWhereInput
  }

  /**
   * ModifierCategoryCountOutputType without action
   */
  export type ModifierCategoryCountOutputTypeCountProductCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductModifierCategoryWhereInput
  }


  /**
   * Count Type ModifierCountOutputType
   */

  export type ModifierCountOutputType = {
    promotionMarkups: number
  }

  export type ModifierCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotionMarkups?: boolean | ModifierCountOutputTypeCountPromotionMarkupsArgs
  }

  // Custom InputTypes
  /**
   * ModifierCountOutputType without action
   */
  export type ModifierCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierCountOutputType
     */
    select?: ModifierCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ModifierCountOutputType without action
   */
  export type ModifierCountOutputTypeCountPromotionMarkupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionModifierMarkupWhereInput
  }


  /**
   * Count Type PromotionCountOutputType
   */

  export type PromotionCountOutputType = {
    priceHistories: number
    modifierMarkups: number
    promotionProducts: number
  }

  export type PromotionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    priceHistories?: boolean | PromotionCountOutputTypeCountPriceHistoriesArgs
    modifierMarkups?: boolean | PromotionCountOutputTypeCountModifierMarkupsArgs
    promotionProducts?: boolean | PromotionCountOutputTypeCountPromotionProductsArgs
  }

  // Custom InputTypes
  /**
   * PromotionCountOutputType without action
   */
  export type PromotionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionCountOutputType
     */
    select?: PromotionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PromotionCountOutputType without action
   */
  export type PromotionCountOutputTypeCountPriceHistoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PriceHistoryWhereInput
  }

  /**
   * PromotionCountOutputType without action
   */
  export type PromotionCountOutputTypeCountModifierMarkupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionModifierMarkupWhereInput
  }

  /**
   * PromotionCountOutputType without action
   */
  export type PromotionCountOutputTypeCountPromotionProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionProductWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Company
   */

  export type AggregateCompany = {
    _count: CompanyCountAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  export type CompanyMinAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    logo: string | null
    businessType: string | null
    timezone: string | null
    defaultCurrency: string | null
    status: $Enums.CompanyStatus | null
    subscriptionPlan: string | null
    subscriptionExpiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type CompanyMaxAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    logo: string | null
    businessType: string | null
    timezone: string | null
    defaultCurrency: string | null
    status: $Enums.CompanyStatus | null
    subscriptionPlan: string | null
    subscriptionExpiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type CompanyCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    logo: number
    businessType: number
    timezone: number
    defaultCurrency: number
    status: number
    subscriptionPlan: number
    subscriptionExpiresAt: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    createdBy: number
    updatedBy: number
    _all: number
  }


  export type CompanyMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    logo?: true
    businessType?: true
    timezone?: true
    defaultCurrency?: true
    status?: true
    subscriptionPlan?: true
    subscriptionExpiresAt?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdBy?: true
    updatedBy?: true
  }

  export type CompanyMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    logo?: true
    businessType?: true
    timezone?: true
    defaultCurrency?: true
    status?: true
    subscriptionPlan?: true
    subscriptionExpiresAt?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdBy?: true
    updatedBy?: true
  }

  export type CompanyCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    logo?: true
    businessType?: true
    timezone?: true
    defaultCurrency?: true
    status?: true
    subscriptionPlan?: true
    subscriptionExpiresAt?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdBy?: true
    updatedBy?: true
    _all?: true
  }

  export type CompanyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Company to aggregate.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Companies
    **/
    _count?: true | CompanyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompanyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompanyMaxAggregateInputType
  }

  export type GetCompanyAggregateType<T extends CompanyAggregateArgs> = {
        [P in keyof T & keyof AggregateCompany]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompany[P]>
      : GetScalarType<T[P], AggregateCompany[P]>
  }




  export type CompanyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyWhereInput
    orderBy?: CompanyOrderByWithAggregationInput | CompanyOrderByWithAggregationInput[]
    by: CompanyScalarFieldEnum[] | CompanyScalarFieldEnum
    having?: CompanyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompanyCountAggregateInputType | true
    _min?: CompanyMinAggregateInputType
    _max?: CompanyMaxAggregateInputType
  }

  export type CompanyGroupByOutputType = {
    id: string
    name: string
    slug: string
    logo: string | null
    businessType: string | null
    timezone: string
    defaultCurrency: string
    status: $Enums.CompanyStatus
    subscriptionPlan: string | null
    subscriptionExpiresAt: Date | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
    _count: CompanyCountAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  type GetCompanyGroupByPayload<T extends CompanyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompanyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompanyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompanyGroupByOutputType[P]>
            : GetScalarType<T[P], CompanyGroupByOutputType[P]>
        }
      >
    >


  export type CompanySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    logo?: boolean
    businessType?: boolean
    timezone?: boolean
    defaultCurrency?: boolean
    status?: boolean
    subscriptionPlan?: boolean
    subscriptionExpiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    branches?: boolean | Company$branchesArgs<ExtArgs>
    licenses?: boolean | Company$licensesArgs<ExtArgs>
    menuCategories?: boolean | Company$menuCategoriesArgs<ExtArgs>
    menuProducts?: boolean | Company$menuProductsArgs<ExtArgs>
    modifierCategories?: boolean | Company$modifierCategoriesArgs<ExtArgs>
    modifiers?: boolean | Company$modifiersArgs<ExtArgs>
    promotions?: boolean | Company$promotionsArgs<ExtArgs>
    users?: boolean | Company$usersArgs<ExtArgs>
    _count?: boolean | CompanyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["company"]>

  export type CompanySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    logo?: boolean
    businessType?: boolean
    timezone?: boolean
    defaultCurrency?: boolean
    status?: boolean
    subscriptionPlan?: boolean
    subscriptionExpiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
  }, ExtArgs["result"]["company"]>

  export type CompanySelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
    logo?: boolean
    businessType?: boolean
    timezone?: boolean
    defaultCurrency?: boolean
    status?: boolean
    subscriptionPlan?: boolean
    subscriptionExpiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
  }

  export type CompanyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    branches?: boolean | Company$branchesArgs<ExtArgs>
    licenses?: boolean | Company$licensesArgs<ExtArgs>
    menuCategories?: boolean | Company$menuCategoriesArgs<ExtArgs>
    menuProducts?: boolean | Company$menuProductsArgs<ExtArgs>
    modifierCategories?: boolean | Company$modifierCategoriesArgs<ExtArgs>
    modifiers?: boolean | Company$modifiersArgs<ExtArgs>
    promotions?: boolean | Company$promotionsArgs<ExtArgs>
    users?: boolean | Company$usersArgs<ExtArgs>
    _count?: boolean | CompanyCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CompanyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CompanyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Company"
    objects: {
      branches: Prisma.$BranchPayload<ExtArgs>[]
      licenses: Prisma.$LicensePayload<ExtArgs>[]
      menuCategories: Prisma.$MenuCategoryPayload<ExtArgs>[]
      menuProducts: Prisma.$MenuProductPayload<ExtArgs>[]
      modifierCategories: Prisma.$ModifierCategoryPayload<ExtArgs>[]
      modifiers: Prisma.$ModifierPayload<ExtArgs>[]
      promotions: Prisma.$PromotionPayload<ExtArgs>[]
      users: Prisma.$UserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      slug: string
      logo: string | null
      businessType: string | null
      timezone: string
      defaultCurrency: string
      status: $Enums.CompanyStatus
      subscriptionPlan: string | null
      subscriptionExpiresAt: Date | null
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
      createdBy: string | null
      updatedBy: string | null
    }, ExtArgs["result"]["company"]>
    composites: {}
  }

  type CompanyGetPayload<S extends boolean | null | undefined | CompanyDefaultArgs> = $Result.GetResult<Prisma.$CompanyPayload, S>

  type CompanyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CompanyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CompanyCountAggregateInputType | true
    }

  export interface CompanyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Company'], meta: { name: 'Company' } }
    /**
     * Find zero or one Company that matches the filter.
     * @param {CompanyFindUniqueArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CompanyFindUniqueArgs>(args: SelectSubset<T, CompanyFindUniqueArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Company that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CompanyFindUniqueOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CompanyFindUniqueOrThrowArgs>(args: SelectSubset<T, CompanyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Company that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindFirstArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CompanyFindFirstArgs>(args?: SelectSubset<T, CompanyFindFirstArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Company that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindFirstOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CompanyFindFirstOrThrowArgs>(args?: SelectSubset<T, CompanyFindFirstOrThrowArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Companies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Companies
     * const companies = await prisma.company.findMany()
     * 
     * // Get first 10 Companies
     * const companies = await prisma.company.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const companyWithIdOnly = await prisma.company.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CompanyFindManyArgs>(args?: SelectSubset<T, CompanyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Company.
     * @param {CompanyCreateArgs} args - Arguments to create a Company.
     * @example
     * // Create one Company
     * const Company = await prisma.company.create({
     *   data: {
     *     // ... data to create a Company
     *   }
     * })
     * 
     */
    create<T extends CompanyCreateArgs>(args: SelectSubset<T, CompanyCreateArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Companies.
     * @param {CompanyCreateManyArgs} args - Arguments to create many Companies.
     * @example
     * // Create many Companies
     * const company = await prisma.company.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CompanyCreateManyArgs>(args?: SelectSubset<T, CompanyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Companies and returns the data saved in the database.
     * @param {CompanyCreateManyAndReturnArgs} args - Arguments to create many Companies.
     * @example
     * // Create many Companies
     * const company = await prisma.company.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Companies and only return the `id`
     * const companyWithIdOnly = await prisma.company.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CompanyCreateManyAndReturnArgs>(args?: SelectSubset<T, CompanyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Company.
     * @param {CompanyDeleteArgs} args - Arguments to delete one Company.
     * @example
     * // Delete one Company
     * const Company = await prisma.company.delete({
     *   where: {
     *     // ... filter to delete one Company
     *   }
     * })
     * 
     */
    delete<T extends CompanyDeleteArgs>(args: SelectSubset<T, CompanyDeleteArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Company.
     * @param {CompanyUpdateArgs} args - Arguments to update one Company.
     * @example
     * // Update one Company
     * const company = await prisma.company.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CompanyUpdateArgs>(args: SelectSubset<T, CompanyUpdateArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Companies.
     * @param {CompanyDeleteManyArgs} args - Arguments to filter Companies to delete.
     * @example
     * // Delete a few Companies
     * const { count } = await prisma.company.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CompanyDeleteManyArgs>(args?: SelectSubset<T, CompanyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Companies
     * const company = await prisma.company.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CompanyUpdateManyArgs>(args: SelectSubset<T, CompanyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Company.
     * @param {CompanyUpsertArgs} args - Arguments to update or create a Company.
     * @example
     * // Update or create a Company
     * const company = await prisma.company.upsert({
     *   create: {
     *     // ... data to create a Company
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Company we want to update
     *   }
     * })
     */
    upsert<T extends CompanyUpsertArgs>(args: SelectSubset<T, CompanyUpsertArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyCountArgs} args - Arguments to filter Companies to count.
     * @example
     * // Count the number of Companies
     * const count = await prisma.company.count({
     *   where: {
     *     // ... the filter for the Companies we want to count
     *   }
     * })
    **/
    count<T extends CompanyCountArgs>(
      args?: Subset<T, CompanyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompanyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompanyAggregateArgs>(args: Subset<T, CompanyAggregateArgs>): Prisma.PrismaPromise<GetCompanyAggregateType<T>>

    /**
     * Group by Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CompanyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CompanyGroupByArgs['orderBy'] }
        : { orderBy?: CompanyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CompanyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompanyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Company model
   */
  readonly fields: CompanyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Company.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CompanyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    branches<T extends Company$branchesArgs<ExtArgs> = {}>(args?: Subset<T, Company$branchesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BranchPayload<ExtArgs>, T, "findMany"> | Null>
    licenses<T extends Company$licensesArgs<ExtArgs> = {}>(args?: Subset<T, Company$licensesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LicensePayload<ExtArgs>, T, "findMany"> | Null>
    menuCategories<T extends Company$menuCategoriesArgs<ExtArgs> = {}>(args?: Subset<T, Company$menuCategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "findMany"> | Null>
    menuProducts<T extends Company$menuProductsArgs<ExtArgs> = {}>(args?: Subset<T, Company$menuProductsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MenuProductPayload<ExtArgs>, T, "findMany"> | Null>
    modifierCategories<T extends Company$modifierCategoriesArgs<ExtArgs> = {}>(args?: Subset<T, Company$modifierCategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModifierCategoryPayload<ExtArgs>, T, "findMany"> | Null>
    modifiers<T extends Company$modifiersArgs<ExtArgs> = {}>(args?: Subset<T, Company$modifiersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findMany"> | Null>
    promotions<T extends Company$promotionsArgs<ExtArgs> = {}>(args?: Subset<T, Company$promotionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findMany"> | Null>
    users<T extends Company$usersArgs<ExtArgs> = {}>(args?: Subset<T, Company$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Company model
   */ 
  interface CompanyFieldRefs {
    readonly id: FieldRef<"Company", 'String'>
    readonly name: FieldRef<"Company", 'String'>
    readonly slug: FieldRef<"Company", 'String'>
    readonly logo: FieldRef<"Company", 'String'>
    readonly businessType: FieldRef<"Company", 'String'>
    readonly timezone: FieldRef<"Company", 'String'>
    readonly defaultCurrency: FieldRef<"Company", 'String'>
    readonly status: FieldRef<"Company", 'CompanyStatus'>
    readonly subscriptionPlan: FieldRef<"Company", 'String'>
    readonly subscriptionExpiresAt: FieldRef<"Company", 'DateTime'>
    readonly createdAt: FieldRef<"Company", 'DateTime'>
    readonly updatedAt: FieldRef<"Company", 'DateTime'>
    readonly deletedAt: FieldRef<"Company", 'DateTime'>
    readonly createdBy: FieldRef<"Company", 'String'>
    readonly updatedBy: FieldRef<"Company", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Company findUnique
   */
  export type CompanyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company findUniqueOrThrow
   */
  export type CompanyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company findFirst
   */
  export type CompanyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company findFirstOrThrow
   */
  export type CompanyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company findMany
   */
  export type CompanyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Companies to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company create
   */
  export type CompanyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The data needed to create a Company.
     */
    data: XOR<CompanyCreateInput, CompanyUncheckedCreateInput>
  }

  /**
   * Company createMany
   */
  export type CompanyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Companies.
     */
    data: CompanyCreateManyInput | CompanyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Company createManyAndReturn
   */
  export type CompanyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Companies.
     */
    data: CompanyCreateManyInput | CompanyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Company update
   */
  export type CompanyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The data needed to update a Company.
     */
    data: XOR<CompanyUpdateInput, CompanyUncheckedUpdateInput>
    /**
     * Choose, which Company to update.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company updateMany
   */
  export type CompanyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Companies.
     */
    data: XOR<CompanyUpdateManyMutationInput, CompanyUncheckedUpdateManyInput>
    /**
     * Filter which Companies to update
     */
    where?: CompanyWhereInput
  }

  /**
   * Company upsert
   */
  export type CompanyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The filter to search for the Company to update in case it exists.
     */
    where: CompanyWhereUniqueInput
    /**
     * In case the Company found by the `where` argument doesn't exist, create a new Company with this data.
     */
    create: XOR<CompanyCreateInput, CompanyUncheckedCreateInput>
    /**
     * In case the Company was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CompanyUpdateInput, CompanyUncheckedUpdateInput>
  }

  /**
   * Company delete
   */
  export type CompanyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter which Company to delete.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company deleteMany
   */
  export type CompanyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Companies to delete
     */
    where?: CompanyWhereInput
  }

  /**
   * Company.branches
   */
  export type Company$branchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Branch
     */
    select?: BranchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BranchInclude<ExtArgs> | null
    where?: BranchWhereInput
    orderBy?: BranchOrderByWithRelationInput | BranchOrderByWithRelationInput[]
    cursor?: BranchWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BranchScalarFieldEnum | BranchScalarFieldEnum[]
  }

  /**
   * Company.licenses
   */
  export type Company$licensesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the License
     */
    select?: LicenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LicenseInclude<ExtArgs> | null
    where?: LicenseWhereInput
    orderBy?: LicenseOrderByWithRelationInput | LicenseOrderByWithRelationInput[]
    cursor?: LicenseWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LicenseScalarFieldEnum | LicenseScalarFieldEnum[]
  }

  /**
   * Company.menuCategories
   */
  export type Company$menuCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    where?: MenuCategoryWhereInput
    orderBy?: MenuCategoryOrderByWithRelationInput | MenuCategoryOrderByWithRelationInput[]
    cursor?: MenuCategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MenuCategoryScalarFieldEnum | MenuCategoryScalarFieldEnum[]
  }

  /**
   * Company.menuProducts
   */
  export type Company$menuProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProduct
     */
    select?: MenuProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProductInclude<ExtArgs> | null
    where?: MenuProductWhereInput
    orderBy?: MenuProductOrderByWithRelationInput | MenuProductOrderByWithRelationInput[]
    cursor?: MenuProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MenuProductScalarFieldEnum | MenuProductScalarFieldEnum[]
  }

  /**
   * Company.modifierCategories
   */
  export type Company$modifierCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierCategory
     */
    select?: ModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierCategoryInclude<ExtArgs> | null
    where?: ModifierCategoryWhereInput
    orderBy?: ModifierCategoryOrderByWithRelationInput | ModifierCategoryOrderByWithRelationInput[]
    cursor?: ModifierCategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ModifierCategoryScalarFieldEnum | ModifierCategoryScalarFieldEnum[]
  }

  /**
   * Company.modifiers
   */
  export type Company$modifiersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    where?: ModifierWhereInput
    orderBy?: ModifierOrderByWithRelationInput | ModifierOrderByWithRelationInput[]
    cursor?: ModifierWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ModifierScalarFieldEnum | ModifierScalarFieldEnum[]
  }

  /**
   * Company.promotions
   */
  export type Company$promotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    where?: PromotionWhereInput
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    cursor?: PromotionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Company.users
   */
  export type Company$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Company without action
   */
  export type CompanyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
  }


  /**
   * Model License
   */

  export type AggregateLicense = {
    _count: LicenseCountAggregateOutputType | null
    _avg: LicenseAvgAggregateOutputType | null
    _sum: LicenseSumAggregateOutputType | null
    _min: LicenseMinAggregateOutputType | null
    _max: LicenseMaxAggregateOutputType | null
  }

  export type LicenseAvgAggregateOutputType = {
    daysRemaining: number | null
    totalDays: number | null
  }

  export type LicenseSumAggregateOutputType = {
    daysRemaining: number | null
    totalDays: number | null
  }

  export type LicenseMinAggregateOutputType = {
    id: string | null
    companyId: string | null
    status: $Enums.LicenseStatus | null
    startDate: Date | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
    daysRemaining: number | null
    lastChecked: Date | null
    renewedAt: Date | null
    totalDays: number | null
  }

  export type LicenseMaxAggregateOutputType = {
    id: string | null
    companyId: string | null
    status: $Enums.LicenseStatus | null
    startDate: Date | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
    daysRemaining: number | null
    lastChecked: Date | null
    renewedAt: Date | null
    totalDays: number | null
  }

  export type LicenseCountAggregateOutputType = {
    id: number
    companyId: number
    status: number
    startDate: number
    expiresAt: number
    features: number
    createdAt: number
    updatedAt: number
    createdBy: number
    updatedBy: number
    daysRemaining: number
    lastChecked: number
    renewedAt: number
    totalDays: number
    _all: number
  }


  export type LicenseAvgAggregateInputType = {
    daysRemaining?: true
    totalDays?: true
  }

  export type LicenseSumAggregateInputType = {
    daysRemaining?: true
    totalDays?: true
  }

  export type LicenseMinAggregateInputType = {
    id?: true
    companyId?: true
    status?: true
    startDate?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
    daysRemaining?: true
    lastChecked?: true
    renewedAt?: true
    totalDays?: true
  }

  export type LicenseMaxAggregateInputType = {
    id?: true
    companyId?: true
    status?: true
    startDate?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
    daysRemaining?: true
    lastChecked?: true
    renewedAt?: true
    totalDays?: true
  }

  export type LicenseCountAggregateInputType = {
    id?: true
    companyId?: true
    status?: true
    startDate?: true
    expiresAt?: true
    features?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
    daysRemaining?: true
    lastChecked?: true
    renewedAt?: true
    totalDays?: true
    _all?: true
  }

  export type LicenseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which License to aggregate.
     */
    where?: LicenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Licenses to fetch.
     */
    orderBy?: LicenseOrderByWithRelationInput | LicenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LicenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Licenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Licenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Licenses
    **/
    _count?: true | LicenseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LicenseAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LicenseSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LicenseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LicenseMaxAggregateInputType
  }

  export type GetLicenseAggregateType<T extends LicenseAggregateArgs> = {
        [P in keyof T & keyof AggregateLicense]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLicense[P]>
      : GetScalarType<T[P], AggregateLicense[P]>
  }




  export type LicenseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LicenseWhereInput
    orderBy?: LicenseOrderByWithAggregationInput | LicenseOrderByWithAggregationInput[]
    by: LicenseScalarFieldEnum[] | LicenseScalarFieldEnum
    having?: LicenseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LicenseCountAggregateInputType | true
    _avg?: LicenseAvgAggregateInputType
    _sum?: LicenseSumAggregateInputType
    _min?: LicenseMinAggregateInputType
    _max?: LicenseMaxAggregateInputType
  }

  export type LicenseGroupByOutputType = {
    id: string
    companyId: string
    status: $Enums.LicenseStatus
    startDate: Date
    expiresAt: Date
    features: JsonValue | null
    createdAt: Date
    updatedAt: Date
    createdBy: string | null
    updatedBy: string | null
    daysRemaining: number
    lastChecked: Date | null
    renewedAt: Date | null
    totalDays: number
    _count: LicenseCountAggregateOutputType | null
    _avg: LicenseAvgAggregateOutputType | null
    _sum: LicenseSumAggregateOutputType | null
    _min: LicenseMinAggregateOutputType | null
    _max: LicenseMaxAggregateOutputType | null
  }

  type GetLicenseGroupByPayload<T extends LicenseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LicenseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LicenseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LicenseGroupByOutputType[P]>
            : GetScalarType<T[P], LicenseGroupByOutputType[P]>
        }
      >
    >


  export type LicenseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    status?: boolean
    startDate?: boolean
    expiresAt?: boolean
    features?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    daysRemaining?: boolean
    lastChecked?: boolean
    renewedAt?: boolean
    totalDays?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["license"]>

  export type LicenseSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    status?: boolean
    startDate?: boolean
    expiresAt?: boolean
    features?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    daysRemaining?: boolean
    lastChecked?: boolean
    renewedAt?: boolean
    totalDays?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["license"]>

  export type LicenseSelectScalar = {
    id?: boolean
    companyId?: boolean
    status?: boolean
    startDate?: boolean
    expiresAt?: boolean
    features?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    daysRemaining?: boolean
    lastChecked?: boolean
    renewedAt?: boolean
    totalDays?: boolean
  }

  export type LicenseInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }
  export type LicenseIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $LicensePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "License"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      companyId: string
      status: $Enums.LicenseStatus
      startDate: Date
      expiresAt: Date
      features: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
      createdBy: string | null
      updatedBy: string | null
      daysRemaining: number
      lastChecked: Date | null
      renewedAt: Date | null
      totalDays: number
    }, ExtArgs["result"]["license"]>
    composites: {}
  }

  type LicenseGetPayload<S extends boolean | null | undefined | LicenseDefaultArgs> = $Result.GetResult<Prisma.$LicensePayload, S>

  type LicenseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<LicenseFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: LicenseCountAggregateInputType | true
    }

  export interface LicenseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['License'], meta: { name: 'License' } }
    /**
     * Find zero or one License that matches the filter.
     * @param {LicenseFindUniqueArgs} args - Arguments to find a License
     * @example
     * // Get one License
     * const license = await prisma.license.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LicenseFindUniqueArgs>(args: SelectSubset<T, LicenseFindUniqueArgs<ExtArgs>>): Prisma__LicenseClient<$Result.GetResult<Prisma.$LicensePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one License that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {LicenseFindUniqueOrThrowArgs} args - Arguments to find a License
     * @example
     * // Get one License
     * const license = await prisma.license.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LicenseFindUniqueOrThrowArgs>(args: SelectSubset<T, LicenseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LicenseClient<$Result.GetResult<Prisma.$LicensePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first License that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LicenseFindFirstArgs} args - Arguments to find a License
     * @example
     * // Get one License
     * const license = await prisma.license.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LicenseFindFirstArgs>(args?: SelectSubset<T, LicenseFindFirstArgs<ExtArgs>>): Prisma__LicenseClient<$Result.GetResult<Prisma.$LicensePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first License that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LicenseFindFirstOrThrowArgs} args - Arguments to find a License
     * @example
     * // Get one License
     * const license = await prisma.license.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LicenseFindFirstOrThrowArgs>(args?: SelectSubset<T, LicenseFindFirstOrThrowArgs<ExtArgs>>): Prisma__LicenseClient<$Result.GetResult<Prisma.$LicensePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Licenses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LicenseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Licenses
     * const licenses = await prisma.license.findMany()
     * 
     * // Get first 10 Licenses
     * const licenses = await prisma.license.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const licenseWithIdOnly = await prisma.license.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LicenseFindManyArgs>(args?: SelectSubset<T, LicenseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LicensePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a License.
     * @param {LicenseCreateArgs} args - Arguments to create a License.
     * @example
     * // Create one License
     * const License = await prisma.license.create({
     *   data: {
     *     // ... data to create a License
     *   }
     * })
     * 
     */
    create<T extends LicenseCreateArgs>(args: SelectSubset<T, LicenseCreateArgs<ExtArgs>>): Prisma__LicenseClient<$Result.GetResult<Prisma.$LicensePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Licenses.
     * @param {LicenseCreateManyArgs} args - Arguments to create many Licenses.
     * @example
     * // Create many Licenses
     * const license = await prisma.license.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LicenseCreateManyArgs>(args?: SelectSubset<T, LicenseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Licenses and returns the data saved in the database.
     * @param {LicenseCreateManyAndReturnArgs} args - Arguments to create many Licenses.
     * @example
     * // Create many Licenses
     * const license = await prisma.license.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Licenses and only return the `id`
     * const licenseWithIdOnly = await prisma.license.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LicenseCreateManyAndReturnArgs>(args?: SelectSubset<T, LicenseCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LicensePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a License.
     * @param {LicenseDeleteArgs} args - Arguments to delete one License.
     * @example
     * // Delete one License
     * const License = await prisma.license.delete({
     *   where: {
     *     // ... filter to delete one License
     *   }
     * })
     * 
     */
    delete<T extends LicenseDeleteArgs>(args: SelectSubset<T, LicenseDeleteArgs<ExtArgs>>): Prisma__LicenseClient<$Result.GetResult<Prisma.$LicensePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one License.
     * @param {LicenseUpdateArgs} args - Arguments to update one License.
     * @example
     * // Update one License
     * const license = await prisma.license.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LicenseUpdateArgs>(args: SelectSubset<T, LicenseUpdateArgs<ExtArgs>>): Prisma__LicenseClient<$Result.GetResult<Prisma.$LicensePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Licenses.
     * @param {LicenseDeleteManyArgs} args - Arguments to filter Licenses to delete.
     * @example
     * // Delete a few Licenses
     * const { count } = await prisma.license.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LicenseDeleteManyArgs>(args?: SelectSubset<T, LicenseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Licenses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LicenseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Licenses
     * const license = await prisma.license.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LicenseUpdateManyArgs>(args: SelectSubset<T, LicenseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one License.
     * @param {LicenseUpsertArgs} args - Arguments to update or create a License.
     * @example
     * // Update or create a License
     * const license = await prisma.license.upsert({
     *   create: {
     *     // ... data to create a License
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the License we want to update
     *   }
     * })
     */
    upsert<T extends LicenseUpsertArgs>(args: SelectSubset<T, LicenseUpsertArgs<ExtArgs>>): Prisma__LicenseClient<$Result.GetResult<Prisma.$LicensePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Licenses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LicenseCountArgs} args - Arguments to filter Licenses to count.
     * @example
     * // Count the number of Licenses
     * const count = await prisma.license.count({
     *   where: {
     *     // ... the filter for the Licenses we want to count
     *   }
     * })
    **/
    count<T extends LicenseCountArgs>(
      args?: Subset<T, LicenseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LicenseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a License.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LicenseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LicenseAggregateArgs>(args: Subset<T, LicenseAggregateArgs>): Prisma.PrismaPromise<GetLicenseAggregateType<T>>

    /**
     * Group by License.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LicenseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LicenseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LicenseGroupByArgs['orderBy'] }
        : { orderBy?: LicenseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LicenseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLicenseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the License model
   */
  readonly fields: LicenseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for License.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LicenseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the License model
   */ 
  interface LicenseFieldRefs {
    readonly id: FieldRef<"License", 'String'>
    readonly companyId: FieldRef<"License", 'String'>
    readonly status: FieldRef<"License", 'LicenseStatus'>
    readonly startDate: FieldRef<"License", 'DateTime'>
    readonly expiresAt: FieldRef<"License", 'DateTime'>
    readonly features: FieldRef<"License", 'Json'>
    readonly createdAt: FieldRef<"License", 'DateTime'>
    readonly updatedAt: FieldRef<"License", 'DateTime'>
    readonly createdBy: FieldRef<"License", 'String'>
    readonly updatedBy: FieldRef<"License", 'String'>
    readonly daysRemaining: FieldRef<"License", 'Int'>
    readonly lastChecked: FieldRef<"License", 'DateTime'>
    readonly renewedAt: FieldRef<"License", 'DateTime'>
    readonly totalDays: FieldRef<"License", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * License findUnique
   */
  export type LicenseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the License
     */
    select?: LicenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LicenseInclude<ExtArgs> | null
    /**
     * Filter, which License to fetch.
     */
    where: LicenseWhereUniqueInput
  }

  /**
   * License findUniqueOrThrow
   */
  export type LicenseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the License
     */
    select?: LicenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LicenseInclude<ExtArgs> | null
    /**
     * Filter, which License to fetch.
     */
    where: LicenseWhereUniqueInput
  }

  /**
   * License findFirst
   */
  export type LicenseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the License
     */
    select?: LicenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LicenseInclude<ExtArgs> | null
    /**
     * Filter, which License to fetch.
     */
    where?: LicenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Licenses to fetch.
     */
    orderBy?: LicenseOrderByWithRelationInput | LicenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Licenses.
     */
    cursor?: LicenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Licenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Licenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Licenses.
     */
    distinct?: LicenseScalarFieldEnum | LicenseScalarFieldEnum[]
  }

  /**
   * License findFirstOrThrow
   */
  export type LicenseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the License
     */
    select?: LicenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LicenseInclude<ExtArgs> | null
    /**
     * Filter, which License to fetch.
     */
    where?: LicenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Licenses to fetch.
     */
    orderBy?: LicenseOrderByWithRelationInput | LicenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Licenses.
     */
    cursor?: LicenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Licenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Licenses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Licenses.
     */
    distinct?: LicenseScalarFieldEnum | LicenseScalarFieldEnum[]
  }

  /**
   * License findMany
   */
  export type LicenseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the License
     */
    select?: LicenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LicenseInclude<ExtArgs> | null
    /**
     * Filter, which Licenses to fetch.
     */
    where?: LicenseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Licenses to fetch.
     */
    orderBy?: LicenseOrderByWithRelationInput | LicenseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Licenses.
     */
    cursor?: LicenseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Licenses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Licenses.
     */
    skip?: number
    distinct?: LicenseScalarFieldEnum | LicenseScalarFieldEnum[]
  }

  /**
   * License create
   */
  export type LicenseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the License
     */
    select?: LicenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LicenseInclude<ExtArgs> | null
    /**
     * The data needed to create a License.
     */
    data: XOR<LicenseCreateInput, LicenseUncheckedCreateInput>
  }

  /**
   * License createMany
   */
  export type LicenseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Licenses.
     */
    data: LicenseCreateManyInput | LicenseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * License createManyAndReturn
   */
  export type LicenseCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the License
     */
    select?: LicenseSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Licenses.
     */
    data: LicenseCreateManyInput | LicenseCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LicenseIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * License update
   */
  export type LicenseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the License
     */
    select?: LicenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LicenseInclude<ExtArgs> | null
    /**
     * The data needed to update a License.
     */
    data: XOR<LicenseUpdateInput, LicenseUncheckedUpdateInput>
    /**
     * Choose, which License to update.
     */
    where: LicenseWhereUniqueInput
  }

  /**
   * License updateMany
   */
  export type LicenseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Licenses.
     */
    data: XOR<LicenseUpdateManyMutationInput, LicenseUncheckedUpdateManyInput>
    /**
     * Filter which Licenses to update
     */
    where?: LicenseWhereInput
  }

  /**
   * License upsert
   */
  export type LicenseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the License
     */
    select?: LicenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LicenseInclude<ExtArgs> | null
    /**
     * The filter to search for the License to update in case it exists.
     */
    where: LicenseWhereUniqueInput
    /**
     * In case the License found by the `where` argument doesn't exist, create a new License with this data.
     */
    create: XOR<LicenseCreateInput, LicenseUncheckedCreateInput>
    /**
     * In case the License was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LicenseUpdateInput, LicenseUncheckedUpdateInput>
  }

  /**
   * License delete
   */
  export type LicenseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the License
     */
    select?: LicenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LicenseInclude<ExtArgs> | null
    /**
     * Filter which License to delete.
     */
    where: LicenseWhereUniqueInput
  }

  /**
   * License deleteMany
   */
  export type LicenseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Licenses to delete
     */
    where?: LicenseWhereInput
  }

  /**
   * License without action
   */
  export type LicenseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the License
     */
    select?: LicenseSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LicenseInclude<ExtArgs> | null
  }


  /**
   * Model Branch
   */

  export type AggregateBranch = {
    _count: BranchCountAggregateOutputType | null
    _avg: BranchAvgAggregateOutputType | null
    _sum: BranchSumAggregateOutputType | null
    _min: BranchMinAggregateOutputType | null
    _max: BranchMaxAggregateOutputType | null
  }

  export type BranchAvgAggregateOutputType = {
    latitude: Decimal | null
    longitude: Decimal | null
  }

  export type BranchSumAggregateOutputType = {
    latitude: Decimal | null
    longitude: Decimal | null
  }

  export type BranchMinAggregateOutputType = {
    id: string | null
    companyId: string | null
    name: string | null
    phone: string | null
    email: string | null
    address: string | null
    city: string | null
    country: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    isDefault: boolean | null
    isActive: boolean | null
    allowsOnlineOrders: boolean | null
    allowsDelivery: boolean | null
    allowsPickup: boolean | null
    timezone: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
    nameAr: string | null
    openTime: string | null
    closeTime: string | null
  }

  export type BranchMaxAggregateOutputType = {
    id: string | null
    companyId: string | null
    name: string | null
    phone: string | null
    email: string | null
    address: string | null
    city: string | null
    country: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    isDefault: boolean | null
    isActive: boolean | null
    allowsOnlineOrders: boolean | null
    allowsDelivery: boolean | null
    allowsPickup: boolean | null
    timezone: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
    nameAr: string | null
    openTime: string | null
    closeTime: string | null
  }

  export type BranchCountAggregateOutputType = {
    id: number
    companyId: number
    name: number
    phone: number
    email: number
    address: number
    city: number
    country: number
    latitude: number
    longitude: number
    isDefault: number
    isActive: number
    allowsOnlineOrders: number
    allowsDelivery: number
    allowsPickup: number
    timezone: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    createdBy: number
    updatedBy: number
    nameAr: number
    openTime: number
    closeTime: number
    _all: number
  }


  export type BranchAvgAggregateInputType = {
    latitude?: true
    longitude?: true
  }

  export type BranchSumAggregateInputType = {
    latitude?: true
    longitude?: true
  }

  export type BranchMinAggregateInputType = {
    id?: true
    companyId?: true
    name?: true
    phone?: true
    email?: true
    address?: true
    city?: true
    country?: true
    latitude?: true
    longitude?: true
    isDefault?: true
    isActive?: true
    allowsOnlineOrders?: true
    allowsDelivery?: true
    allowsPickup?: true
    timezone?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdBy?: true
    updatedBy?: true
    nameAr?: true
    openTime?: true
    closeTime?: true
  }

  export type BranchMaxAggregateInputType = {
    id?: true
    companyId?: true
    name?: true
    phone?: true
    email?: true
    address?: true
    city?: true
    country?: true
    latitude?: true
    longitude?: true
    isDefault?: true
    isActive?: true
    allowsOnlineOrders?: true
    allowsDelivery?: true
    allowsPickup?: true
    timezone?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdBy?: true
    updatedBy?: true
    nameAr?: true
    openTime?: true
    closeTime?: true
  }

  export type BranchCountAggregateInputType = {
    id?: true
    companyId?: true
    name?: true
    phone?: true
    email?: true
    address?: true
    city?: true
    country?: true
    latitude?: true
    longitude?: true
    isDefault?: true
    isActive?: true
    allowsOnlineOrders?: true
    allowsDelivery?: true
    allowsPickup?: true
    timezone?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdBy?: true
    updatedBy?: true
    nameAr?: true
    openTime?: true
    closeTime?: true
    _all?: true
  }

  export type BranchAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Branch to aggregate.
     */
    where?: BranchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Branches to fetch.
     */
    orderBy?: BranchOrderByWithRelationInput | BranchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BranchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Branches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Branches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Branches
    **/
    _count?: true | BranchCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BranchAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BranchSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BranchMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BranchMaxAggregateInputType
  }

  export type GetBranchAggregateType<T extends BranchAggregateArgs> = {
        [P in keyof T & keyof AggregateBranch]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBranch[P]>
      : GetScalarType<T[P], AggregateBranch[P]>
  }




  export type BranchGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BranchWhereInput
    orderBy?: BranchOrderByWithAggregationInput | BranchOrderByWithAggregationInput[]
    by: BranchScalarFieldEnum[] | BranchScalarFieldEnum
    having?: BranchScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BranchCountAggregateInputType | true
    _avg?: BranchAvgAggregateInputType
    _sum?: BranchSumAggregateInputType
    _min?: BranchMinAggregateInputType
    _max?: BranchMaxAggregateInputType
  }

  export type BranchGroupByOutputType = {
    id: string
    companyId: string
    name: string
    phone: string | null
    email: string | null
    address: string | null
    city: string | null
    country: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    isDefault: boolean
    isActive: boolean
    allowsOnlineOrders: boolean
    allowsDelivery: boolean
    allowsPickup: boolean
    timezone: string
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
    nameAr: string
    openTime: string | null
    closeTime: string | null
    _count: BranchCountAggregateOutputType | null
    _avg: BranchAvgAggregateOutputType | null
    _sum: BranchSumAggregateOutputType | null
    _min: BranchMinAggregateOutputType | null
    _max: BranchMaxAggregateOutputType | null
  }

  type GetBranchGroupByPayload<T extends BranchGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BranchGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BranchGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BranchGroupByOutputType[P]>
            : GetScalarType<T[P], BranchGroupByOutputType[P]>
        }
      >
    >


  export type BranchSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    name?: boolean
    phone?: boolean
    email?: boolean
    address?: boolean
    city?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    isDefault?: boolean
    isActive?: boolean
    allowsOnlineOrders?: boolean
    allowsDelivery?: boolean
    allowsPickup?: boolean
    timezone?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    nameAr?: boolean
    openTime?: boolean
    closeTime?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    users?: boolean | Branch$usersArgs<ExtArgs>
    _count?: boolean | BranchCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["branch"]>

  export type BranchSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    name?: boolean
    phone?: boolean
    email?: boolean
    address?: boolean
    city?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    isDefault?: boolean
    isActive?: boolean
    allowsOnlineOrders?: boolean
    allowsDelivery?: boolean
    allowsPickup?: boolean
    timezone?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    nameAr?: boolean
    openTime?: boolean
    closeTime?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["branch"]>

  export type BranchSelectScalar = {
    id?: boolean
    companyId?: boolean
    name?: boolean
    phone?: boolean
    email?: boolean
    address?: boolean
    city?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    isDefault?: boolean
    isActive?: boolean
    allowsOnlineOrders?: boolean
    allowsDelivery?: boolean
    allowsPickup?: boolean
    timezone?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    nameAr?: boolean
    openTime?: boolean
    closeTime?: boolean
  }

  export type BranchInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    users?: boolean | Branch$usersArgs<ExtArgs>
    _count?: boolean | BranchCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BranchIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $BranchPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Branch"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
      users: Prisma.$UserPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      companyId: string
      name: string
      phone: string | null
      email: string | null
      address: string | null
      city: string | null
      country: string | null
      latitude: Prisma.Decimal | null
      longitude: Prisma.Decimal | null
      isDefault: boolean
      isActive: boolean
      allowsOnlineOrders: boolean
      allowsDelivery: boolean
      allowsPickup: boolean
      timezone: string
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
      createdBy: string | null
      updatedBy: string | null
      nameAr: string
      openTime: string | null
      closeTime: string | null
    }, ExtArgs["result"]["branch"]>
    composites: {}
  }

  type BranchGetPayload<S extends boolean | null | undefined | BranchDefaultArgs> = $Result.GetResult<Prisma.$BranchPayload, S>

  type BranchCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BranchFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BranchCountAggregateInputType | true
    }

  export interface BranchDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Branch'], meta: { name: 'Branch' } }
    /**
     * Find zero or one Branch that matches the filter.
     * @param {BranchFindUniqueArgs} args - Arguments to find a Branch
     * @example
     * // Get one Branch
     * const branch = await prisma.branch.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BranchFindUniqueArgs>(args: SelectSubset<T, BranchFindUniqueArgs<ExtArgs>>): Prisma__BranchClient<$Result.GetResult<Prisma.$BranchPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Branch that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BranchFindUniqueOrThrowArgs} args - Arguments to find a Branch
     * @example
     * // Get one Branch
     * const branch = await prisma.branch.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BranchFindUniqueOrThrowArgs>(args: SelectSubset<T, BranchFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BranchClient<$Result.GetResult<Prisma.$BranchPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Branch that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BranchFindFirstArgs} args - Arguments to find a Branch
     * @example
     * // Get one Branch
     * const branch = await prisma.branch.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BranchFindFirstArgs>(args?: SelectSubset<T, BranchFindFirstArgs<ExtArgs>>): Prisma__BranchClient<$Result.GetResult<Prisma.$BranchPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Branch that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BranchFindFirstOrThrowArgs} args - Arguments to find a Branch
     * @example
     * // Get one Branch
     * const branch = await prisma.branch.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BranchFindFirstOrThrowArgs>(args?: SelectSubset<T, BranchFindFirstOrThrowArgs<ExtArgs>>): Prisma__BranchClient<$Result.GetResult<Prisma.$BranchPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Branches that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BranchFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Branches
     * const branches = await prisma.branch.findMany()
     * 
     * // Get first 10 Branches
     * const branches = await prisma.branch.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const branchWithIdOnly = await prisma.branch.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BranchFindManyArgs>(args?: SelectSubset<T, BranchFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BranchPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Branch.
     * @param {BranchCreateArgs} args - Arguments to create a Branch.
     * @example
     * // Create one Branch
     * const Branch = await prisma.branch.create({
     *   data: {
     *     // ... data to create a Branch
     *   }
     * })
     * 
     */
    create<T extends BranchCreateArgs>(args: SelectSubset<T, BranchCreateArgs<ExtArgs>>): Prisma__BranchClient<$Result.GetResult<Prisma.$BranchPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Branches.
     * @param {BranchCreateManyArgs} args - Arguments to create many Branches.
     * @example
     * // Create many Branches
     * const branch = await prisma.branch.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BranchCreateManyArgs>(args?: SelectSubset<T, BranchCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Branches and returns the data saved in the database.
     * @param {BranchCreateManyAndReturnArgs} args - Arguments to create many Branches.
     * @example
     * // Create many Branches
     * const branch = await prisma.branch.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Branches and only return the `id`
     * const branchWithIdOnly = await prisma.branch.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BranchCreateManyAndReturnArgs>(args?: SelectSubset<T, BranchCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BranchPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Branch.
     * @param {BranchDeleteArgs} args - Arguments to delete one Branch.
     * @example
     * // Delete one Branch
     * const Branch = await prisma.branch.delete({
     *   where: {
     *     // ... filter to delete one Branch
     *   }
     * })
     * 
     */
    delete<T extends BranchDeleteArgs>(args: SelectSubset<T, BranchDeleteArgs<ExtArgs>>): Prisma__BranchClient<$Result.GetResult<Prisma.$BranchPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Branch.
     * @param {BranchUpdateArgs} args - Arguments to update one Branch.
     * @example
     * // Update one Branch
     * const branch = await prisma.branch.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BranchUpdateArgs>(args: SelectSubset<T, BranchUpdateArgs<ExtArgs>>): Prisma__BranchClient<$Result.GetResult<Prisma.$BranchPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Branches.
     * @param {BranchDeleteManyArgs} args - Arguments to filter Branches to delete.
     * @example
     * // Delete a few Branches
     * const { count } = await prisma.branch.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BranchDeleteManyArgs>(args?: SelectSubset<T, BranchDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Branches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BranchUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Branches
     * const branch = await prisma.branch.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BranchUpdateManyArgs>(args: SelectSubset<T, BranchUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Branch.
     * @param {BranchUpsertArgs} args - Arguments to update or create a Branch.
     * @example
     * // Update or create a Branch
     * const branch = await prisma.branch.upsert({
     *   create: {
     *     // ... data to create a Branch
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Branch we want to update
     *   }
     * })
     */
    upsert<T extends BranchUpsertArgs>(args: SelectSubset<T, BranchUpsertArgs<ExtArgs>>): Prisma__BranchClient<$Result.GetResult<Prisma.$BranchPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Branches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BranchCountArgs} args - Arguments to filter Branches to count.
     * @example
     * // Count the number of Branches
     * const count = await prisma.branch.count({
     *   where: {
     *     // ... the filter for the Branches we want to count
     *   }
     * })
    **/
    count<T extends BranchCountArgs>(
      args?: Subset<T, BranchCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BranchCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Branch.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BranchAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BranchAggregateArgs>(args: Subset<T, BranchAggregateArgs>): Prisma.PrismaPromise<GetBranchAggregateType<T>>

    /**
     * Group by Branch.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BranchGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BranchGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BranchGroupByArgs['orderBy'] }
        : { orderBy?: BranchGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BranchGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBranchGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Branch model
   */
  readonly fields: BranchFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Branch.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BranchClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    users<T extends Branch$usersArgs<ExtArgs> = {}>(args?: Subset<T, Branch$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Branch model
   */ 
  interface BranchFieldRefs {
    readonly id: FieldRef<"Branch", 'String'>
    readonly companyId: FieldRef<"Branch", 'String'>
    readonly name: FieldRef<"Branch", 'String'>
    readonly phone: FieldRef<"Branch", 'String'>
    readonly email: FieldRef<"Branch", 'String'>
    readonly address: FieldRef<"Branch", 'String'>
    readonly city: FieldRef<"Branch", 'String'>
    readonly country: FieldRef<"Branch", 'String'>
    readonly latitude: FieldRef<"Branch", 'Decimal'>
    readonly longitude: FieldRef<"Branch", 'Decimal'>
    readonly isDefault: FieldRef<"Branch", 'Boolean'>
    readonly isActive: FieldRef<"Branch", 'Boolean'>
    readonly allowsOnlineOrders: FieldRef<"Branch", 'Boolean'>
    readonly allowsDelivery: FieldRef<"Branch", 'Boolean'>
    readonly allowsPickup: FieldRef<"Branch", 'Boolean'>
    readonly timezone: FieldRef<"Branch", 'String'>
    readonly createdAt: FieldRef<"Branch", 'DateTime'>
    readonly updatedAt: FieldRef<"Branch", 'DateTime'>
    readonly deletedAt: FieldRef<"Branch", 'DateTime'>
    readonly createdBy: FieldRef<"Branch", 'String'>
    readonly updatedBy: FieldRef<"Branch", 'String'>
    readonly nameAr: FieldRef<"Branch", 'String'>
    readonly openTime: FieldRef<"Branch", 'String'>
    readonly closeTime: FieldRef<"Branch", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Branch findUnique
   */
  export type BranchFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Branch
     */
    select?: BranchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BranchInclude<ExtArgs> | null
    /**
     * Filter, which Branch to fetch.
     */
    where: BranchWhereUniqueInput
  }

  /**
   * Branch findUniqueOrThrow
   */
  export type BranchFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Branch
     */
    select?: BranchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BranchInclude<ExtArgs> | null
    /**
     * Filter, which Branch to fetch.
     */
    where: BranchWhereUniqueInput
  }

  /**
   * Branch findFirst
   */
  export type BranchFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Branch
     */
    select?: BranchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BranchInclude<ExtArgs> | null
    /**
     * Filter, which Branch to fetch.
     */
    where?: BranchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Branches to fetch.
     */
    orderBy?: BranchOrderByWithRelationInput | BranchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Branches.
     */
    cursor?: BranchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Branches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Branches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Branches.
     */
    distinct?: BranchScalarFieldEnum | BranchScalarFieldEnum[]
  }

  /**
   * Branch findFirstOrThrow
   */
  export type BranchFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Branch
     */
    select?: BranchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BranchInclude<ExtArgs> | null
    /**
     * Filter, which Branch to fetch.
     */
    where?: BranchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Branches to fetch.
     */
    orderBy?: BranchOrderByWithRelationInput | BranchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Branches.
     */
    cursor?: BranchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Branches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Branches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Branches.
     */
    distinct?: BranchScalarFieldEnum | BranchScalarFieldEnum[]
  }

  /**
   * Branch findMany
   */
  export type BranchFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Branch
     */
    select?: BranchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BranchInclude<ExtArgs> | null
    /**
     * Filter, which Branches to fetch.
     */
    where?: BranchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Branches to fetch.
     */
    orderBy?: BranchOrderByWithRelationInput | BranchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Branches.
     */
    cursor?: BranchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Branches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Branches.
     */
    skip?: number
    distinct?: BranchScalarFieldEnum | BranchScalarFieldEnum[]
  }

  /**
   * Branch create
   */
  export type BranchCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Branch
     */
    select?: BranchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BranchInclude<ExtArgs> | null
    /**
     * The data needed to create a Branch.
     */
    data: XOR<BranchCreateInput, BranchUncheckedCreateInput>
  }

  /**
   * Branch createMany
   */
  export type BranchCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Branches.
     */
    data: BranchCreateManyInput | BranchCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Branch createManyAndReturn
   */
  export type BranchCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Branch
     */
    select?: BranchSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Branches.
     */
    data: BranchCreateManyInput | BranchCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BranchIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Branch update
   */
  export type BranchUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Branch
     */
    select?: BranchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BranchInclude<ExtArgs> | null
    /**
     * The data needed to update a Branch.
     */
    data: XOR<BranchUpdateInput, BranchUncheckedUpdateInput>
    /**
     * Choose, which Branch to update.
     */
    where: BranchWhereUniqueInput
  }

  /**
   * Branch updateMany
   */
  export type BranchUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Branches.
     */
    data: XOR<BranchUpdateManyMutationInput, BranchUncheckedUpdateManyInput>
    /**
     * Filter which Branches to update
     */
    where?: BranchWhereInput
  }

  /**
   * Branch upsert
   */
  export type BranchUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Branch
     */
    select?: BranchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BranchInclude<ExtArgs> | null
    /**
     * The filter to search for the Branch to update in case it exists.
     */
    where: BranchWhereUniqueInput
    /**
     * In case the Branch found by the `where` argument doesn't exist, create a new Branch with this data.
     */
    create: XOR<BranchCreateInput, BranchUncheckedCreateInput>
    /**
     * In case the Branch was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BranchUpdateInput, BranchUncheckedUpdateInput>
  }

  /**
   * Branch delete
   */
  export type BranchDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Branch
     */
    select?: BranchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BranchInclude<ExtArgs> | null
    /**
     * Filter which Branch to delete.
     */
    where: BranchWhereUniqueInput
  }

  /**
   * Branch deleteMany
   */
  export type BranchDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Branches to delete
     */
    where?: BranchWhereInput
  }

  /**
   * Branch.users
   */
  export type Branch$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Branch without action
   */
  export type BranchDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Branch
     */
    select?: BranchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BranchInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    failedLoginAttempts: number | null
  }

  export type UserSumAggregateOutputType = {
    failedLoginAttempts: number | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    phone: string | null
    avatarUrl: string | null
    passwordHash: string | null
    pin: string | null
    emailVerifiedAt: Date | null
    role: $Enums.UserRole | null
    status: $Enums.UserStatus | null
    companyId: string | null
    branchId: string | null
    language: string | null
    timezone: string | null
    lastLoginAt: Date | null
    lastLoginIp: string | null
    failedLoginAttempts: number | null
    lockedUntil: Date | null
    mustChangePassword: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
    firstName: string | null
    lastName: string | null
    username: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    phone: string | null
    avatarUrl: string | null
    passwordHash: string | null
    pin: string | null
    emailVerifiedAt: Date | null
    role: $Enums.UserRole | null
    status: $Enums.UserStatus | null
    companyId: string | null
    branchId: string | null
    language: string | null
    timezone: string | null
    lastLoginAt: Date | null
    lastLoginIp: string | null
    failedLoginAttempts: number | null
    lockedUntil: Date | null
    mustChangePassword: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
    firstName: string | null
    lastName: string | null
    username: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    name: number
    email: number
    phone: number
    avatarUrl: number
    passwordHash: number
    pin: number
    emailVerifiedAt: number
    role: number
    status: number
    companyId: number
    branchId: number
    language: number
    timezone: number
    lastLoginAt: number
    lastLoginIp: number
    failedLoginAttempts: number
    lockedUntil: number
    mustChangePassword: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    createdBy: number
    updatedBy: number
    firstName: number
    lastName: number
    username: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    failedLoginAttempts?: true
  }

  export type UserSumAggregateInputType = {
    failedLoginAttempts?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    phone?: true
    avatarUrl?: true
    passwordHash?: true
    pin?: true
    emailVerifiedAt?: true
    role?: true
    status?: true
    companyId?: true
    branchId?: true
    language?: true
    timezone?: true
    lastLoginAt?: true
    lastLoginIp?: true
    failedLoginAttempts?: true
    lockedUntil?: true
    mustChangePassword?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdBy?: true
    updatedBy?: true
    firstName?: true
    lastName?: true
    username?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    phone?: true
    avatarUrl?: true
    passwordHash?: true
    pin?: true
    emailVerifiedAt?: true
    role?: true
    status?: true
    companyId?: true
    branchId?: true
    language?: true
    timezone?: true
    lastLoginAt?: true
    lastLoginIp?: true
    failedLoginAttempts?: true
    lockedUntil?: true
    mustChangePassword?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdBy?: true
    updatedBy?: true
    firstName?: true
    lastName?: true
    username?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    phone?: true
    avatarUrl?: true
    passwordHash?: true
    pin?: true
    emailVerifiedAt?: true
    role?: true
    status?: true
    companyId?: true
    branchId?: true
    language?: true
    timezone?: true
    lastLoginAt?: true
    lastLoginIp?: true
    failedLoginAttempts?: true
    lockedUntil?: true
    mustChangePassword?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdBy?: true
    updatedBy?: true
    firstName?: true
    lastName?: true
    username?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    name: string
    email: string
    phone: string | null
    avatarUrl: string | null
    passwordHash: string
    pin: string | null
    emailVerifiedAt: Date | null
    role: $Enums.UserRole
    status: $Enums.UserStatus
    companyId: string
    branchId: string | null
    language: string
    timezone: string
    lastLoginAt: Date | null
    lastLoginIp: string | null
    failedLoginAttempts: number
    lockedUntil: Date | null
    mustChangePassword: boolean
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
    firstName: string | null
    lastName: string | null
    username: string | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    avatarUrl?: boolean
    passwordHash?: boolean
    pin?: boolean
    emailVerifiedAt?: boolean
    role?: boolean
    status?: boolean
    companyId?: boolean
    branchId?: boolean
    language?: boolean
    timezone?: boolean
    lastLoginAt?: boolean
    lastLoginIp?: boolean
    failedLoginAttempts?: boolean
    lockedUntil?: boolean
    mustChangePassword?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    firstName?: boolean
    lastName?: boolean
    username?: boolean
    activityLogs?: boolean | User$activityLogsArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    branch?: boolean | User$branchArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    avatarUrl?: boolean
    passwordHash?: boolean
    pin?: boolean
    emailVerifiedAt?: boolean
    role?: boolean
    status?: boolean
    companyId?: boolean
    branchId?: boolean
    language?: boolean
    timezone?: boolean
    lastLoginAt?: boolean
    lastLoginIp?: boolean
    failedLoginAttempts?: boolean
    lockedUntil?: boolean
    mustChangePassword?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    firstName?: boolean
    lastName?: boolean
    username?: boolean
    branch?: boolean | User$branchArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    phone?: boolean
    avatarUrl?: boolean
    passwordHash?: boolean
    pin?: boolean
    emailVerifiedAt?: boolean
    role?: boolean
    status?: boolean
    companyId?: boolean
    branchId?: boolean
    language?: boolean
    timezone?: boolean
    lastLoginAt?: boolean
    lastLoginIp?: boolean
    failedLoginAttempts?: boolean
    lockedUntil?: boolean
    mustChangePassword?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    firstName?: boolean
    lastName?: boolean
    username?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    activityLogs?: boolean | User$activityLogsArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    branch?: boolean | User$branchArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    branch?: boolean | User$branchArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      activityLogs: Prisma.$UserActivityLogPayload<ExtArgs>[]
      sessions: Prisma.$UserSessionPayload<ExtArgs>[]
      branch: Prisma.$BranchPayload<ExtArgs> | null
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      email: string
      phone: string | null
      avatarUrl: string | null
      passwordHash: string
      pin: string | null
      emailVerifiedAt: Date | null
      role: $Enums.UserRole
      status: $Enums.UserStatus
      companyId: string
      branchId: string | null
      language: string
      timezone: string
      lastLoginAt: Date | null
      lastLoginIp: string | null
      failedLoginAttempts: number
      lockedUntil: Date | null
      mustChangePassword: boolean
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
      createdBy: string | null
      updatedBy: string | null
      firstName: string | null
      lastName: string | null
      username: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    activityLogs<T extends User$activityLogsArgs<ExtArgs> = {}>(args?: Subset<T, User$activityLogsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserActivityLogPayload<ExtArgs>, T, "findMany"> | Null>
    sessions<T extends User$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, User$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findMany"> | Null>
    branch<T extends User$branchArgs<ExtArgs> = {}>(args?: Subset<T, User$branchArgs<ExtArgs>>): Prisma__BranchClient<$Result.GetResult<Prisma.$BranchPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly phone: FieldRef<"User", 'String'>
    readonly avatarUrl: FieldRef<"User", 'String'>
    readonly passwordHash: FieldRef<"User", 'String'>
    readonly pin: FieldRef<"User", 'String'>
    readonly emailVerifiedAt: FieldRef<"User", 'DateTime'>
    readonly role: FieldRef<"User", 'UserRole'>
    readonly status: FieldRef<"User", 'UserStatus'>
    readonly companyId: FieldRef<"User", 'String'>
    readonly branchId: FieldRef<"User", 'String'>
    readonly language: FieldRef<"User", 'String'>
    readonly timezone: FieldRef<"User", 'String'>
    readonly lastLoginAt: FieldRef<"User", 'DateTime'>
    readonly lastLoginIp: FieldRef<"User", 'String'>
    readonly failedLoginAttempts: FieldRef<"User", 'Int'>
    readonly lockedUntil: FieldRef<"User", 'DateTime'>
    readonly mustChangePassword: FieldRef<"User", 'Boolean'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly deletedAt: FieldRef<"User", 'DateTime'>
    readonly createdBy: FieldRef<"User", 'String'>
    readonly updatedBy: FieldRef<"User", 'String'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly username: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User.activityLogs
   */
  export type User$activityLogsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserActivityLog
     */
    select?: UserActivityLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserActivityLogInclude<ExtArgs> | null
    where?: UserActivityLogWhereInput
    orderBy?: UserActivityLogOrderByWithRelationInput | UserActivityLogOrderByWithRelationInput[]
    cursor?: UserActivityLogWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserActivityLogScalarFieldEnum | UserActivityLogScalarFieldEnum[]
  }

  /**
   * User.sessions
   */
  export type User$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    where?: UserSessionWhereInput
    orderBy?: UserSessionOrderByWithRelationInput | UserSessionOrderByWithRelationInput[]
    cursor?: UserSessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserSessionScalarFieldEnum | UserSessionScalarFieldEnum[]
  }

  /**
   * User.branch
   */
  export type User$branchArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Branch
     */
    select?: BranchSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BranchInclude<ExtArgs> | null
    where?: BranchWhereInput
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model UserSession
   */

  export type AggregateUserSession = {
    _count: UserSessionCountAggregateOutputType | null
    _min: UserSessionMinAggregateOutputType | null
    _max: UserSessionMaxAggregateOutputType | null
  }

  export type UserSessionMinAggregateOutputType = {
    id: string | null
    userId: string | null
    tokenHash: string | null
    refreshTokenHash: string | null
    expiresAt: Date | null
    refreshExpiresAt: Date | null
    ipAddress: string | null
    userAgent: string | null
    deviceType: string | null
    isActive: boolean | null
    revokedAt: Date | null
    createdAt: Date | null
    lastUsedAt: Date | null
  }

  export type UserSessionMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    tokenHash: string | null
    refreshTokenHash: string | null
    expiresAt: Date | null
    refreshExpiresAt: Date | null
    ipAddress: string | null
    userAgent: string | null
    deviceType: string | null
    isActive: boolean | null
    revokedAt: Date | null
    createdAt: Date | null
    lastUsedAt: Date | null
  }

  export type UserSessionCountAggregateOutputType = {
    id: number
    userId: number
    tokenHash: number
    refreshTokenHash: number
    expiresAt: number
    refreshExpiresAt: number
    ipAddress: number
    userAgent: number
    deviceType: number
    isActive: number
    revokedAt: number
    createdAt: number
    lastUsedAt: number
    _all: number
  }


  export type UserSessionMinAggregateInputType = {
    id?: true
    userId?: true
    tokenHash?: true
    refreshTokenHash?: true
    expiresAt?: true
    refreshExpiresAt?: true
    ipAddress?: true
    userAgent?: true
    deviceType?: true
    isActive?: true
    revokedAt?: true
    createdAt?: true
    lastUsedAt?: true
  }

  export type UserSessionMaxAggregateInputType = {
    id?: true
    userId?: true
    tokenHash?: true
    refreshTokenHash?: true
    expiresAt?: true
    refreshExpiresAt?: true
    ipAddress?: true
    userAgent?: true
    deviceType?: true
    isActive?: true
    revokedAt?: true
    createdAt?: true
    lastUsedAt?: true
  }

  export type UserSessionCountAggregateInputType = {
    id?: true
    userId?: true
    tokenHash?: true
    refreshTokenHash?: true
    expiresAt?: true
    refreshExpiresAt?: true
    ipAddress?: true
    userAgent?: true
    deviceType?: true
    isActive?: true
    revokedAt?: true
    createdAt?: true
    lastUsedAt?: true
    _all?: true
  }

  export type UserSessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSession to aggregate.
     */
    where?: UserSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSessions to fetch.
     */
    orderBy?: UserSessionOrderByWithRelationInput | UserSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserSessions
    **/
    _count?: true | UserSessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserSessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserSessionMaxAggregateInputType
  }

  export type GetUserSessionAggregateType<T extends UserSessionAggregateArgs> = {
        [P in keyof T & keyof AggregateUserSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserSession[P]>
      : GetScalarType<T[P], AggregateUserSession[P]>
  }




  export type UserSessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSessionWhereInput
    orderBy?: UserSessionOrderByWithAggregationInput | UserSessionOrderByWithAggregationInput[]
    by: UserSessionScalarFieldEnum[] | UserSessionScalarFieldEnum
    having?: UserSessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserSessionCountAggregateInputType | true
    _min?: UserSessionMinAggregateInputType
    _max?: UserSessionMaxAggregateInputType
  }

  export type UserSessionGroupByOutputType = {
    id: string
    userId: string
    tokenHash: string
    refreshTokenHash: string | null
    expiresAt: Date
    refreshExpiresAt: Date | null
    ipAddress: string | null
    userAgent: string | null
    deviceType: string | null
    isActive: boolean
    revokedAt: Date | null
    createdAt: Date
    lastUsedAt: Date
    _count: UserSessionCountAggregateOutputType | null
    _min: UserSessionMinAggregateOutputType | null
    _max: UserSessionMaxAggregateOutputType | null
  }

  type GetUserSessionGroupByPayload<T extends UserSessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserSessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserSessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserSessionGroupByOutputType[P]>
            : GetScalarType<T[P], UserSessionGroupByOutputType[P]>
        }
      >
    >


  export type UserSessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    tokenHash?: boolean
    refreshTokenHash?: boolean
    expiresAt?: boolean
    refreshExpiresAt?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    deviceType?: boolean
    isActive?: boolean
    revokedAt?: boolean
    createdAt?: boolean
    lastUsedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSession"]>

  export type UserSessionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    tokenHash?: boolean
    refreshTokenHash?: boolean
    expiresAt?: boolean
    refreshExpiresAt?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    deviceType?: boolean
    isActive?: boolean
    revokedAt?: boolean
    createdAt?: boolean
    lastUsedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSession"]>

  export type UserSessionSelectScalar = {
    id?: boolean
    userId?: boolean
    tokenHash?: boolean
    refreshTokenHash?: boolean
    expiresAt?: boolean
    refreshExpiresAt?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    deviceType?: boolean
    isActive?: boolean
    revokedAt?: boolean
    createdAt?: boolean
    lastUsedAt?: boolean
  }

  export type UserSessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserSessionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserSessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserSession"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      tokenHash: string
      refreshTokenHash: string | null
      expiresAt: Date
      refreshExpiresAt: Date | null
      ipAddress: string | null
      userAgent: string | null
      deviceType: string | null
      isActive: boolean
      revokedAt: Date | null
      createdAt: Date
      lastUsedAt: Date
    }, ExtArgs["result"]["userSession"]>
    composites: {}
  }

  type UserSessionGetPayload<S extends boolean | null | undefined | UserSessionDefaultArgs> = $Result.GetResult<Prisma.$UserSessionPayload, S>

  type UserSessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserSessionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserSessionCountAggregateInputType | true
    }

  export interface UserSessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserSession'], meta: { name: 'UserSession' } }
    /**
     * Find zero or one UserSession that matches the filter.
     * @param {UserSessionFindUniqueArgs} args - Arguments to find a UserSession
     * @example
     * // Get one UserSession
     * const userSession = await prisma.userSession.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserSessionFindUniqueArgs>(args: SelectSubset<T, UserSessionFindUniqueArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UserSession that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserSessionFindUniqueOrThrowArgs} args - Arguments to find a UserSession
     * @example
     * // Get one UserSession
     * const userSession = await prisma.userSession.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserSessionFindUniqueOrThrowArgs>(args: SelectSubset<T, UserSessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UserSession that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionFindFirstArgs} args - Arguments to find a UserSession
     * @example
     * // Get one UserSession
     * const userSession = await prisma.userSession.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserSessionFindFirstArgs>(args?: SelectSubset<T, UserSessionFindFirstArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UserSession that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionFindFirstOrThrowArgs} args - Arguments to find a UserSession
     * @example
     * // Get one UserSession
     * const userSession = await prisma.userSession.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserSessionFindFirstOrThrowArgs>(args?: SelectSubset<T, UserSessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UserSessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserSessions
     * const userSessions = await prisma.userSession.findMany()
     * 
     * // Get first 10 UserSessions
     * const userSessions = await prisma.userSession.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userSessionWithIdOnly = await prisma.userSession.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserSessionFindManyArgs>(args?: SelectSubset<T, UserSessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UserSession.
     * @param {UserSessionCreateArgs} args - Arguments to create a UserSession.
     * @example
     * // Create one UserSession
     * const UserSession = await prisma.userSession.create({
     *   data: {
     *     // ... data to create a UserSession
     *   }
     * })
     * 
     */
    create<T extends UserSessionCreateArgs>(args: SelectSubset<T, UserSessionCreateArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UserSessions.
     * @param {UserSessionCreateManyArgs} args - Arguments to create many UserSessions.
     * @example
     * // Create many UserSessions
     * const userSession = await prisma.userSession.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserSessionCreateManyArgs>(args?: SelectSubset<T, UserSessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserSessions and returns the data saved in the database.
     * @param {UserSessionCreateManyAndReturnArgs} args - Arguments to create many UserSessions.
     * @example
     * // Create many UserSessions
     * const userSession = await prisma.userSession.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserSessions and only return the `id`
     * const userSessionWithIdOnly = await prisma.userSession.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserSessionCreateManyAndReturnArgs>(args?: SelectSubset<T, UserSessionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a UserSession.
     * @param {UserSessionDeleteArgs} args - Arguments to delete one UserSession.
     * @example
     * // Delete one UserSession
     * const UserSession = await prisma.userSession.delete({
     *   where: {
     *     // ... filter to delete one UserSession
     *   }
     * })
     * 
     */
    delete<T extends UserSessionDeleteArgs>(args: SelectSubset<T, UserSessionDeleteArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UserSession.
     * @param {UserSessionUpdateArgs} args - Arguments to update one UserSession.
     * @example
     * // Update one UserSession
     * const userSession = await prisma.userSession.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserSessionUpdateArgs>(args: SelectSubset<T, UserSessionUpdateArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UserSessions.
     * @param {UserSessionDeleteManyArgs} args - Arguments to filter UserSessions to delete.
     * @example
     * // Delete a few UserSessions
     * const { count } = await prisma.userSession.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserSessionDeleteManyArgs>(args?: SelectSubset<T, UserSessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserSessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserSessions
     * const userSession = await prisma.userSession.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserSessionUpdateManyArgs>(args: SelectSubset<T, UserSessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserSession.
     * @param {UserSessionUpsertArgs} args - Arguments to update or create a UserSession.
     * @example
     * // Update or create a UserSession
     * const userSession = await prisma.userSession.upsert({
     *   create: {
     *     // ... data to create a UserSession
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserSession we want to update
     *   }
     * })
     */
    upsert<T extends UserSessionUpsertArgs>(args: SelectSubset<T, UserSessionUpsertArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UserSessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionCountArgs} args - Arguments to filter UserSessions to count.
     * @example
     * // Count the number of UserSessions
     * const count = await prisma.userSession.count({
     *   where: {
     *     // ... the filter for the UserSessions we want to count
     *   }
     * })
    **/
    count<T extends UserSessionCountArgs>(
      args?: Subset<T, UserSessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserSessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserSession.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserSessionAggregateArgs>(args: Subset<T, UserSessionAggregateArgs>): Prisma.PrismaPromise<GetUserSessionAggregateType<T>>

    /**
     * Group by UserSession.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserSessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserSessionGroupByArgs['orderBy'] }
        : { orderBy?: UserSessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserSessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserSession model
   */
  readonly fields: UserSessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserSession.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserSessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserSession model
   */ 
  interface UserSessionFieldRefs {
    readonly id: FieldRef<"UserSession", 'String'>
    readonly userId: FieldRef<"UserSession", 'String'>
    readonly tokenHash: FieldRef<"UserSession", 'String'>
    readonly refreshTokenHash: FieldRef<"UserSession", 'String'>
    readonly expiresAt: FieldRef<"UserSession", 'DateTime'>
    readonly refreshExpiresAt: FieldRef<"UserSession", 'DateTime'>
    readonly ipAddress: FieldRef<"UserSession", 'String'>
    readonly userAgent: FieldRef<"UserSession", 'String'>
    readonly deviceType: FieldRef<"UserSession", 'String'>
    readonly isActive: FieldRef<"UserSession", 'Boolean'>
    readonly revokedAt: FieldRef<"UserSession", 'DateTime'>
    readonly createdAt: FieldRef<"UserSession", 'DateTime'>
    readonly lastUsedAt: FieldRef<"UserSession", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserSession findUnique
   */
  export type UserSessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter, which UserSession to fetch.
     */
    where: UserSessionWhereUniqueInput
  }

  /**
   * UserSession findUniqueOrThrow
   */
  export type UserSessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter, which UserSession to fetch.
     */
    where: UserSessionWhereUniqueInput
  }

  /**
   * UserSession findFirst
   */
  export type UserSessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter, which UserSession to fetch.
     */
    where?: UserSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSessions to fetch.
     */
    orderBy?: UserSessionOrderByWithRelationInput | UserSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSessions.
     */
    cursor?: UserSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSessions.
     */
    distinct?: UserSessionScalarFieldEnum | UserSessionScalarFieldEnum[]
  }

  /**
   * UserSession findFirstOrThrow
   */
  export type UserSessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter, which UserSession to fetch.
     */
    where?: UserSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSessions to fetch.
     */
    orderBy?: UserSessionOrderByWithRelationInput | UserSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSessions.
     */
    cursor?: UserSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSessions.
     */
    distinct?: UserSessionScalarFieldEnum | UserSessionScalarFieldEnum[]
  }

  /**
   * UserSession findMany
   */
  export type UserSessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter, which UserSessions to fetch.
     */
    where?: UserSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSessions to fetch.
     */
    orderBy?: UserSessionOrderByWithRelationInput | UserSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserSessions.
     */
    cursor?: UserSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSessions.
     */
    skip?: number
    distinct?: UserSessionScalarFieldEnum | UserSessionScalarFieldEnum[]
  }

  /**
   * UserSession create
   */
  export type UserSessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * The data needed to create a UserSession.
     */
    data: XOR<UserSessionCreateInput, UserSessionUncheckedCreateInput>
  }

  /**
   * UserSession createMany
   */
  export type UserSessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserSessions.
     */
    data: UserSessionCreateManyInput | UserSessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserSession createManyAndReturn
   */
  export type UserSessionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UserSessions.
     */
    data: UserSessionCreateManyInput | UserSessionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserSession update
   */
  export type UserSessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * The data needed to update a UserSession.
     */
    data: XOR<UserSessionUpdateInput, UserSessionUncheckedUpdateInput>
    /**
     * Choose, which UserSession to update.
     */
    where: UserSessionWhereUniqueInput
  }

  /**
   * UserSession updateMany
   */
  export type UserSessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserSessions.
     */
    data: XOR<UserSessionUpdateManyMutationInput, UserSessionUncheckedUpdateManyInput>
    /**
     * Filter which UserSessions to update
     */
    where?: UserSessionWhereInput
  }

  /**
   * UserSession upsert
   */
  export type UserSessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * The filter to search for the UserSession to update in case it exists.
     */
    where: UserSessionWhereUniqueInput
    /**
     * In case the UserSession found by the `where` argument doesn't exist, create a new UserSession with this data.
     */
    create: XOR<UserSessionCreateInput, UserSessionUncheckedCreateInput>
    /**
     * In case the UserSession was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserSessionUpdateInput, UserSessionUncheckedUpdateInput>
  }

  /**
   * UserSession delete
   */
  export type UserSessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter which UserSession to delete.
     */
    where: UserSessionWhereUniqueInput
  }

  /**
   * UserSession deleteMany
   */
  export type UserSessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSessions to delete
     */
    where?: UserSessionWhereInput
  }

  /**
   * UserSession without action
   */
  export type UserSessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
  }


  /**
   * Model UserActivityLog
   */

  export type AggregateUserActivityLog = {
    _count: UserActivityLogCountAggregateOutputType | null
    _min: UserActivityLogMinAggregateOutputType | null
    _max: UserActivityLogMaxAggregateOutputType | null
  }

  export type UserActivityLogMinAggregateOutputType = {
    id: string | null
    userId: string | null
    action: string | null
    resourceType: string | null
    resourceId: string | null
    description: string | null
    ipAddress: string | null
    userAgent: string | null
    success: boolean | null
    errorMessage: string | null
    timestamp: Date | null
  }

  export type UserActivityLogMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    action: string | null
    resourceType: string | null
    resourceId: string | null
    description: string | null
    ipAddress: string | null
    userAgent: string | null
    success: boolean | null
    errorMessage: string | null
    timestamp: Date | null
  }

  export type UserActivityLogCountAggregateOutputType = {
    id: number
    userId: number
    action: number
    resourceType: number
    resourceId: number
    description: number
    ipAddress: number
    userAgent: number
    success: number
    errorMessage: number
    timestamp: number
    _all: number
  }


  export type UserActivityLogMinAggregateInputType = {
    id?: true
    userId?: true
    action?: true
    resourceType?: true
    resourceId?: true
    description?: true
    ipAddress?: true
    userAgent?: true
    success?: true
    errorMessage?: true
    timestamp?: true
  }

  export type UserActivityLogMaxAggregateInputType = {
    id?: true
    userId?: true
    action?: true
    resourceType?: true
    resourceId?: true
    description?: true
    ipAddress?: true
    userAgent?: true
    success?: true
    errorMessage?: true
    timestamp?: true
  }

  export type UserActivityLogCountAggregateInputType = {
    id?: true
    userId?: true
    action?: true
    resourceType?: true
    resourceId?: true
    description?: true
    ipAddress?: true
    userAgent?: true
    success?: true
    errorMessage?: true
    timestamp?: true
    _all?: true
  }

  export type UserActivityLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserActivityLog to aggregate.
     */
    where?: UserActivityLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserActivityLogs to fetch.
     */
    orderBy?: UserActivityLogOrderByWithRelationInput | UserActivityLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserActivityLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserActivityLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserActivityLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserActivityLogs
    **/
    _count?: true | UserActivityLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserActivityLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserActivityLogMaxAggregateInputType
  }

  export type GetUserActivityLogAggregateType<T extends UserActivityLogAggregateArgs> = {
        [P in keyof T & keyof AggregateUserActivityLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserActivityLog[P]>
      : GetScalarType<T[P], AggregateUserActivityLog[P]>
  }




  export type UserActivityLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserActivityLogWhereInput
    orderBy?: UserActivityLogOrderByWithAggregationInput | UserActivityLogOrderByWithAggregationInput[]
    by: UserActivityLogScalarFieldEnum[] | UserActivityLogScalarFieldEnum
    having?: UserActivityLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserActivityLogCountAggregateInputType | true
    _min?: UserActivityLogMinAggregateInputType
    _max?: UserActivityLogMaxAggregateInputType
  }

  export type UserActivityLogGroupByOutputType = {
    id: string
    userId: string
    action: string
    resourceType: string | null
    resourceId: string | null
    description: string | null
    ipAddress: string | null
    userAgent: string | null
    success: boolean
    errorMessage: string | null
    timestamp: Date
    _count: UserActivityLogCountAggregateOutputType | null
    _min: UserActivityLogMinAggregateOutputType | null
    _max: UserActivityLogMaxAggregateOutputType | null
  }

  type GetUserActivityLogGroupByPayload<T extends UserActivityLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserActivityLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserActivityLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserActivityLogGroupByOutputType[P]>
            : GetScalarType<T[P], UserActivityLogGroupByOutputType[P]>
        }
      >
    >


  export type UserActivityLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    action?: boolean
    resourceType?: boolean
    resourceId?: boolean
    description?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    success?: boolean
    errorMessage?: boolean
    timestamp?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userActivityLog"]>

  export type UserActivityLogSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    action?: boolean
    resourceType?: boolean
    resourceId?: boolean
    description?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    success?: boolean
    errorMessage?: boolean
    timestamp?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userActivityLog"]>

  export type UserActivityLogSelectScalar = {
    id?: boolean
    userId?: boolean
    action?: boolean
    resourceType?: boolean
    resourceId?: boolean
    description?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    success?: boolean
    errorMessage?: boolean
    timestamp?: boolean
  }

  export type UserActivityLogInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserActivityLogIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserActivityLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserActivityLog"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      action: string
      resourceType: string | null
      resourceId: string | null
      description: string | null
      ipAddress: string | null
      userAgent: string | null
      success: boolean
      errorMessage: string | null
      timestamp: Date
    }, ExtArgs["result"]["userActivityLog"]>
    composites: {}
  }

  type UserActivityLogGetPayload<S extends boolean | null | undefined | UserActivityLogDefaultArgs> = $Result.GetResult<Prisma.$UserActivityLogPayload, S>

  type UserActivityLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserActivityLogFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserActivityLogCountAggregateInputType | true
    }

  export interface UserActivityLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserActivityLog'], meta: { name: 'UserActivityLog' } }
    /**
     * Find zero or one UserActivityLog that matches the filter.
     * @param {UserActivityLogFindUniqueArgs} args - Arguments to find a UserActivityLog
     * @example
     * // Get one UserActivityLog
     * const userActivityLog = await prisma.userActivityLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserActivityLogFindUniqueArgs>(args: SelectSubset<T, UserActivityLogFindUniqueArgs<ExtArgs>>): Prisma__UserActivityLogClient<$Result.GetResult<Prisma.$UserActivityLogPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UserActivityLog that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserActivityLogFindUniqueOrThrowArgs} args - Arguments to find a UserActivityLog
     * @example
     * // Get one UserActivityLog
     * const userActivityLog = await prisma.userActivityLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserActivityLogFindUniqueOrThrowArgs>(args: SelectSubset<T, UserActivityLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserActivityLogClient<$Result.GetResult<Prisma.$UserActivityLogPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UserActivityLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserActivityLogFindFirstArgs} args - Arguments to find a UserActivityLog
     * @example
     * // Get one UserActivityLog
     * const userActivityLog = await prisma.userActivityLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserActivityLogFindFirstArgs>(args?: SelectSubset<T, UserActivityLogFindFirstArgs<ExtArgs>>): Prisma__UserActivityLogClient<$Result.GetResult<Prisma.$UserActivityLogPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UserActivityLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserActivityLogFindFirstOrThrowArgs} args - Arguments to find a UserActivityLog
     * @example
     * // Get one UserActivityLog
     * const userActivityLog = await prisma.userActivityLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserActivityLogFindFirstOrThrowArgs>(args?: SelectSubset<T, UserActivityLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserActivityLogClient<$Result.GetResult<Prisma.$UserActivityLogPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UserActivityLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserActivityLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserActivityLogs
     * const userActivityLogs = await prisma.userActivityLog.findMany()
     * 
     * // Get first 10 UserActivityLogs
     * const userActivityLogs = await prisma.userActivityLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userActivityLogWithIdOnly = await prisma.userActivityLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserActivityLogFindManyArgs>(args?: SelectSubset<T, UserActivityLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserActivityLogPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UserActivityLog.
     * @param {UserActivityLogCreateArgs} args - Arguments to create a UserActivityLog.
     * @example
     * // Create one UserActivityLog
     * const UserActivityLog = await prisma.userActivityLog.create({
     *   data: {
     *     // ... data to create a UserActivityLog
     *   }
     * })
     * 
     */
    create<T extends UserActivityLogCreateArgs>(args: SelectSubset<T, UserActivityLogCreateArgs<ExtArgs>>): Prisma__UserActivityLogClient<$Result.GetResult<Prisma.$UserActivityLogPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UserActivityLogs.
     * @param {UserActivityLogCreateManyArgs} args - Arguments to create many UserActivityLogs.
     * @example
     * // Create many UserActivityLogs
     * const userActivityLog = await prisma.userActivityLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserActivityLogCreateManyArgs>(args?: SelectSubset<T, UserActivityLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserActivityLogs and returns the data saved in the database.
     * @param {UserActivityLogCreateManyAndReturnArgs} args - Arguments to create many UserActivityLogs.
     * @example
     * // Create many UserActivityLogs
     * const userActivityLog = await prisma.userActivityLog.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserActivityLogs and only return the `id`
     * const userActivityLogWithIdOnly = await prisma.userActivityLog.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserActivityLogCreateManyAndReturnArgs>(args?: SelectSubset<T, UserActivityLogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserActivityLogPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a UserActivityLog.
     * @param {UserActivityLogDeleteArgs} args - Arguments to delete one UserActivityLog.
     * @example
     * // Delete one UserActivityLog
     * const UserActivityLog = await prisma.userActivityLog.delete({
     *   where: {
     *     // ... filter to delete one UserActivityLog
     *   }
     * })
     * 
     */
    delete<T extends UserActivityLogDeleteArgs>(args: SelectSubset<T, UserActivityLogDeleteArgs<ExtArgs>>): Prisma__UserActivityLogClient<$Result.GetResult<Prisma.$UserActivityLogPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UserActivityLog.
     * @param {UserActivityLogUpdateArgs} args - Arguments to update one UserActivityLog.
     * @example
     * // Update one UserActivityLog
     * const userActivityLog = await prisma.userActivityLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserActivityLogUpdateArgs>(args: SelectSubset<T, UserActivityLogUpdateArgs<ExtArgs>>): Prisma__UserActivityLogClient<$Result.GetResult<Prisma.$UserActivityLogPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UserActivityLogs.
     * @param {UserActivityLogDeleteManyArgs} args - Arguments to filter UserActivityLogs to delete.
     * @example
     * // Delete a few UserActivityLogs
     * const { count } = await prisma.userActivityLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserActivityLogDeleteManyArgs>(args?: SelectSubset<T, UserActivityLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserActivityLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserActivityLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserActivityLogs
     * const userActivityLog = await prisma.userActivityLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserActivityLogUpdateManyArgs>(args: SelectSubset<T, UserActivityLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserActivityLog.
     * @param {UserActivityLogUpsertArgs} args - Arguments to update or create a UserActivityLog.
     * @example
     * // Update or create a UserActivityLog
     * const userActivityLog = await prisma.userActivityLog.upsert({
     *   create: {
     *     // ... data to create a UserActivityLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserActivityLog we want to update
     *   }
     * })
     */
    upsert<T extends UserActivityLogUpsertArgs>(args: SelectSubset<T, UserActivityLogUpsertArgs<ExtArgs>>): Prisma__UserActivityLogClient<$Result.GetResult<Prisma.$UserActivityLogPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UserActivityLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserActivityLogCountArgs} args - Arguments to filter UserActivityLogs to count.
     * @example
     * // Count the number of UserActivityLogs
     * const count = await prisma.userActivityLog.count({
     *   where: {
     *     // ... the filter for the UserActivityLogs we want to count
     *   }
     * })
    **/
    count<T extends UserActivityLogCountArgs>(
      args?: Subset<T, UserActivityLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserActivityLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserActivityLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserActivityLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserActivityLogAggregateArgs>(args: Subset<T, UserActivityLogAggregateArgs>): Prisma.PrismaPromise<GetUserActivityLogAggregateType<T>>

    /**
     * Group by UserActivityLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserActivityLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserActivityLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserActivityLogGroupByArgs['orderBy'] }
        : { orderBy?: UserActivityLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserActivityLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserActivityLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserActivityLog model
   */
  readonly fields: UserActivityLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserActivityLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserActivityLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserActivityLog model
   */ 
  interface UserActivityLogFieldRefs {
    readonly id: FieldRef<"UserActivityLog", 'String'>
    readonly userId: FieldRef<"UserActivityLog", 'String'>
    readonly action: FieldRef<"UserActivityLog", 'String'>
    readonly resourceType: FieldRef<"UserActivityLog", 'String'>
    readonly resourceId: FieldRef<"UserActivityLog", 'String'>
    readonly description: FieldRef<"UserActivityLog", 'String'>
    readonly ipAddress: FieldRef<"UserActivityLog", 'String'>
    readonly userAgent: FieldRef<"UserActivityLog", 'String'>
    readonly success: FieldRef<"UserActivityLog", 'Boolean'>
    readonly errorMessage: FieldRef<"UserActivityLog", 'String'>
    readonly timestamp: FieldRef<"UserActivityLog", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserActivityLog findUnique
   */
  export type UserActivityLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserActivityLog
     */
    select?: UserActivityLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserActivityLogInclude<ExtArgs> | null
    /**
     * Filter, which UserActivityLog to fetch.
     */
    where: UserActivityLogWhereUniqueInput
  }

  /**
   * UserActivityLog findUniqueOrThrow
   */
  export type UserActivityLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserActivityLog
     */
    select?: UserActivityLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserActivityLogInclude<ExtArgs> | null
    /**
     * Filter, which UserActivityLog to fetch.
     */
    where: UserActivityLogWhereUniqueInput
  }

  /**
   * UserActivityLog findFirst
   */
  export type UserActivityLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserActivityLog
     */
    select?: UserActivityLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserActivityLogInclude<ExtArgs> | null
    /**
     * Filter, which UserActivityLog to fetch.
     */
    where?: UserActivityLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserActivityLogs to fetch.
     */
    orderBy?: UserActivityLogOrderByWithRelationInput | UserActivityLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserActivityLogs.
     */
    cursor?: UserActivityLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserActivityLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserActivityLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserActivityLogs.
     */
    distinct?: UserActivityLogScalarFieldEnum | UserActivityLogScalarFieldEnum[]
  }

  /**
   * UserActivityLog findFirstOrThrow
   */
  export type UserActivityLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserActivityLog
     */
    select?: UserActivityLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserActivityLogInclude<ExtArgs> | null
    /**
     * Filter, which UserActivityLog to fetch.
     */
    where?: UserActivityLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserActivityLogs to fetch.
     */
    orderBy?: UserActivityLogOrderByWithRelationInput | UserActivityLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserActivityLogs.
     */
    cursor?: UserActivityLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserActivityLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserActivityLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserActivityLogs.
     */
    distinct?: UserActivityLogScalarFieldEnum | UserActivityLogScalarFieldEnum[]
  }

  /**
   * UserActivityLog findMany
   */
  export type UserActivityLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserActivityLog
     */
    select?: UserActivityLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserActivityLogInclude<ExtArgs> | null
    /**
     * Filter, which UserActivityLogs to fetch.
     */
    where?: UserActivityLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserActivityLogs to fetch.
     */
    orderBy?: UserActivityLogOrderByWithRelationInput | UserActivityLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserActivityLogs.
     */
    cursor?: UserActivityLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserActivityLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserActivityLogs.
     */
    skip?: number
    distinct?: UserActivityLogScalarFieldEnum | UserActivityLogScalarFieldEnum[]
  }

  /**
   * UserActivityLog create
   */
  export type UserActivityLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserActivityLog
     */
    select?: UserActivityLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserActivityLogInclude<ExtArgs> | null
    /**
     * The data needed to create a UserActivityLog.
     */
    data: XOR<UserActivityLogCreateInput, UserActivityLogUncheckedCreateInput>
  }

  /**
   * UserActivityLog createMany
   */
  export type UserActivityLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserActivityLogs.
     */
    data: UserActivityLogCreateManyInput | UserActivityLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserActivityLog createManyAndReturn
   */
  export type UserActivityLogCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserActivityLog
     */
    select?: UserActivityLogSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UserActivityLogs.
     */
    data: UserActivityLogCreateManyInput | UserActivityLogCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserActivityLogIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserActivityLog update
   */
  export type UserActivityLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserActivityLog
     */
    select?: UserActivityLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserActivityLogInclude<ExtArgs> | null
    /**
     * The data needed to update a UserActivityLog.
     */
    data: XOR<UserActivityLogUpdateInput, UserActivityLogUncheckedUpdateInput>
    /**
     * Choose, which UserActivityLog to update.
     */
    where: UserActivityLogWhereUniqueInput
  }

  /**
   * UserActivityLog updateMany
   */
  export type UserActivityLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserActivityLogs.
     */
    data: XOR<UserActivityLogUpdateManyMutationInput, UserActivityLogUncheckedUpdateManyInput>
    /**
     * Filter which UserActivityLogs to update
     */
    where?: UserActivityLogWhereInput
  }

  /**
   * UserActivityLog upsert
   */
  export type UserActivityLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserActivityLog
     */
    select?: UserActivityLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserActivityLogInclude<ExtArgs> | null
    /**
     * The filter to search for the UserActivityLog to update in case it exists.
     */
    where: UserActivityLogWhereUniqueInput
    /**
     * In case the UserActivityLog found by the `where` argument doesn't exist, create a new UserActivityLog with this data.
     */
    create: XOR<UserActivityLogCreateInput, UserActivityLogUncheckedCreateInput>
    /**
     * In case the UserActivityLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserActivityLogUpdateInput, UserActivityLogUncheckedUpdateInput>
  }

  /**
   * UserActivityLog delete
   */
  export type UserActivityLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserActivityLog
     */
    select?: UserActivityLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserActivityLogInclude<ExtArgs> | null
    /**
     * Filter which UserActivityLog to delete.
     */
    where: UserActivityLogWhereUniqueInput
  }

  /**
   * UserActivityLog deleteMany
   */
  export type UserActivityLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserActivityLogs to delete
     */
    where?: UserActivityLogWhereInput
  }

  /**
   * UserActivityLog without action
   */
  export type UserActivityLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserActivityLog
     */
    select?: UserActivityLogSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserActivityLogInclude<ExtArgs> | null
  }


  /**
   * Model MenuCategory
   */

  export type AggregateMenuCategory = {
    _count: MenuCategoryCountAggregateOutputType | null
    _avg: MenuCategoryAvgAggregateOutputType | null
    _sum: MenuCategorySumAggregateOutputType | null
    _min: MenuCategoryMinAggregateOutputType | null
    _max: MenuCategoryMaxAggregateOutputType | null
  }

  export type MenuCategoryAvgAggregateOutputType = {
    displayNumber: number | null
  }

  export type MenuCategorySumAggregateOutputType = {
    displayNumber: number | null
  }

  export type MenuCategoryMinAggregateOutputType = {
    id: string | null
    companyId: string | null
    image: string | null
    displayNumber: number | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type MenuCategoryMaxAggregateOutputType = {
    id: string | null
    companyId: string | null
    image: string | null
    displayNumber: number | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type MenuCategoryCountAggregateOutputType = {
    id: number
    companyId: number
    name: number
    description: number
    image: number
    displayNumber: number
    isActive: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    createdBy: number
    updatedBy: number
    _all: number
  }


  export type MenuCategoryAvgAggregateInputType = {
    displayNumber?: true
  }

  export type MenuCategorySumAggregateInputType = {
    displayNumber?: true
  }

  export type MenuCategoryMinAggregateInputType = {
    id?: true
    companyId?: true
    image?: true
    displayNumber?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdBy?: true
    updatedBy?: true
  }

  export type MenuCategoryMaxAggregateInputType = {
    id?: true
    companyId?: true
    image?: true
    displayNumber?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdBy?: true
    updatedBy?: true
  }

  export type MenuCategoryCountAggregateInputType = {
    id?: true
    companyId?: true
    name?: true
    description?: true
    image?: true
    displayNumber?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdBy?: true
    updatedBy?: true
    _all?: true
  }

  export type MenuCategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MenuCategory to aggregate.
     */
    where?: MenuCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuCategories to fetch.
     */
    orderBy?: MenuCategoryOrderByWithRelationInput | MenuCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MenuCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MenuCategories
    **/
    _count?: true | MenuCategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MenuCategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MenuCategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MenuCategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MenuCategoryMaxAggregateInputType
  }

  export type GetMenuCategoryAggregateType<T extends MenuCategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateMenuCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMenuCategory[P]>
      : GetScalarType<T[P], AggregateMenuCategory[P]>
  }




  export type MenuCategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MenuCategoryWhereInput
    orderBy?: MenuCategoryOrderByWithAggregationInput | MenuCategoryOrderByWithAggregationInput[]
    by: MenuCategoryScalarFieldEnum[] | MenuCategoryScalarFieldEnum
    having?: MenuCategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MenuCategoryCountAggregateInputType | true
    _avg?: MenuCategoryAvgAggregateInputType
    _sum?: MenuCategorySumAggregateInputType
    _min?: MenuCategoryMinAggregateInputType
    _max?: MenuCategoryMaxAggregateInputType
  }

  export type MenuCategoryGroupByOutputType = {
    id: string
    companyId: string
    name: JsonValue
    description: JsonValue | null
    image: string | null
    displayNumber: number
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
    _count: MenuCategoryCountAggregateOutputType | null
    _avg: MenuCategoryAvgAggregateOutputType | null
    _sum: MenuCategorySumAggregateOutputType | null
    _min: MenuCategoryMinAggregateOutputType | null
    _max: MenuCategoryMaxAggregateOutputType | null
  }

  type GetMenuCategoryGroupByPayload<T extends MenuCategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MenuCategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MenuCategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MenuCategoryGroupByOutputType[P]>
            : GetScalarType<T[P], MenuCategoryGroupByOutputType[P]>
        }
      >
    >


  export type MenuCategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    name?: boolean
    description?: boolean
    image?: boolean
    displayNumber?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    products?: boolean | MenuCategory$productsArgs<ExtArgs>
    _count?: boolean | MenuCategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["menuCategory"]>

  export type MenuCategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    name?: boolean
    description?: boolean
    image?: boolean
    displayNumber?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["menuCategory"]>

  export type MenuCategorySelectScalar = {
    id?: boolean
    companyId?: boolean
    name?: boolean
    description?: boolean
    image?: boolean
    displayNumber?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
  }

  export type MenuCategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    products?: boolean | MenuCategory$productsArgs<ExtArgs>
    _count?: boolean | MenuCategoryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MenuCategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $MenuCategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MenuCategory"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
      products: Prisma.$MenuProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      companyId: string
      name: Prisma.JsonValue
      description: Prisma.JsonValue | null
      image: string | null
      displayNumber: number
      isActive: boolean
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
      createdBy: string | null
      updatedBy: string | null
    }, ExtArgs["result"]["menuCategory"]>
    composites: {}
  }

  type MenuCategoryGetPayload<S extends boolean | null | undefined | MenuCategoryDefaultArgs> = $Result.GetResult<Prisma.$MenuCategoryPayload, S>

  type MenuCategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MenuCategoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MenuCategoryCountAggregateInputType | true
    }

  export interface MenuCategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MenuCategory'], meta: { name: 'MenuCategory' } }
    /**
     * Find zero or one MenuCategory that matches the filter.
     * @param {MenuCategoryFindUniqueArgs} args - Arguments to find a MenuCategory
     * @example
     * // Get one MenuCategory
     * const menuCategory = await prisma.menuCategory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MenuCategoryFindUniqueArgs>(args: SelectSubset<T, MenuCategoryFindUniqueArgs<ExtArgs>>): Prisma__MenuCategoryClient<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one MenuCategory that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MenuCategoryFindUniqueOrThrowArgs} args - Arguments to find a MenuCategory
     * @example
     * // Get one MenuCategory
     * const menuCategory = await prisma.menuCategory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MenuCategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, MenuCategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MenuCategoryClient<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first MenuCategory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuCategoryFindFirstArgs} args - Arguments to find a MenuCategory
     * @example
     * // Get one MenuCategory
     * const menuCategory = await prisma.menuCategory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MenuCategoryFindFirstArgs>(args?: SelectSubset<T, MenuCategoryFindFirstArgs<ExtArgs>>): Prisma__MenuCategoryClient<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first MenuCategory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuCategoryFindFirstOrThrowArgs} args - Arguments to find a MenuCategory
     * @example
     * // Get one MenuCategory
     * const menuCategory = await prisma.menuCategory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MenuCategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, MenuCategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__MenuCategoryClient<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more MenuCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuCategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MenuCategories
     * const menuCategories = await prisma.menuCategory.findMany()
     * 
     * // Get first 10 MenuCategories
     * const menuCategories = await prisma.menuCategory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const menuCategoryWithIdOnly = await prisma.menuCategory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MenuCategoryFindManyArgs>(args?: SelectSubset<T, MenuCategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a MenuCategory.
     * @param {MenuCategoryCreateArgs} args - Arguments to create a MenuCategory.
     * @example
     * // Create one MenuCategory
     * const MenuCategory = await prisma.menuCategory.create({
     *   data: {
     *     // ... data to create a MenuCategory
     *   }
     * })
     * 
     */
    create<T extends MenuCategoryCreateArgs>(args: SelectSubset<T, MenuCategoryCreateArgs<ExtArgs>>): Prisma__MenuCategoryClient<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many MenuCategories.
     * @param {MenuCategoryCreateManyArgs} args - Arguments to create many MenuCategories.
     * @example
     * // Create many MenuCategories
     * const menuCategory = await prisma.menuCategory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MenuCategoryCreateManyArgs>(args?: SelectSubset<T, MenuCategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MenuCategories and returns the data saved in the database.
     * @param {MenuCategoryCreateManyAndReturnArgs} args - Arguments to create many MenuCategories.
     * @example
     * // Create many MenuCategories
     * const menuCategory = await prisma.menuCategory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MenuCategories and only return the `id`
     * const menuCategoryWithIdOnly = await prisma.menuCategory.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MenuCategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, MenuCategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a MenuCategory.
     * @param {MenuCategoryDeleteArgs} args - Arguments to delete one MenuCategory.
     * @example
     * // Delete one MenuCategory
     * const MenuCategory = await prisma.menuCategory.delete({
     *   where: {
     *     // ... filter to delete one MenuCategory
     *   }
     * })
     * 
     */
    delete<T extends MenuCategoryDeleteArgs>(args: SelectSubset<T, MenuCategoryDeleteArgs<ExtArgs>>): Prisma__MenuCategoryClient<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one MenuCategory.
     * @param {MenuCategoryUpdateArgs} args - Arguments to update one MenuCategory.
     * @example
     * // Update one MenuCategory
     * const menuCategory = await prisma.menuCategory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MenuCategoryUpdateArgs>(args: SelectSubset<T, MenuCategoryUpdateArgs<ExtArgs>>): Prisma__MenuCategoryClient<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more MenuCategories.
     * @param {MenuCategoryDeleteManyArgs} args - Arguments to filter MenuCategories to delete.
     * @example
     * // Delete a few MenuCategories
     * const { count } = await prisma.menuCategory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MenuCategoryDeleteManyArgs>(args?: SelectSubset<T, MenuCategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MenuCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuCategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MenuCategories
     * const menuCategory = await prisma.menuCategory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MenuCategoryUpdateManyArgs>(args: SelectSubset<T, MenuCategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MenuCategory.
     * @param {MenuCategoryUpsertArgs} args - Arguments to update or create a MenuCategory.
     * @example
     * // Update or create a MenuCategory
     * const menuCategory = await prisma.menuCategory.upsert({
     *   create: {
     *     // ... data to create a MenuCategory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MenuCategory we want to update
     *   }
     * })
     */
    upsert<T extends MenuCategoryUpsertArgs>(args: SelectSubset<T, MenuCategoryUpsertArgs<ExtArgs>>): Prisma__MenuCategoryClient<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of MenuCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuCategoryCountArgs} args - Arguments to filter MenuCategories to count.
     * @example
     * // Count the number of MenuCategories
     * const count = await prisma.menuCategory.count({
     *   where: {
     *     // ... the filter for the MenuCategories we want to count
     *   }
     * })
    **/
    count<T extends MenuCategoryCountArgs>(
      args?: Subset<T, MenuCategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MenuCategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MenuCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuCategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MenuCategoryAggregateArgs>(args: Subset<T, MenuCategoryAggregateArgs>): Prisma.PrismaPromise<GetMenuCategoryAggregateType<T>>

    /**
     * Group by MenuCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuCategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MenuCategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MenuCategoryGroupByArgs['orderBy'] }
        : { orderBy?: MenuCategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MenuCategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMenuCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MenuCategory model
   */
  readonly fields: MenuCategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MenuCategory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MenuCategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    products<T extends MenuCategory$productsArgs<ExtArgs> = {}>(args?: Subset<T, MenuCategory$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MenuProductPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MenuCategory model
   */ 
  interface MenuCategoryFieldRefs {
    readonly id: FieldRef<"MenuCategory", 'String'>
    readonly companyId: FieldRef<"MenuCategory", 'String'>
    readonly name: FieldRef<"MenuCategory", 'Json'>
    readonly description: FieldRef<"MenuCategory", 'Json'>
    readonly image: FieldRef<"MenuCategory", 'String'>
    readonly displayNumber: FieldRef<"MenuCategory", 'Int'>
    readonly isActive: FieldRef<"MenuCategory", 'Boolean'>
    readonly createdAt: FieldRef<"MenuCategory", 'DateTime'>
    readonly updatedAt: FieldRef<"MenuCategory", 'DateTime'>
    readonly deletedAt: FieldRef<"MenuCategory", 'DateTime'>
    readonly createdBy: FieldRef<"MenuCategory", 'String'>
    readonly updatedBy: FieldRef<"MenuCategory", 'String'>
  }
    

  // Custom InputTypes
  /**
   * MenuCategory findUnique
   */
  export type MenuCategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    /**
     * Filter, which MenuCategory to fetch.
     */
    where: MenuCategoryWhereUniqueInput
  }

  /**
   * MenuCategory findUniqueOrThrow
   */
  export type MenuCategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    /**
     * Filter, which MenuCategory to fetch.
     */
    where: MenuCategoryWhereUniqueInput
  }

  /**
   * MenuCategory findFirst
   */
  export type MenuCategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    /**
     * Filter, which MenuCategory to fetch.
     */
    where?: MenuCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuCategories to fetch.
     */
    orderBy?: MenuCategoryOrderByWithRelationInput | MenuCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MenuCategories.
     */
    cursor?: MenuCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MenuCategories.
     */
    distinct?: MenuCategoryScalarFieldEnum | MenuCategoryScalarFieldEnum[]
  }

  /**
   * MenuCategory findFirstOrThrow
   */
  export type MenuCategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    /**
     * Filter, which MenuCategory to fetch.
     */
    where?: MenuCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuCategories to fetch.
     */
    orderBy?: MenuCategoryOrderByWithRelationInput | MenuCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MenuCategories.
     */
    cursor?: MenuCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MenuCategories.
     */
    distinct?: MenuCategoryScalarFieldEnum | MenuCategoryScalarFieldEnum[]
  }

  /**
   * MenuCategory findMany
   */
  export type MenuCategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    /**
     * Filter, which MenuCategories to fetch.
     */
    where?: MenuCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuCategories to fetch.
     */
    orderBy?: MenuCategoryOrderByWithRelationInput | MenuCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MenuCategories.
     */
    cursor?: MenuCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuCategories.
     */
    skip?: number
    distinct?: MenuCategoryScalarFieldEnum | MenuCategoryScalarFieldEnum[]
  }

  /**
   * MenuCategory create
   */
  export type MenuCategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a MenuCategory.
     */
    data: XOR<MenuCategoryCreateInput, MenuCategoryUncheckedCreateInput>
  }

  /**
   * MenuCategory createMany
   */
  export type MenuCategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MenuCategories.
     */
    data: MenuCategoryCreateManyInput | MenuCategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MenuCategory createManyAndReturn
   */
  export type MenuCategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MenuCategories.
     */
    data: MenuCategoryCreateManyInput | MenuCategoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MenuCategory update
   */
  export type MenuCategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a MenuCategory.
     */
    data: XOR<MenuCategoryUpdateInput, MenuCategoryUncheckedUpdateInput>
    /**
     * Choose, which MenuCategory to update.
     */
    where: MenuCategoryWhereUniqueInput
  }

  /**
   * MenuCategory updateMany
   */
  export type MenuCategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MenuCategories.
     */
    data: XOR<MenuCategoryUpdateManyMutationInput, MenuCategoryUncheckedUpdateManyInput>
    /**
     * Filter which MenuCategories to update
     */
    where?: MenuCategoryWhereInput
  }

  /**
   * MenuCategory upsert
   */
  export type MenuCategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the MenuCategory to update in case it exists.
     */
    where: MenuCategoryWhereUniqueInput
    /**
     * In case the MenuCategory found by the `where` argument doesn't exist, create a new MenuCategory with this data.
     */
    create: XOR<MenuCategoryCreateInput, MenuCategoryUncheckedCreateInput>
    /**
     * In case the MenuCategory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MenuCategoryUpdateInput, MenuCategoryUncheckedUpdateInput>
  }

  /**
   * MenuCategory delete
   */
  export type MenuCategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    /**
     * Filter which MenuCategory to delete.
     */
    where: MenuCategoryWhereUniqueInput
  }

  /**
   * MenuCategory deleteMany
   */
  export type MenuCategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MenuCategories to delete
     */
    where?: MenuCategoryWhereInput
  }

  /**
   * MenuCategory.products
   */
  export type MenuCategory$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProduct
     */
    select?: MenuProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProductInclude<ExtArgs> | null
    where?: MenuProductWhereInput
    orderBy?: MenuProductOrderByWithRelationInput | MenuProductOrderByWithRelationInput[]
    cursor?: MenuProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MenuProductScalarFieldEnum | MenuProductScalarFieldEnum[]
  }

  /**
   * MenuCategory without action
   */
  export type MenuCategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
  }


  /**
   * Model MenuProduct
   */

  export type AggregateMenuProduct = {
    _count: MenuProductCountAggregateOutputType | null
    _avg: MenuProductAvgAggregateOutputType | null
    _sum: MenuProductSumAggregateOutputType | null
    _min: MenuProductMinAggregateOutputType | null
    _max: MenuProductMaxAggregateOutputType | null
  }

  export type MenuProductAvgAggregateOutputType = {
    basePrice: Decimal | null
    cost: Decimal | null
    status: number | null
    priority: number | null
    preparationTime: number | null
    pricingMethod: number | null
    sellingMethod: number | null
  }

  export type MenuProductSumAggregateOutputType = {
    basePrice: Decimal | null
    cost: Decimal | null
    status: number | null
    priority: number | null
    preparationTime: number | null
    pricingMethod: number | null
    sellingMethod: number | null
  }

  export type MenuProductMinAggregateOutputType = {
    id: string | null
    companyId: string | null
    categoryId: string | null
    image: string | null
    slug: string | null
    basePrice: Decimal | null
    cost: Decimal | null
    status: number | null
    priority: number | null
    preparationTime: number | null
    pricingMethod: number | null
    sellingMethod: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type MenuProductMaxAggregateOutputType = {
    id: string | null
    companyId: string | null
    categoryId: string | null
    image: string | null
    slug: string | null
    basePrice: Decimal | null
    cost: Decimal | null
    status: number | null
    priority: number | null
    preparationTime: number | null
    pricingMethod: number | null
    sellingMethod: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type MenuProductCountAggregateOutputType = {
    id: number
    companyId: number
    categoryId: number
    name: number
    description: number
    image: number
    images: number
    slug: number
    basePrice: number
    pricing: number
    cost: number
    status: number
    priority: number
    preparationTime: number
    pricingMethod: number
    sellingMethod: number
    tags: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    createdBy: number
    updatedBy: number
    _all: number
  }


  export type MenuProductAvgAggregateInputType = {
    basePrice?: true
    cost?: true
    status?: true
    priority?: true
    preparationTime?: true
    pricingMethod?: true
    sellingMethod?: true
  }

  export type MenuProductSumAggregateInputType = {
    basePrice?: true
    cost?: true
    status?: true
    priority?: true
    preparationTime?: true
    pricingMethod?: true
    sellingMethod?: true
  }

  export type MenuProductMinAggregateInputType = {
    id?: true
    companyId?: true
    categoryId?: true
    image?: true
    slug?: true
    basePrice?: true
    cost?: true
    status?: true
    priority?: true
    preparationTime?: true
    pricingMethod?: true
    sellingMethod?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdBy?: true
    updatedBy?: true
  }

  export type MenuProductMaxAggregateInputType = {
    id?: true
    companyId?: true
    categoryId?: true
    image?: true
    slug?: true
    basePrice?: true
    cost?: true
    status?: true
    priority?: true
    preparationTime?: true
    pricingMethod?: true
    sellingMethod?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdBy?: true
    updatedBy?: true
  }

  export type MenuProductCountAggregateInputType = {
    id?: true
    companyId?: true
    categoryId?: true
    name?: true
    description?: true
    image?: true
    images?: true
    slug?: true
    basePrice?: true
    pricing?: true
    cost?: true
    status?: true
    priority?: true
    preparationTime?: true
    pricingMethod?: true
    sellingMethod?: true
    tags?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    createdBy?: true
    updatedBy?: true
    _all?: true
  }

  export type MenuProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MenuProduct to aggregate.
     */
    where?: MenuProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuProducts to fetch.
     */
    orderBy?: MenuProductOrderByWithRelationInput | MenuProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MenuProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuProducts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuProducts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MenuProducts
    **/
    _count?: true | MenuProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MenuProductAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MenuProductSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MenuProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MenuProductMaxAggregateInputType
  }

  export type GetMenuProductAggregateType<T extends MenuProductAggregateArgs> = {
        [P in keyof T & keyof AggregateMenuProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMenuProduct[P]>
      : GetScalarType<T[P], AggregateMenuProduct[P]>
  }




  export type MenuProductGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MenuProductWhereInput
    orderBy?: MenuProductOrderByWithAggregationInput | MenuProductOrderByWithAggregationInput[]
    by: MenuProductScalarFieldEnum[] | MenuProductScalarFieldEnum
    having?: MenuProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MenuProductCountAggregateInputType | true
    _avg?: MenuProductAvgAggregateInputType
    _sum?: MenuProductSumAggregateInputType
    _min?: MenuProductMinAggregateInputType
    _max?: MenuProductMaxAggregateInputType
  }

  export type MenuProductGroupByOutputType = {
    id: string
    companyId: string
    categoryId: string | null
    name: JsonValue
    description: JsonValue | null
    image: string | null
    images: string[]
    slug: string | null
    basePrice: Decimal
    pricing: JsonValue
    cost: Decimal
    status: number
    priority: number
    preparationTime: number
    pricingMethod: number
    sellingMethod: number
    tags: string[]
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
    _count: MenuProductCountAggregateOutputType | null
    _avg: MenuProductAvgAggregateOutputType | null
    _sum: MenuProductSumAggregateOutputType | null
    _min: MenuProductMinAggregateOutputType | null
    _max: MenuProductMaxAggregateOutputType | null
  }

  type GetMenuProductGroupByPayload<T extends MenuProductGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MenuProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MenuProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MenuProductGroupByOutputType[P]>
            : GetScalarType<T[P], MenuProductGroupByOutputType[P]>
        }
      >
    >


  export type MenuProductSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    categoryId?: boolean
    name?: boolean
    description?: boolean
    image?: boolean
    images?: boolean
    slug?: boolean
    basePrice?: boolean
    pricing?: boolean
    cost?: boolean
    status?: boolean
    priority?: boolean
    preparationTime?: boolean
    pricingMethod?: boolean
    sellingMethod?: boolean
    tags?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    category?: boolean | MenuProduct$categoryArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    modifierCategories?: boolean | MenuProduct$modifierCategoriesArgs<ExtArgs>
    promotionModifierMarkups?: boolean | MenuProduct$promotionModifierMarkupsArgs<ExtArgs>
    promotionProducts?: boolean | MenuProduct$promotionProductsArgs<ExtArgs>
    productImages?: boolean | MenuProduct$productImagesArgs<ExtArgs>
    _count?: boolean | MenuProductCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["menuProduct"]>

  export type MenuProductSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    categoryId?: boolean
    name?: boolean
    description?: boolean
    image?: boolean
    images?: boolean
    slug?: boolean
    basePrice?: boolean
    pricing?: boolean
    cost?: boolean
    status?: boolean
    priority?: boolean
    preparationTime?: boolean
    pricingMethod?: boolean
    sellingMethod?: boolean
    tags?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    category?: boolean | MenuProduct$categoryArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["menuProduct"]>

  export type MenuProductSelectScalar = {
    id?: boolean
    companyId?: boolean
    categoryId?: boolean
    name?: boolean
    description?: boolean
    image?: boolean
    images?: boolean
    slug?: boolean
    basePrice?: boolean
    pricing?: boolean
    cost?: boolean
    status?: boolean
    priority?: boolean
    preparationTime?: boolean
    pricingMethod?: boolean
    sellingMethod?: boolean
    tags?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
  }

  export type MenuProductInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | MenuProduct$categoryArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    modifierCategories?: boolean | MenuProduct$modifierCategoriesArgs<ExtArgs>
    promotionModifierMarkups?: boolean | MenuProduct$promotionModifierMarkupsArgs<ExtArgs>
    promotionProducts?: boolean | MenuProduct$promotionProductsArgs<ExtArgs>
    productImages?: boolean | MenuProduct$productImagesArgs<ExtArgs>
    _count?: boolean | MenuProductCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MenuProductIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | MenuProduct$categoryArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $MenuProductPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MenuProduct"
    objects: {
      category: Prisma.$MenuCategoryPayload<ExtArgs> | null
      company: Prisma.$CompanyPayload<ExtArgs>
      modifierCategories: Prisma.$ProductModifierCategoryPayload<ExtArgs>[]
      promotionModifierMarkups: Prisma.$PromotionModifierMarkupPayload<ExtArgs>[]
      promotionProducts: Prisma.$PromotionProductPayload<ExtArgs>[]
      productImages: Prisma.$ProductImagePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      companyId: string
      categoryId: string | null
      name: Prisma.JsonValue
      description: Prisma.JsonValue | null
      image: string | null
      images: string[]
      slug: string | null
      basePrice: Prisma.Decimal
      pricing: Prisma.JsonValue
      cost: Prisma.Decimal
      status: number
      priority: number
      preparationTime: number
      pricingMethod: number
      sellingMethod: number
      tags: string[]
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
      createdBy: string | null
      updatedBy: string | null
    }, ExtArgs["result"]["menuProduct"]>
    composites: {}
  }

  type MenuProductGetPayload<S extends boolean | null | undefined | MenuProductDefaultArgs> = $Result.GetResult<Prisma.$MenuProductPayload, S>

  type MenuProductCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MenuProductFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MenuProductCountAggregateInputType | true
    }

  export interface MenuProductDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MenuProduct'], meta: { name: 'MenuProduct' } }
    /**
     * Find zero or one MenuProduct that matches the filter.
     * @param {MenuProductFindUniqueArgs} args - Arguments to find a MenuProduct
     * @example
     * // Get one MenuProduct
     * const menuProduct = await prisma.menuProduct.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MenuProductFindUniqueArgs>(args: SelectSubset<T, MenuProductFindUniqueArgs<ExtArgs>>): Prisma__MenuProductClient<$Result.GetResult<Prisma.$MenuProductPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one MenuProduct that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MenuProductFindUniqueOrThrowArgs} args - Arguments to find a MenuProduct
     * @example
     * // Get one MenuProduct
     * const menuProduct = await prisma.menuProduct.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MenuProductFindUniqueOrThrowArgs>(args: SelectSubset<T, MenuProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MenuProductClient<$Result.GetResult<Prisma.$MenuProductPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first MenuProduct that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProductFindFirstArgs} args - Arguments to find a MenuProduct
     * @example
     * // Get one MenuProduct
     * const menuProduct = await prisma.menuProduct.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MenuProductFindFirstArgs>(args?: SelectSubset<T, MenuProductFindFirstArgs<ExtArgs>>): Prisma__MenuProductClient<$Result.GetResult<Prisma.$MenuProductPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first MenuProduct that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProductFindFirstOrThrowArgs} args - Arguments to find a MenuProduct
     * @example
     * // Get one MenuProduct
     * const menuProduct = await prisma.menuProduct.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MenuProductFindFirstOrThrowArgs>(args?: SelectSubset<T, MenuProductFindFirstOrThrowArgs<ExtArgs>>): Prisma__MenuProductClient<$Result.GetResult<Prisma.$MenuProductPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more MenuProducts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProductFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MenuProducts
     * const menuProducts = await prisma.menuProduct.findMany()
     * 
     * // Get first 10 MenuProducts
     * const menuProducts = await prisma.menuProduct.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const menuProductWithIdOnly = await prisma.menuProduct.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MenuProductFindManyArgs>(args?: SelectSubset<T, MenuProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MenuProductPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a MenuProduct.
     * @param {MenuProductCreateArgs} args - Arguments to create a MenuProduct.
     * @example
     * // Create one MenuProduct
     * const MenuProduct = await prisma.menuProduct.create({
     *   data: {
     *     // ... data to create a MenuProduct
     *   }
     * })
     * 
     */
    create<T extends MenuProductCreateArgs>(args: SelectSubset<T, MenuProductCreateArgs<ExtArgs>>): Prisma__MenuProductClient<$Result.GetResult<Prisma.$MenuProductPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many MenuProducts.
     * @param {MenuProductCreateManyArgs} args - Arguments to create many MenuProducts.
     * @example
     * // Create many MenuProducts
     * const menuProduct = await prisma.menuProduct.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MenuProductCreateManyArgs>(args?: SelectSubset<T, MenuProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MenuProducts and returns the data saved in the database.
     * @param {MenuProductCreateManyAndReturnArgs} args - Arguments to create many MenuProducts.
     * @example
     * // Create many MenuProducts
     * const menuProduct = await prisma.menuProduct.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MenuProducts and only return the `id`
     * const menuProductWithIdOnly = await prisma.menuProduct.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MenuProductCreateManyAndReturnArgs>(args?: SelectSubset<T, MenuProductCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MenuProductPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a MenuProduct.
     * @param {MenuProductDeleteArgs} args - Arguments to delete one MenuProduct.
     * @example
     * // Delete one MenuProduct
     * const MenuProduct = await prisma.menuProduct.delete({
     *   where: {
     *     // ... filter to delete one MenuProduct
     *   }
     * })
     * 
     */
    delete<T extends MenuProductDeleteArgs>(args: SelectSubset<T, MenuProductDeleteArgs<ExtArgs>>): Prisma__MenuProductClient<$Result.GetResult<Prisma.$MenuProductPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one MenuProduct.
     * @param {MenuProductUpdateArgs} args - Arguments to update one MenuProduct.
     * @example
     * // Update one MenuProduct
     * const menuProduct = await prisma.menuProduct.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MenuProductUpdateArgs>(args: SelectSubset<T, MenuProductUpdateArgs<ExtArgs>>): Prisma__MenuProductClient<$Result.GetResult<Prisma.$MenuProductPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more MenuProducts.
     * @param {MenuProductDeleteManyArgs} args - Arguments to filter MenuProducts to delete.
     * @example
     * // Delete a few MenuProducts
     * const { count } = await prisma.menuProduct.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MenuProductDeleteManyArgs>(args?: SelectSubset<T, MenuProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MenuProducts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MenuProducts
     * const menuProduct = await prisma.menuProduct.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MenuProductUpdateManyArgs>(args: SelectSubset<T, MenuProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MenuProduct.
     * @param {MenuProductUpsertArgs} args - Arguments to update or create a MenuProduct.
     * @example
     * // Update or create a MenuProduct
     * const menuProduct = await prisma.menuProduct.upsert({
     *   create: {
     *     // ... data to create a MenuProduct
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MenuProduct we want to update
     *   }
     * })
     */
    upsert<T extends MenuProductUpsertArgs>(args: SelectSubset<T, MenuProductUpsertArgs<ExtArgs>>): Prisma__MenuProductClient<$Result.GetResult<Prisma.$MenuProductPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of MenuProducts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProductCountArgs} args - Arguments to filter MenuProducts to count.
     * @example
     * // Count the number of MenuProducts
     * const count = await prisma.menuProduct.count({
     *   where: {
     *     // ... the filter for the MenuProducts we want to count
     *   }
     * })
    **/
    count<T extends MenuProductCountArgs>(
      args?: Subset<T, MenuProductCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MenuProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MenuProduct.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MenuProductAggregateArgs>(args: Subset<T, MenuProductAggregateArgs>): Prisma.PrismaPromise<GetMenuProductAggregateType<T>>

    /**
     * Group by MenuProduct.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MenuProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MenuProductGroupByArgs['orderBy'] }
        : { orderBy?: MenuProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MenuProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMenuProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MenuProduct model
   */
  readonly fields: MenuProductFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MenuProduct.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MenuProductClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    category<T extends MenuProduct$categoryArgs<ExtArgs> = {}>(args?: Subset<T, MenuProduct$categoryArgs<ExtArgs>>): Prisma__MenuCategoryClient<$Result.GetResult<Prisma.$MenuCategoryPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    modifierCategories<T extends MenuProduct$modifierCategoriesArgs<ExtArgs> = {}>(args?: Subset<T, MenuProduct$modifierCategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductModifierCategoryPayload<ExtArgs>, T, "findMany"> | Null>
    promotionModifierMarkups<T extends MenuProduct$promotionModifierMarkupsArgs<ExtArgs> = {}>(args?: Subset<T, MenuProduct$promotionModifierMarkupsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionModifierMarkupPayload<ExtArgs>, T, "findMany"> | Null>
    promotionProducts<T extends MenuProduct$promotionProductsArgs<ExtArgs> = {}>(args?: Subset<T, MenuProduct$promotionProductsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionProductPayload<ExtArgs>, T, "findMany"> | Null>
    productImages<T extends MenuProduct$productImagesArgs<ExtArgs> = {}>(args?: Subset<T, MenuProduct$productImagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MenuProduct model
   */ 
  interface MenuProductFieldRefs {
    readonly id: FieldRef<"MenuProduct", 'String'>
    readonly companyId: FieldRef<"MenuProduct", 'String'>
    readonly categoryId: FieldRef<"MenuProduct", 'String'>
    readonly name: FieldRef<"MenuProduct", 'Json'>
    readonly description: FieldRef<"MenuProduct", 'Json'>
    readonly image: FieldRef<"MenuProduct", 'String'>
    readonly images: FieldRef<"MenuProduct", 'String[]'>
    readonly slug: FieldRef<"MenuProduct", 'String'>
    readonly basePrice: FieldRef<"MenuProduct", 'Decimal'>
    readonly pricing: FieldRef<"MenuProduct", 'Json'>
    readonly cost: FieldRef<"MenuProduct", 'Decimal'>
    readonly status: FieldRef<"MenuProduct", 'Int'>
    readonly priority: FieldRef<"MenuProduct", 'Int'>
    readonly preparationTime: FieldRef<"MenuProduct", 'Int'>
    readonly pricingMethod: FieldRef<"MenuProduct", 'Int'>
    readonly sellingMethod: FieldRef<"MenuProduct", 'Int'>
    readonly tags: FieldRef<"MenuProduct", 'String[]'>
    readonly createdAt: FieldRef<"MenuProduct", 'DateTime'>
    readonly updatedAt: FieldRef<"MenuProduct", 'DateTime'>
    readonly deletedAt: FieldRef<"MenuProduct", 'DateTime'>
    readonly createdBy: FieldRef<"MenuProduct", 'String'>
    readonly updatedBy: FieldRef<"MenuProduct", 'String'>
  }
    

  // Custom InputTypes
  /**
   * MenuProduct findUnique
   */
  export type MenuProductFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProduct
     */
    select?: MenuProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProductInclude<ExtArgs> | null
    /**
     * Filter, which MenuProduct to fetch.
     */
    where: MenuProductWhereUniqueInput
  }

  /**
   * MenuProduct findUniqueOrThrow
   */
  export type MenuProductFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProduct
     */
    select?: MenuProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProductInclude<ExtArgs> | null
    /**
     * Filter, which MenuProduct to fetch.
     */
    where: MenuProductWhereUniqueInput
  }

  /**
   * MenuProduct findFirst
   */
  export type MenuProductFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProduct
     */
    select?: MenuProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProductInclude<ExtArgs> | null
    /**
     * Filter, which MenuProduct to fetch.
     */
    where?: MenuProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuProducts to fetch.
     */
    orderBy?: MenuProductOrderByWithRelationInput | MenuProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MenuProducts.
     */
    cursor?: MenuProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuProducts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuProducts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MenuProducts.
     */
    distinct?: MenuProductScalarFieldEnum | MenuProductScalarFieldEnum[]
  }

  /**
   * MenuProduct findFirstOrThrow
   */
  export type MenuProductFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProduct
     */
    select?: MenuProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProductInclude<ExtArgs> | null
    /**
     * Filter, which MenuProduct to fetch.
     */
    where?: MenuProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuProducts to fetch.
     */
    orderBy?: MenuProductOrderByWithRelationInput | MenuProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MenuProducts.
     */
    cursor?: MenuProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuProducts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuProducts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MenuProducts.
     */
    distinct?: MenuProductScalarFieldEnum | MenuProductScalarFieldEnum[]
  }

  /**
   * MenuProduct findMany
   */
  export type MenuProductFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProduct
     */
    select?: MenuProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProductInclude<ExtArgs> | null
    /**
     * Filter, which MenuProducts to fetch.
     */
    where?: MenuProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MenuProducts to fetch.
     */
    orderBy?: MenuProductOrderByWithRelationInput | MenuProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MenuProducts.
     */
    cursor?: MenuProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MenuProducts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MenuProducts.
     */
    skip?: number
    distinct?: MenuProductScalarFieldEnum | MenuProductScalarFieldEnum[]
  }

  /**
   * MenuProduct create
   */
  export type MenuProductCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProduct
     */
    select?: MenuProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProductInclude<ExtArgs> | null
    /**
     * The data needed to create a MenuProduct.
     */
    data: XOR<MenuProductCreateInput, MenuProductUncheckedCreateInput>
  }

  /**
   * MenuProduct createMany
   */
  export type MenuProductCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MenuProducts.
     */
    data: MenuProductCreateManyInput | MenuProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MenuProduct createManyAndReturn
   */
  export type MenuProductCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProduct
     */
    select?: MenuProductSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MenuProducts.
     */
    data: MenuProductCreateManyInput | MenuProductCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProductIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MenuProduct update
   */
  export type MenuProductUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProduct
     */
    select?: MenuProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProductInclude<ExtArgs> | null
    /**
     * The data needed to update a MenuProduct.
     */
    data: XOR<MenuProductUpdateInput, MenuProductUncheckedUpdateInput>
    /**
     * Choose, which MenuProduct to update.
     */
    where: MenuProductWhereUniqueInput
  }

  /**
   * MenuProduct updateMany
   */
  export type MenuProductUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MenuProducts.
     */
    data: XOR<MenuProductUpdateManyMutationInput, MenuProductUncheckedUpdateManyInput>
    /**
     * Filter which MenuProducts to update
     */
    where?: MenuProductWhereInput
  }

  /**
   * MenuProduct upsert
   */
  export type MenuProductUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProduct
     */
    select?: MenuProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProductInclude<ExtArgs> | null
    /**
     * The filter to search for the MenuProduct to update in case it exists.
     */
    where: MenuProductWhereUniqueInput
    /**
     * In case the MenuProduct found by the `where` argument doesn't exist, create a new MenuProduct with this data.
     */
    create: XOR<MenuProductCreateInput, MenuProductUncheckedCreateInput>
    /**
     * In case the MenuProduct was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MenuProductUpdateInput, MenuProductUncheckedUpdateInput>
  }

  /**
   * MenuProduct delete
   */
  export type MenuProductDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProduct
     */
    select?: MenuProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProductInclude<ExtArgs> | null
    /**
     * Filter which MenuProduct to delete.
     */
    where: MenuProductWhereUniqueInput
  }

  /**
   * MenuProduct deleteMany
   */
  export type MenuProductDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MenuProducts to delete
     */
    where?: MenuProductWhereInput
  }

  /**
   * MenuProduct.category
   */
  export type MenuProduct$categoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuCategory
     */
    select?: MenuCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuCategoryInclude<ExtArgs> | null
    where?: MenuCategoryWhereInput
  }

  /**
   * MenuProduct.modifierCategories
   */
  export type MenuProduct$modifierCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductModifierCategory
     */
    select?: ProductModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductModifierCategoryInclude<ExtArgs> | null
    where?: ProductModifierCategoryWhereInput
    orderBy?: ProductModifierCategoryOrderByWithRelationInput | ProductModifierCategoryOrderByWithRelationInput[]
    cursor?: ProductModifierCategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductModifierCategoryScalarFieldEnum | ProductModifierCategoryScalarFieldEnum[]
  }

  /**
   * MenuProduct.promotionModifierMarkups
   */
  export type MenuProduct$promotionModifierMarkupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionModifierMarkup
     */
    select?: PromotionModifierMarkupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionModifierMarkupInclude<ExtArgs> | null
    where?: PromotionModifierMarkupWhereInput
    orderBy?: PromotionModifierMarkupOrderByWithRelationInput | PromotionModifierMarkupOrderByWithRelationInput[]
    cursor?: PromotionModifierMarkupWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionModifierMarkupScalarFieldEnum | PromotionModifierMarkupScalarFieldEnum[]
  }

  /**
   * MenuProduct.promotionProducts
   */
  export type MenuProduct$promotionProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionProduct
     */
    select?: PromotionProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionProductInclude<ExtArgs> | null
    where?: PromotionProductWhereInput
    orderBy?: PromotionProductOrderByWithRelationInput | PromotionProductOrderByWithRelationInput[]
    cursor?: PromotionProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionProductScalarFieldEnum | PromotionProductScalarFieldEnum[]
  }

  /**
   * MenuProduct.productImages
   */
  export type MenuProduct$productImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    where?: ProductImageWhereInput
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    cursor?: ProductImageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductImageScalarFieldEnum | ProductImageScalarFieldEnum[]
  }

  /**
   * MenuProduct without action
   */
  export type MenuProductDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProduct
     */
    select?: MenuProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProductInclude<ExtArgs> | null
  }


  /**
   * Model ProductImage
   */

  export type AggregateProductImage = {
    _count: ProductImageCountAggregateOutputType | null
    _avg: ProductImageAvgAggregateOutputType | null
    _sum: ProductImageSumAggregateOutputType | null
    _min: ProductImageMinAggregateOutputType | null
    _max: ProductImageMaxAggregateOutputType | null
  }

  export type ProductImageAvgAggregateOutputType = {
    size: number | null
    width: number | null
    height: number | null
  }

  export type ProductImageSumAggregateOutputType = {
    size: number | null
    width: number | null
    height: number | null
  }

  export type ProductImageMinAggregateOutputType = {
    id: string | null
    productId: string | null
    filename: string | null
    originalName: string | null
    url: string | null
    size: number | null
    width: number | null
    height: number | null
    mimeType: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductImageMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    filename: string | null
    originalName: string | null
    url: string | null
    size: number | null
    width: number | null
    height: number | null
    mimeType: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductImageCountAggregateOutputType = {
    id: number
    productId: number
    filename: number
    originalName: number
    url: number
    size: number
    width: number
    height: number
    mimeType: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductImageAvgAggregateInputType = {
    size?: true
    width?: true
    height?: true
  }

  export type ProductImageSumAggregateInputType = {
    size?: true
    width?: true
    height?: true
  }

  export type ProductImageMinAggregateInputType = {
    id?: true
    productId?: true
    filename?: true
    originalName?: true
    url?: true
    size?: true
    width?: true
    height?: true
    mimeType?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductImageMaxAggregateInputType = {
    id?: true
    productId?: true
    filename?: true
    originalName?: true
    url?: true
    size?: true
    width?: true
    height?: true
    mimeType?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductImageCountAggregateInputType = {
    id?: true
    productId?: true
    filename?: true
    originalName?: true
    url?: true
    size?: true
    width?: true
    height?: true
    mimeType?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductImageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductImage to aggregate.
     */
    where?: ProductImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductImages to fetch.
     */
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductImages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductImages
    **/
    _count?: true | ProductImageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductImageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductImageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductImageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductImageMaxAggregateInputType
  }

  export type GetProductImageAggregateType<T extends ProductImageAggregateArgs> = {
        [P in keyof T & keyof AggregateProductImage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductImage[P]>
      : GetScalarType<T[P], AggregateProductImage[P]>
  }




  export type ProductImageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductImageWhereInput
    orderBy?: ProductImageOrderByWithAggregationInput | ProductImageOrderByWithAggregationInput[]
    by: ProductImageScalarFieldEnum[] | ProductImageScalarFieldEnum
    having?: ProductImageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductImageCountAggregateInputType | true
    _avg?: ProductImageAvgAggregateInputType
    _sum?: ProductImageSumAggregateInputType
    _min?: ProductImageMinAggregateInputType
    _max?: ProductImageMaxAggregateInputType
  }

  export type ProductImageGroupByOutputType = {
    id: string
    productId: string | null
    filename: string
    originalName: string
    url: string
    size: number
    width: number
    height: number
    mimeType: string
    createdAt: Date
    updatedAt: Date
    _count: ProductImageCountAggregateOutputType | null
    _avg: ProductImageAvgAggregateOutputType | null
    _sum: ProductImageSumAggregateOutputType | null
    _min: ProductImageMinAggregateOutputType | null
    _max: ProductImageMaxAggregateOutputType | null
  }

  type GetProductImageGroupByPayload<T extends ProductImageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductImageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductImageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductImageGroupByOutputType[P]>
            : GetScalarType<T[P], ProductImageGroupByOutputType[P]>
        }
      >
    >


  export type ProductImageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    filename?: boolean
    originalName?: boolean
    url?: boolean
    size?: boolean
    width?: boolean
    height?: boolean
    mimeType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductImage$productArgs<ExtArgs>
  }, ExtArgs["result"]["productImage"]>

  export type ProductImageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    filename?: boolean
    originalName?: boolean
    url?: boolean
    size?: boolean
    width?: boolean
    height?: boolean
    mimeType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    product?: boolean | ProductImage$productArgs<ExtArgs>
  }, ExtArgs["result"]["productImage"]>

  export type ProductImageSelectScalar = {
    id?: boolean
    productId?: boolean
    filename?: boolean
    originalName?: boolean
    url?: boolean
    size?: boolean
    width?: boolean
    height?: boolean
    mimeType?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductImageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductImage$productArgs<ExtArgs>
  }
  export type ProductImageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductImage$productArgs<ExtArgs>
  }

  export type $ProductImagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductImage"
    objects: {
      product: Prisma.$MenuProductPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string | null
      filename: string
      originalName: string
      url: string
      size: number
      width: number
      height: number
      mimeType: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["productImage"]>
    composites: {}
  }

  type ProductImageGetPayload<S extends boolean | null | undefined | ProductImageDefaultArgs> = $Result.GetResult<Prisma.$ProductImagePayload, S>

  type ProductImageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProductImageFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProductImageCountAggregateInputType | true
    }

  export interface ProductImageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductImage'], meta: { name: 'ProductImage' } }
    /**
     * Find zero or one ProductImage that matches the filter.
     * @param {ProductImageFindUniqueArgs} args - Arguments to find a ProductImage
     * @example
     * // Get one ProductImage
     * const productImage = await prisma.productImage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductImageFindUniqueArgs>(args: SelectSubset<T, ProductImageFindUniqueArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ProductImage that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProductImageFindUniqueOrThrowArgs} args - Arguments to find a ProductImage
     * @example
     * // Get one ProductImage
     * const productImage = await prisma.productImage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductImageFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductImageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ProductImage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageFindFirstArgs} args - Arguments to find a ProductImage
     * @example
     * // Get one ProductImage
     * const productImage = await prisma.productImage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductImageFindFirstArgs>(args?: SelectSubset<T, ProductImageFindFirstArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ProductImage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageFindFirstOrThrowArgs} args - Arguments to find a ProductImage
     * @example
     * // Get one ProductImage
     * const productImage = await prisma.productImage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductImageFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductImageFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ProductImages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductImages
     * const productImages = await prisma.productImage.findMany()
     * 
     * // Get first 10 ProductImages
     * const productImages = await prisma.productImage.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productImageWithIdOnly = await prisma.productImage.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductImageFindManyArgs>(args?: SelectSubset<T, ProductImageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ProductImage.
     * @param {ProductImageCreateArgs} args - Arguments to create a ProductImage.
     * @example
     * // Create one ProductImage
     * const ProductImage = await prisma.productImage.create({
     *   data: {
     *     // ... data to create a ProductImage
     *   }
     * })
     * 
     */
    create<T extends ProductImageCreateArgs>(args: SelectSubset<T, ProductImageCreateArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ProductImages.
     * @param {ProductImageCreateManyArgs} args - Arguments to create many ProductImages.
     * @example
     * // Create many ProductImages
     * const productImage = await prisma.productImage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductImageCreateManyArgs>(args?: SelectSubset<T, ProductImageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductImages and returns the data saved in the database.
     * @param {ProductImageCreateManyAndReturnArgs} args - Arguments to create many ProductImages.
     * @example
     * // Create many ProductImages
     * const productImage = await prisma.productImage.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductImages and only return the `id`
     * const productImageWithIdOnly = await prisma.productImage.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductImageCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductImageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ProductImage.
     * @param {ProductImageDeleteArgs} args - Arguments to delete one ProductImage.
     * @example
     * // Delete one ProductImage
     * const ProductImage = await prisma.productImage.delete({
     *   where: {
     *     // ... filter to delete one ProductImage
     *   }
     * })
     * 
     */
    delete<T extends ProductImageDeleteArgs>(args: SelectSubset<T, ProductImageDeleteArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ProductImage.
     * @param {ProductImageUpdateArgs} args - Arguments to update one ProductImage.
     * @example
     * // Update one ProductImage
     * const productImage = await prisma.productImage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductImageUpdateArgs>(args: SelectSubset<T, ProductImageUpdateArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ProductImages.
     * @param {ProductImageDeleteManyArgs} args - Arguments to filter ProductImages to delete.
     * @example
     * // Delete a few ProductImages
     * const { count } = await prisma.productImage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductImageDeleteManyArgs>(args?: SelectSubset<T, ProductImageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductImages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductImages
     * const productImage = await prisma.productImage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductImageUpdateManyArgs>(args: SelectSubset<T, ProductImageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProductImage.
     * @param {ProductImageUpsertArgs} args - Arguments to update or create a ProductImage.
     * @example
     * // Update or create a ProductImage
     * const productImage = await prisma.productImage.upsert({
     *   create: {
     *     // ... data to create a ProductImage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductImage we want to update
     *   }
     * })
     */
    upsert<T extends ProductImageUpsertArgs>(args: SelectSubset<T, ProductImageUpsertArgs<ExtArgs>>): Prisma__ProductImageClient<$Result.GetResult<Prisma.$ProductImagePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ProductImages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageCountArgs} args - Arguments to filter ProductImages to count.
     * @example
     * // Count the number of ProductImages
     * const count = await prisma.productImage.count({
     *   where: {
     *     // ... the filter for the ProductImages we want to count
     *   }
     * })
    **/
    count<T extends ProductImageCountArgs>(
      args?: Subset<T, ProductImageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductImageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductImage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductImageAggregateArgs>(args: Subset<T, ProductImageAggregateArgs>): Prisma.PrismaPromise<GetProductImageAggregateType<T>>

    /**
     * Group by ProductImage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductImageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductImageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductImageGroupByArgs['orderBy'] }
        : { orderBy?: ProductImageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductImageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductImageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductImage model
   */
  readonly fields: ProductImageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductImage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductImageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductImage$productArgs<ExtArgs> = {}>(args?: Subset<T, ProductImage$productArgs<ExtArgs>>): Prisma__MenuProductClient<$Result.GetResult<Prisma.$MenuProductPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductImage model
   */ 
  interface ProductImageFieldRefs {
    readonly id: FieldRef<"ProductImage", 'String'>
    readonly productId: FieldRef<"ProductImage", 'String'>
    readonly filename: FieldRef<"ProductImage", 'String'>
    readonly originalName: FieldRef<"ProductImage", 'String'>
    readonly url: FieldRef<"ProductImage", 'String'>
    readonly size: FieldRef<"ProductImage", 'Int'>
    readonly width: FieldRef<"ProductImage", 'Int'>
    readonly height: FieldRef<"ProductImage", 'Int'>
    readonly mimeType: FieldRef<"ProductImage", 'String'>
    readonly createdAt: FieldRef<"ProductImage", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductImage", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductImage findUnique
   */
  export type ProductImageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter, which ProductImage to fetch.
     */
    where: ProductImageWhereUniqueInput
  }

  /**
   * ProductImage findUniqueOrThrow
   */
  export type ProductImageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter, which ProductImage to fetch.
     */
    where: ProductImageWhereUniqueInput
  }

  /**
   * ProductImage findFirst
   */
  export type ProductImageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter, which ProductImage to fetch.
     */
    where?: ProductImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductImages to fetch.
     */
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductImages.
     */
    cursor?: ProductImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductImages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductImages.
     */
    distinct?: ProductImageScalarFieldEnum | ProductImageScalarFieldEnum[]
  }

  /**
   * ProductImage findFirstOrThrow
   */
  export type ProductImageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter, which ProductImage to fetch.
     */
    where?: ProductImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductImages to fetch.
     */
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductImages.
     */
    cursor?: ProductImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductImages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductImages.
     */
    distinct?: ProductImageScalarFieldEnum | ProductImageScalarFieldEnum[]
  }

  /**
   * ProductImage findMany
   */
  export type ProductImageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter, which ProductImages to fetch.
     */
    where?: ProductImageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductImages to fetch.
     */
    orderBy?: ProductImageOrderByWithRelationInput | ProductImageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductImages.
     */
    cursor?: ProductImageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductImages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductImages.
     */
    skip?: number
    distinct?: ProductImageScalarFieldEnum | ProductImageScalarFieldEnum[]
  }

  /**
   * ProductImage create
   */
  export type ProductImageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductImage.
     */
    data: XOR<ProductImageCreateInput, ProductImageUncheckedCreateInput>
  }

  /**
   * ProductImage createMany
   */
  export type ProductImageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductImages.
     */
    data: ProductImageCreateManyInput | ProductImageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductImage createManyAndReturn
   */
  export type ProductImageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ProductImages.
     */
    data: ProductImageCreateManyInput | ProductImageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductImage update
   */
  export type ProductImageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductImage.
     */
    data: XOR<ProductImageUpdateInput, ProductImageUncheckedUpdateInput>
    /**
     * Choose, which ProductImage to update.
     */
    where: ProductImageWhereUniqueInput
  }

  /**
   * ProductImage updateMany
   */
  export type ProductImageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductImages.
     */
    data: XOR<ProductImageUpdateManyMutationInput, ProductImageUncheckedUpdateManyInput>
    /**
     * Filter which ProductImages to update
     */
    where?: ProductImageWhereInput
  }

  /**
   * ProductImage upsert
   */
  export type ProductImageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductImage to update in case it exists.
     */
    where: ProductImageWhereUniqueInput
    /**
     * In case the ProductImage found by the `where` argument doesn't exist, create a new ProductImage with this data.
     */
    create: XOR<ProductImageCreateInput, ProductImageUncheckedCreateInput>
    /**
     * In case the ProductImage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductImageUpdateInput, ProductImageUncheckedUpdateInput>
  }

  /**
   * ProductImage delete
   */
  export type ProductImageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
    /**
     * Filter which ProductImage to delete.
     */
    where: ProductImageWhereUniqueInput
  }

  /**
   * ProductImage deleteMany
   */
  export type ProductImageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductImages to delete
     */
    where?: ProductImageWhereInput
  }

  /**
   * ProductImage.product
   */
  export type ProductImage$productArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MenuProduct
     */
    select?: MenuProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MenuProductInclude<ExtArgs> | null
    where?: MenuProductWhereInput
  }

  /**
   * ProductImage without action
   */
  export type ProductImageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductImage
     */
    select?: ProductImageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductImageInclude<ExtArgs> | null
  }


  /**
   * Model ModifierCategory
   */

  export type AggregateModifierCategory = {
    _count: ModifierCategoryCountAggregateOutputType | null
    _avg: ModifierCategoryAvgAggregateOutputType | null
    _sum: ModifierCategorySumAggregateOutputType | null
    _min: ModifierCategoryMinAggregateOutputType | null
    _max: ModifierCategoryMaxAggregateOutputType | null
  }

  export type ModifierCategoryAvgAggregateOutputType = {
    displayNumber: number | null
    minSelections: number | null
    maxSelections: number | null
  }

  export type ModifierCategorySumAggregateOutputType = {
    displayNumber: number | null
    minSelections: number | null
    maxSelections: number | null
  }

  export type ModifierCategoryMinAggregateOutputType = {
    id: string | null
    companyId: string | null
    displayNumber: number | null
    image: string | null
    selectionType: $Enums.ModifierSelectionType | null
    isRequired: boolean | null
    minSelections: number | null
    maxSelections: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ModifierCategoryMaxAggregateOutputType = {
    id: string | null
    companyId: string | null
    displayNumber: number | null
    image: string | null
    selectionType: $Enums.ModifierSelectionType | null
    isRequired: boolean | null
    minSelections: number | null
    maxSelections: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ModifierCategoryCountAggregateOutputType = {
    id: number
    companyId: number
    name: number
    description: number
    displayNumber: number
    image: number
    selectionType: number
    isRequired: number
    minSelections: number
    maxSelections: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type ModifierCategoryAvgAggregateInputType = {
    displayNumber?: true
    minSelections?: true
    maxSelections?: true
  }

  export type ModifierCategorySumAggregateInputType = {
    displayNumber?: true
    minSelections?: true
    maxSelections?: true
  }

  export type ModifierCategoryMinAggregateInputType = {
    id?: true
    companyId?: true
    displayNumber?: true
    image?: true
    selectionType?: true
    isRequired?: true
    minSelections?: true
    maxSelections?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ModifierCategoryMaxAggregateInputType = {
    id?: true
    companyId?: true
    displayNumber?: true
    image?: true
    selectionType?: true
    isRequired?: true
    minSelections?: true
    maxSelections?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ModifierCategoryCountAggregateInputType = {
    id?: true
    companyId?: true
    name?: true
    description?: true
    displayNumber?: true
    image?: true
    selectionType?: true
    isRequired?: true
    minSelections?: true
    maxSelections?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type ModifierCategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ModifierCategory to aggregate.
     */
    where?: ModifierCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModifierCategories to fetch.
     */
    orderBy?: ModifierCategoryOrderByWithRelationInput | ModifierCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ModifierCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModifierCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModifierCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ModifierCategories
    **/
    _count?: true | ModifierCategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ModifierCategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ModifierCategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ModifierCategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ModifierCategoryMaxAggregateInputType
  }

  export type GetModifierCategoryAggregateType<T extends ModifierCategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateModifierCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModifierCategory[P]>
      : GetScalarType<T[P], AggregateModifierCategory[P]>
  }




  export type ModifierCategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModifierCategoryWhereInput
    orderBy?: ModifierCategoryOrderByWithAggregationInput | ModifierCategoryOrderByWithAggregationInput[]
    by: ModifierCategoryScalarFieldEnum[] | ModifierCategoryScalarFieldEnum
    having?: ModifierCategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ModifierCategoryCountAggregateInputType | true
    _avg?: ModifierCategoryAvgAggregateInputType
    _sum?: ModifierCategorySumAggregateInputType
    _min?: ModifierCategoryMinAggregateInputType
    _max?: ModifierCategoryMaxAggregateInputType
  }

  export type ModifierCategoryGroupByOutputType = {
    id: string
    companyId: string
    name: JsonValue
    description: JsonValue | null
    displayNumber: number
    image: string | null
    selectionType: $Enums.ModifierSelectionType
    isRequired: boolean
    minSelections: number
    maxSelections: number
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: ModifierCategoryCountAggregateOutputType | null
    _avg: ModifierCategoryAvgAggregateOutputType | null
    _sum: ModifierCategorySumAggregateOutputType | null
    _min: ModifierCategoryMinAggregateOutputType | null
    _max: ModifierCategoryMaxAggregateOutputType | null
  }

  type GetModifierCategoryGroupByPayload<T extends ModifierCategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ModifierCategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ModifierCategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ModifierCategoryGroupByOutputType[P]>
            : GetScalarType<T[P], ModifierCategoryGroupByOutputType[P]>
        }
      >
    >


  export type ModifierCategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    name?: boolean
    description?: boolean
    displayNumber?: boolean
    image?: boolean
    selectionType?: boolean
    isRequired?: boolean
    minSelections?: boolean
    maxSelections?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    modifiers?: boolean | ModifierCategory$modifiersArgs<ExtArgs>
    productCategories?: boolean | ModifierCategory$productCategoriesArgs<ExtArgs>
    _count?: boolean | ModifierCategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modifierCategory"]>

  export type ModifierCategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    name?: boolean
    description?: boolean
    displayNumber?: boolean
    image?: boolean
    selectionType?: boolean
    isRequired?: boolean
    minSelections?: boolean
    maxSelections?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modifierCategory"]>

  export type ModifierCategorySelectScalar = {
    id?: boolean
    companyId?: boolean
    name?: boolean
    description?: boolean
    displayNumber?: boolean
    image?: boolean
    selectionType?: boolean
    isRequired?: boolean
    minSelections?: boolean
    maxSelections?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }

  export type ModifierCategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    modifiers?: boolean | ModifierCategory$modifiersArgs<ExtArgs>
    productCategories?: boolean | ModifierCategory$productCategoriesArgs<ExtArgs>
    _count?: boolean | ModifierCategoryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ModifierCategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $ModifierCategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ModifierCategory"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
      modifiers: Prisma.$ModifierPayload<ExtArgs>[]
      productCategories: Prisma.$ProductModifierCategoryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      companyId: string
      name: Prisma.JsonValue
      description: Prisma.JsonValue | null
      displayNumber: number
      image: string | null
      selectionType: $Enums.ModifierSelectionType
      isRequired: boolean
      minSelections: number
      maxSelections: number
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
    }, ExtArgs["result"]["modifierCategory"]>
    composites: {}
  }

  type ModifierCategoryGetPayload<S extends boolean | null | undefined | ModifierCategoryDefaultArgs> = $Result.GetResult<Prisma.$ModifierCategoryPayload, S>

  type ModifierCategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ModifierCategoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ModifierCategoryCountAggregateInputType | true
    }

  export interface ModifierCategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ModifierCategory'], meta: { name: 'ModifierCategory' } }
    /**
     * Find zero or one ModifierCategory that matches the filter.
     * @param {ModifierCategoryFindUniqueArgs} args - Arguments to find a ModifierCategory
     * @example
     * // Get one ModifierCategory
     * const modifierCategory = await prisma.modifierCategory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ModifierCategoryFindUniqueArgs>(args: SelectSubset<T, ModifierCategoryFindUniqueArgs<ExtArgs>>): Prisma__ModifierCategoryClient<$Result.GetResult<Prisma.$ModifierCategoryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ModifierCategory that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ModifierCategoryFindUniqueOrThrowArgs} args - Arguments to find a ModifierCategory
     * @example
     * // Get one ModifierCategory
     * const modifierCategory = await prisma.modifierCategory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ModifierCategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, ModifierCategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ModifierCategoryClient<$Result.GetResult<Prisma.$ModifierCategoryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ModifierCategory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierCategoryFindFirstArgs} args - Arguments to find a ModifierCategory
     * @example
     * // Get one ModifierCategory
     * const modifierCategory = await prisma.modifierCategory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ModifierCategoryFindFirstArgs>(args?: SelectSubset<T, ModifierCategoryFindFirstArgs<ExtArgs>>): Prisma__ModifierCategoryClient<$Result.GetResult<Prisma.$ModifierCategoryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ModifierCategory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierCategoryFindFirstOrThrowArgs} args - Arguments to find a ModifierCategory
     * @example
     * // Get one ModifierCategory
     * const modifierCategory = await prisma.modifierCategory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ModifierCategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, ModifierCategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__ModifierCategoryClient<$Result.GetResult<Prisma.$ModifierCategoryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ModifierCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierCategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ModifierCategories
     * const modifierCategories = await prisma.modifierCategory.findMany()
     * 
     * // Get first 10 ModifierCategories
     * const modifierCategories = await prisma.modifierCategory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const modifierCategoryWithIdOnly = await prisma.modifierCategory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ModifierCategoryFindManyArgs>(args?: SelectSubset<T, ModifierCategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModifierCategoryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ModifierCategory.
     * @param {ModifierCategoryCreateArgs} args - Arguments to create a ModifierCategory.
     * @example
     * // Create one ModifierCategory
     * const ModifierCategory = await prisma.modifierCategory.create({
     *   data: {
     *     // ... data to create a ModifierCategory
     *   }
     * })
     * 
     */
    create<T extends ModifierCategoryCreateArgs>(args: SelectSubset<T, ModifierCategoryCreateArgs<ExtArgs>>): Prisma__ModifierCategoryClient<$Result.GetResult<Prisma.$ModifierCategoryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ModifierCategories.
     * @param {ModifierCategoryCreateManyArgs} args - Arguments to create many ModifierCategories.
     * @example
     * // Create many ModifierCategories
     * const modifierCategory = await prisma.modifierCategory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ModifierCategoryCreateManyArgs>(args?: SelectSubset<T, ModifierCategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ModifierCategories and returns the data saved in the database.
     * @param {ModifierCategoryCreateManyAndReturnArgs} args - Arguments to create many ModifierCategories.
     * @example
     * // Create many ModifierCategories
     * const modifierCategory = await prisma.modifierCategory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ModifierCategories and only return the `id`
     * const modifierCategoryWithIdOnly = await prisma.modifierCategory.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ModifierCategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, ModifierCategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModifierCategoryPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ModifierCategory.
     * @param {ModifierCategoryDeleteArgs} args - Arguments to delete one ModifierCategory.
     * @example
     * // Delete one ModifierCategory
     * const ModifierCategory = await prisma.modifierCategory.delete({
     *   where: {
     *     // ... filter to delete one ModifierCategory
     *   }
     * })
     * 
     */
    delete<T extends ModifierCategoryDeleteArgs>(args: SelectSubset<T, ModifierCategoryDeleteArgs<ExtArgs>>): Prisma__ModifierCategoryClient<$Result.GetResult<Prisma.$ModifierCategoryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ModifierCategory.
     * @param {ModifierCategoryUpdateArgs} args - Arguments to update one ModifierCategory.
     * @example
     * // Update one ModifierCategory
     * const modifierCategory = await prisma.modifierCategory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ModifierCategoryUpdateArgs>(args: SelectSubset<T, ModifierCategoryUpdateArgs<ExtArgs>>): Prisma__ModifierCategoryClient<$Result.GetResult<Prisma.$ModifierCategoryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ModifierCategories.
     * @param {ModifierCategoryDeleteManyArgs} args - Arguments to filter ModifierCategories to delete.
     * @example
     * // Delete a few ModifierCategories
     * const { count } = await prisma.modifierCategory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ModifierCategoryDeleteManyArgs>(args?: SelectSubset<T, ModifierCategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ModifierCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierCategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ModifierCategories
     * const modifierCategory = await prisma.modifierCategory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ModifierCategoryUpdateManyArgs>(args: SelectSubset<T, ModifierCategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ModifierCategory.
     * @param {ModifierCategoryUpsertArgs} args - Arguments to update or create a ModifierCategory.
     * @example
     * // Update or create a ModifierCategory
     * const modifierCategory = await prisma.modifierCategory.upsert({
     *   create: {
     *     // ... data to create a ModifierCategory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ModifierCategory we want to update
     *   }
     * })
     */
    upsert<T extends ModifierCategoryUpsertArgs>(args: SelectSubset<T, ModifierCategoryUpsertArgs<ExtArgs>>): Prisma__ModifierCategoryClient<$Result.GetResult<Prisma.$ModifierCategoryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ModifierCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierCategoryCountArgs} args - Arguments to filter ModifierCategories to count.
     * @example
     * // Count the number of ModifierCategories
     * const count = await prisma.modifierCategory.count({
     *   where: {
     *     // ... the filter for the ModifierCategories we want to count
     *   }
     * })
    **/
    count<T extends ModifierCategoryCountArgs>(
      args?: Subset<T, ModifierCategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ModifierCategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ModifierCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierCategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ModifierCategoryAggregateArgs>(args: Subset<T, ModifierCategoryAggregateArgs>): Prisma.PrismaPromise<GetModifierCategoryAggregateType<T>>

    /**
     * Group by ModifierCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierCategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ModifierCategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ModifierCategoryGroupByArgs['orderBy'] }
        : { orderBy?: ModifierCategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ModifierCategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModifierCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ModifierCategory model
   */
  readonly fields: ModifierCategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ModifierCategory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ModifierCategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    modifiers<T extends ModifierCategory$modifiersArgs<ExtArgs> = {}>(args?: Subset<T, ModifierCategory$modifiersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findMany"> | Null>
    productCategories<T extends ModifierCategory$productCategoriesArgs<ExtArgs> = {}>(args?: Subset<T, ModifierCategory$productCategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductModifierCategoryPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ModifierCategory model
   */ 
  interface ModifierCategoryFieldRefs {
    readonly id: FieldRef<"ModifierCategory", 'String'>
    readonly companyId: FieldRef<"ModifierCategory", 'String'>
    readonly name: FieldRef<"ModifierCategory", 'Json'>
    readonly description: FieldRef<"ModifierCategory", 'Json'>
    readonly displayNumber: FieldRef<"ModifierCategory", 'Int'>
    readonly image: FieldRef<"ModifierCategory", 'String'>
    readonly selectionType: FieldRef<"ModifierCategory", 'ModifierSelectionType'>
    readonly isRequired: FieldRef<"ModifierCategory", 'Boolean'>
    readonly minSelections: FieldRef<"ModifierCategory", 'Int'>
    readonly maxSelections: FieldRef<"ModifierCategory", 'Int'>
    readonly createdAt: FieldRef<"ModifierCategory", 'DateTime'>
    readonly updatedAt: FieldRef<"ModifierCategory", 'DateTime'>
    readonly deletedAt: FieldRef<"ModifierCategory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ModifierCategory findUnique
   */
  export type ModifierCategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierCategory
     */
    select?: ModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ModifierCategory to fetch.
     */
    where: ModifierCategoryWhereUniqueInput
  }

  /**
   * ModifierCategory findUniqueOrThrow
   */
  export type ModifierCategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierCategory
     */
    select?: ModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ModifierCategory to fetch.
     */
    where: ModifierCategoryWhereUniqueInput
  }

  /**
   * ModifierCategory findFirst
   */
  export type ModifierCategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierCategory
     */
    select?: ModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ModifierCategory to fetch.
     */
    where?: ModifierCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModifierCategories to fetch.
     */
    orderBy?: ModifierCategoryOrderByWithRelationInput | ModifierCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ModifierCategories.
     */
    cursor?: ModifierCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModifierCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModifierCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ModifierCategories.
     */
    distinct?: ModifierCategoryScalarFieldEnum | ModifierCategoryScalarFieldEnum[]
  }

  /**
   * ModifierCategory findFirstOrThrow
   */
  export type ModifierCategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierCategory
     */
    select?: ModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ModifierCategory to fetch.
     */
    where?: ModifierCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModifierCategories to fetch.
     */
    orderBy?: ModifierCategoryOrderByWithRelationInput | ModifierCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ModifierCategories.
     */
    cursor?: ModifierCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModifierCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModifierCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ModifierCategories.
     */
    distinct?: ModifierCategoryScalarFieldEnum | ModifierCategoryScalarFieldEnum[]
  }

  /**
   * ModifierCategory findMany
   */
  export type ModifierCategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierCategory
     */
    select?: ModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ModifierCategories to fetch.
     */
    where?: ModifierCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModifierCategories to fetch.
     */
    orderBy?: ModifierCategoryOrderByWithRelationInput | ModifierCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ModifierCategories.
     */
    cursor?: ModifierCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModifierCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModifierCategories.
     */
    skip?: number
    distinct?: ModifierCategoryScalarFieldEnum | ModifierCategoryScalarFieldEnum[]
  }

  /**
   * ModifierCategory create
   */
  export type ModifierCategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierCategory
     */
    select?: ModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierCategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a ModifierCategory.
     */
    data: XOR<ModifierCategoryCreateInput, ModifierCategoryUncheckedCreateInput>
  }

  /**
   * ModifierCategory createMany
   */
  export type ModifierCategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ModifierCategories.
     */
    data: ModifierCategoryCreateManyInput | ModifierCategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ModifierCategory createManyAndReturn
   */
  export type ModifierCategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierCategory
     */
    select?: ModifierCategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ModifierCategories.
     */
    data: ModifierCategoryCreateManyInput | ModifierCategoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierCategoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ModifierCategory update
   */
  export type ModifierCategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierCategory
     */
    select?: ModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierCategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a ModifierCategory.
     */
    data: XOR<ModifierCategoryUpdateInput, ModifierCategoryUncheckedUpdateInput>
    /**
     * Choose, which ModifierCategory to update.
     */
    where: ModifierCategoryWhereUniqueInput
  }

  /**
   * ModifierCategory updateMany
   */
  export type ModifierCategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ModifierCategories.
     */
    data: XOR<ModifierCategoryUpdateManyMutationInput, ModifierCategoryUncheckedUpdateManyInput>
    /**
     * Filter which ModifierCategories to update
     */
    where?: ModifierCategoryWhereInput
  }

  /**
   * ModifierCategory upsert
   */
  export type ModifierCategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierCategory
     */
    select?: ModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierCategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the ModifierCategory to update in case it exists.
     */
    where: ModifierCategoryWhereUniqueInput
    /**
     * In case the ModifierCategory found by the `where` argument doesn't exist, create a new ModifierCategory with this data.
     */
    create: XOR<ModifierCategoryCreateInput, ModifierCategoryUncheckedCreateInput>
    /**
     * In case the ModifierCategory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ModifierCategoryUpdateInput, ModifierCategoryUncheckedUpdateInput>
  }

  /**
   * ModifierCategory delete
   */
  export type ModifierCategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierCategory
     */
    select?: ModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierCategoryInclude<ExtArgs> | null
    /**
     * Filter which ModifierCategory to delete.
     */
    where: ModifierCategoryWhereUniqueInput
  }

  /**
   * ModifierCategory deleteMany
   */
  export type ModifierCategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ModifierCategories to delete
     */
    where?: ModifierCategoryWhereInput
  }

  /**
   * ModifierCategory.modifiers
   */
  export type ModifierCategory$modifiersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    where?: ModifierWhereInput
    orderBy?: ModifierOrderByWithRelationInput | ModifierOrderByWithRelationInput[]
    cursor?: ModifierWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ModifierScalarFieldEnum | ModifierScalarFieldEnum[]
  }

  /**
   * ModifierCategory.productCategories
   */
  export type ModifierCategory$productCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductModifierCategory
     */
    select?: ProductModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductModifierCategoryInclude<ExtArgs> | null
    where?: ProductModifierCategoryWhereInput
    orderBy?: ProductModifierCategoryOrderByWithRelationInput | ProductModifierCategoryOrderByWithRelationInput[]
    cursor?: ProductModifierCategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductModifierCategoryScalarFieldEnum | ProductModifierCategoryScalarFieldEnum[]
  }

  /**
   * ModifierCategory without action
   */
  export type ModifierCategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierCategory
     */
    select?: ModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierCategoryInclude<ExtArgs> | null
  }


  /**
   * Model Modifier
   */

  export type AggregateModifier = {
    _count: ModifierCountAggregateOutputType | null
    _avg: ModifierAvgAggregateOutputType | null
    _sum: ModifierSumAggregateOutputType | null
    _min: ModifierMinAggregateOutputType | null
    _max: ModifierMaxAggregateOutputType | null
  }

  export type ModifierAvgAggregateOutputType = {
    basePrice: Decimal | null
    cost: Decimal | null
    status: number | null
    displayNumber: number | null
  }

  export type ModifierSumAggregateOutputType = {
    basePrice: Decimal | null
    cost: Decimal | null
    status: number | null
    displayNumber: number | null
  }

  export type ModifierMinAggregateOutputType = {
    id: string | null
    modifierCategoryId: string | null
    companyId: string | null
    basePrice: Decimal | null
    cost: Decimal | null
    status: number | null
    displayNumber: number | null
    isDefault: boolean | null
    image: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ModifierMaxAggregateOutputType = {
    id: string | null
    modifierCategoryId: string | null
    companyId: string | null
    basePrice: Decimal | null
    cost: Decimal | null
    status: number | null
    displayNumber: number | null
    isDefault: boolean | null
    image: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type ModifierCountAggregateOutputType = {
    id: number
    modifierCategoryId: number
    companyId: number
    name: number
    description: number
    basePrice: number
    pricing: number
    cost: number
    status: number
    displayNumber: number
    isDefault: number
    image: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type ModifierAvgAggregateInputType = {
    basePrice?: true
    cost?: true
    status?: true
    displayNumber?: true
  }

  export type ModifierSumAggregateInputType = {
    basePrice?: true
    cost?: true
    status?: true
    displayNumber?: true
  }

  export type ModifierMinAggregateInputType = {
    id?: true
    modifierCategoryId?: true
    companyId?: true
    basePrice?: true
    cost?: true
    status?: true
    displayNumber?: true
    isDefault?: true
    image?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ModifierMaxAggregateInputType = {
    id?: true
    modifierCategoryId?: true
    companyId?: true
    basePrice?: true
    cost?: true
    status?: true
    displayNumber?: true
    isDefault?: true
    image?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type ModifierCountAggregateInputType = {
    id?: true
    modifierCategoryId?: true
    companyId?: true
    name?: true
    description?: true
    basePrice?: true
    pricing?: true
    cost?: true
    status?: true
    displayNumber?: true
    isDefault?: true
    image?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type ModifierAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Modifier to aggregate.
     */
    where?: ModifierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modifiers to fetch.
     */
    orderBy?: ModifierOrderByWithRelationInput | ModifierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ModifierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modifiers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modifiers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Modifiers
    **/
    _count?: true | ModifierCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ModifierAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ModifierSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ModifierMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ModifierMaxAggregateInputType
  }

  export type GetModifierAggregateType<T extends ModifierAggregateArgs> = {
        [P in keyof T & keyof AggregateModifier]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModifier[P]>
      : GetScalarType<T[P], AggregateModifier[P]>
  }




  export type ModifierGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModifierWhereInput
    orderBy?: ModifierOrderByWithAggregationInput | ModifierOrderByWithAggregationInput[]
    by: ModifierScalarFieldEnum[] | ModifierScalarFieldEnum
    having?: ModifierScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ModifierCountAggregateInputType | true
    _avg?: ModifierAvgAggregateInputType
    _sum?: ModifierSumAggregateInputType
    _min?: ModifierMinAggregateInputType
    _max?: ModifierMaxAggregateInputType
  }

  export type ModifierGroupByOutputType = {
    id: string
    modifierCategoryId: string
    companyId: string
    name: JsonValue
    description: JsonValue | null
    basePrice: Decimal
    pricing: JsonValue
    cost: Decimal
    status: number
    displayNumber: number
    isDefault: boolean
    image: string | null
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: ModifierCountAggregateOutputType | null
    _avg: ModifierAvgAggregateOutputType | null
    _sum: ModifierSumAggregateOutputType | null
    _min: ModifierMinAggregateOutputType | null
    _max: ModifierMaxAggregateOutputType | null
  }

  type GetModifierGroupByPayload<T extends ModifierGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ModifierGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ModifierGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ModifierGroupByOutputType[P]>
            : GetScalarType<T[P], ModifierGroupByOutputType[P]>
        }
      >
    >


  export type ModifierSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    modifierCategoryId?: boolean
    companyId?: boolean
    name?: boolean
    description?: boolean
    basePrice?: boolean
    pricing?: boolean
    cost?: boolean
    status?: boolean
    displayNumber?: boolean
    isDefault?: boolean
    image?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    modifierCategory?: boolean | ModifierCategoryDefaultArgs<ExtArgs>
    promotionMarkups?: boolean | Modifier$promotionMarkupsArgs<ExtArgs>
    _count?: boolean | ModifierCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modifier"]>

  export type ModifierSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    modifierCategoryId?: boolean
    companyId?: boolean
    name?: boolean
    description?: boolean
    basePrice?: boolean
    pricing?: boolean
    cost?: boolean
    status?: boolean
    displayNumber?: boolean
    isDefault?: boolean
    image?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    modifierCategory?: boolean | ModifierCategoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modifier"]>

  export type ModifierSelectScalar = {
    id?: boolean
    modifierCategoryId?: boolean
    companyId?: boolean
    name?: boolean
    description?: boolean
    basePrice?: boolean
    pricing?: boolean
    cost?: boolean
    status?: boolean
    displayNumber?: boolean
    isDefault?: boolean
    image?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }

  export type ModifierInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    modifierCategory?: boolean | ModifierCategoryDefaultArgs<ExtArgs>
    promotionMarkups?: boolean | Modifier$promotionMarkupsArgs<ExtArgs>
    _count?: boolean | ModifierCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ModifierIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    modifierCategory?: boolean | ModifierCategoryDefaultArgs<ExtArgs>
  }

  export type $ModifierPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Modifier"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
      modifierCategory: Prisma.$ModifierCategoryPayload<ExtArgs>
      promotionMarkups: Prisma.$PromotionModifierMarkupPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      modifierCategoryId: string
      companyId: string
      name: Prisma.JsonValue
      description: Prisma.JsonValue | null
      basePrice: Prisma.Decimal
      pricing: Prisma.JsonValue
      cost: Prisma.Decimal
      status: number
      displayNumber: number
      isDefault: boolean
      image: string | null
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
    }, ExtArgs["result"]["modifier"]>
    composites: {}
  }

  type ModifierGetPayload<S extends boolean | null | undefined | ModifierDefaultArgs> = $Result.GetResult<Prisma.$ModifierPayload, S>

  type ModifierCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ModifierFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ModifierCountAggregateInputType | true
    }

  export interface ModifierDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Modifier'], meta: { name: 'Modifier' } }
    /**
     * Find zero or one Modifier that matches the filter.
     * @param {ModifierFindUniqueArgs} args - Arguments to find a Modifier
     * @example
     * // Get one Modifier
     * const modifier = await prisma.modifier.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ModifierFindUniqueArgs>(args: SelectSubset<T, ModifierFindUniqueArgs<ExtArgs>>): Prisma__ModifierClient<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Modifier that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ModifierFindUniqueOrThrowArgs} args - Arguments to find a Modifier
     * @example
     * // Get one Modifier
     * const modifier = await prisma.modifier.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ModifierFindUniqueOrThrowArgs>(args: SelectSubset<T, ModifierFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ModifierClient<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Modifier that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierFindFirstArgs} args - Arguments to find a Modifier
     * @example
     * // Get one Modifier
     * const modifier = await prisma.modifier.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ModifierFindFirstArgs>(args?: SelectSubset<T, ModifierFindFirstArgs<ExtArgs>>): Prisma__ModifierClient<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Modifier that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierFindFirstOrThrowArgs} args - Arguments to find a Modifier
     * @example
     * // Get one Modifier
     * const modifier = await prisma.modifier.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ModifierFindFirstOrThrowArgs>(args?: SelectSubset<T, ModifierFindFirstOrThrowArgs<ExtArgs>>): Prisma__ModifierClient<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Modifiers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Modifiers
     * const modifiers = await prisma.modifier.findMany()
     * 
     * // Get first 10 Modifiers
     * const modifiers = await prisma.modifier.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const modifierWithIdOnly = await prisma.modifier.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ModifierFindManyArgs>(args?: SelectSubset<T, ModifierFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Modifier.
     * @param {ModifierCreateArgs} args - Arguments to create a Modifier.
     * @example
     * // Create one Modifier
     * const Modifier = await prisma.modifier.create({
     *   data: {
     *     // ... data to create a Modifier
     *   }
     * })
     * 
     */
    create<T extends ModifierCreateArgs>(args: SelectSubset<T, ModifierCreateArgs<ExtArgs>>): Prisma__ModifierClient<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Modifiers.
     * @param {ModifierCreateManyArgs} args - Arguments to create many Modifiers.
     * @example
     * // Create many Modifiers
     * const modifier = await prisma.modifier.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ModifierCreateManyArgs>(args?: SelectSubset<T, ModifierCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Modifiers and returns the data saved in the database.
     * @param {ModifierCreateManyAndReturnArgs} args - Arguments to create many Modifiers.
     * @example
     * // Create many Modifiers
     * const modifier = await prisma.modifier.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Modifiers and only return the `id`
     * const modifierWithIdOnly = await prisma.modifier.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ModifierCreateManyAndReturnArgs>(args?: SelectSubset<T, ModifierCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Modifier.
     * @param {ModifierDeleteArgs} args - Arguments to delete one Modifier.
     * @example
     * // Delete one Modifier
     * const Modifier = await prisma.modifier.delete({
     *   where: {
     *     // ... filter to delete one Modifier
     *   }
     * })
     * 
     */
    delete<T extends ModifierDeleteArgs>(args: SelectSubset<T, ModifierDeleteArgs<ExtArgs>>): Prisma__ModifierClient<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Modifier.
     * @param {ModifierUpdateArgs} args - Arguments to update one Modifier.
     * @example
     * // Update one Modifier
     * const modifier = await prisma.modifier.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ModifierUpdateArgs>(args: SelectSubset<T, ModifierUpdateArgs<ExtArgs>>): Prisma__ModifierClient<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Modifiers.
     * @param {ModifierDeleteManyArgs} args - Arguments to filter Modifiers to delete.
     * @example
     * // Delete a few Modifiers
     * const { count } = await prisma.modifier.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ModifierDeleteManyArgs>(args?: SelectSubset<T, ModifierDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Modifiers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Modifiers
     * const modifier = await prisma.modifier.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ModifierUpdateManyArgs>(args: SelectSubset<T, ModifierUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Modifier.
     * @param {ModifierUpsertArgs} args - Arguments to update or create a Modifier.
     * @example
     * // Update or create a Modifier
     * const modifier = await prisma.modifier.upsert({
     *   create: {
     *     // ... data to create a Modifier
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Modifier we want to update
     *   }
     * })
     */
    upsert<T extends ModifierUpsertArgs>(args: SelectSubset<T, ModifierUpsertArgs<ExtArgs>>): Prisma__ModifierClient<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Modifiers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierCountArgs} args - Arguments to filter Modifiers to count.
     * @example
     * // Count the number of Modifiers
     * const count = await prisma.modifier.count({
     *   where: {
     *     // ... the filter for the Modifiers we want to count
     *   }
     * })
    **/
    count<T extends ModifierCountArgs>(
      args?: Subset<T, ModifierCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ModifierCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Modifier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ModifierAggregateArgs>(args: Subset<T, ModifierAggregateArgs>): Prisma.PrismaPromise<GetModifierAggregateType<T>>

    /**
     * Group by Modifier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ModifierGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ModifierGroupByArgs['orderBy'] }
        : { orderBy?: ModifierGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ModifierGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModifierGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Modifier model
   */
  readonly fields: ModifierFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Modifier.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ModifierClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    modifierCategory<T extends ModifierCategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ModifierCategoryDefaultArgs<ExtArgs>>): Prisma__ModifierCategoryClient<$Result.GetResult<Prisma.$ModifierCategoryPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    promotionMarkups<T extends Modifier$promotionMarkupsArgs<ExtArgs> = {}>(args?: Subset<T, Modifier$promotionMarkupsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionModifierMarkupPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Modifier model
   */ 
  interface ModifierFieldRefs {
    readonly id: FieldRef<"Modifier", 'String'>
    readonly modifierCategoryId: FieldRef<"Modifier", 'String'>
    readonly companyId: FieldRef<"Modifier", 'String'>
    readonly name: FieldRef<"Modifier", 'Json'>
    readonly description: FieldRef<"Modifier", 'Json'>
    readonly basePrice: FieldRef<"Modifier", 'Decimal'>
    readonly pricing: FieldRef<"Modifier", 'Json'>
    readonly cost: FieldRef<"Modifier", 'Decimal'>
    readonly status: FieldRef<"Modifier", 'Int'>
    readonly displayNumber: FieldRef<"Modifier", 'Int'>
    readonly isDefault: FieldRef<"Modifier", 'Boolean'>
    readonly image: FieldRef<"Modifier", 'String'>
    readonly createdAt: FieldRef<"Modifier", 'DateTime'>
    readonly updatedAt: FieldRef<"Modifier", 'DateTime'>
    readonly deletedAt: FieldRef<"Modifier", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Modifier findUnique
   */
  export type ModifierFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    /**
     * Filter, which Modifier to fetch.
     */
    where: ModifierWhereUniqueInput
  }

  /**
   * Modifier findUniqueOrThrow
   */
  export type ModifierFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    /**
     * Filter, which Modifier to fetch.
     */
    where: ModifierWhereUniqueInput
  }

  /**
   * Modifier findFirst
   */
  export type ModifierFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    /**
     * Filter, which Modifier to fetch.
     */
    where?: ModifierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modifiers to fetch.
     */
    orderBy?: ModifierOrderByWithRelationInput | ModifierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Modifiers.
     */
    cursor?: ModifierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modifiers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modifiers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Modifiers.
     */
    distinct?: ModifierScalarFieldEnum | ModifierScalarFieldEnum[]
  }

  /**
   * Modifier findFirstOrThrow
   */
  export type ModifierFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    /**
     * Filter, which Modifier to fetch.
     */
    where?: ModifierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modifiers to fetch.
     */
    orderBy?: ModifierOrderByWithRelationInput | ModifierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Modifiers.
     */
    cursor?: ModifierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modifiers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modifiers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Modifiers.
     */
    distinct?: ModifierScalarFieldEnum | ModifierScalarFieldEnum[]
  }

  /**
   * Modifier findMany
   */
  export type ModifierFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    /**
     * Filter, which Modifiers to fetch.
     */
    where?: ModifierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modifiers to fetch.
     */
    orderBy?: ModifierOrderByWithRelationInput | ModifierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Modifiers.
     */
    cursor?: ModifierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modifiers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modifiers.
     */
    skip?: number
    distinct?: ModifierScalarFieldEnum | ModifierScalarFieldEnum[]
  }

  /**
   * Modifier create
   */
  export type ModifierCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    /**
     * The data needed to create a Modifier.
     */
    data: XOR<ModifierCreateInput, ModifierUncheckedCreateInput>
  }

  /**
   * Modifier createMany
   */
  export type ModifierCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Modifiers.
     */
    data: ModifierCreateManyInput | ModifierCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Modifier createManyAndReturn
   */
  export type ModifierCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Modifiers.
     */
    data: ModifierCreateManyInput | ModifierCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Modifier update
   */
  export type ModifierUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    /**
     * The data needed to update a Modifier.
     */
    data: XOR<ModifierUpdateInput, ModifierUncheckedUpdateInput>
    /**
     * Choose, which Modifier to update.
     */
    where: ModifierWhereUniqueInput
  }

  /**
   * Modifier updateMany
   */
  export type ModifierUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Modifiers.
     */
    data: XOR<ModifierUpdateManyMutationInput, ModifierUncheckedUpdateManyInput>
    /**
     * Filter which Modifiers to update
     */
    where?: ModifierWhereInput
  }

  /**
   * Modifier upsert
   */
  export type ModifierUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    /**
     * The filter to search for the Modifier to update in case it exists.
     */
    where: ModifierWhereUniqueInput
    /**
     * In case the Modifier found by the `where` argument doesn't exist, create a new Modifier with this data.
     */
    create: XOR<ModifierCreateInput, ModifierUncheckedCreateInput>
    /**
     * In case the Modifier was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ModifierUpdateInput, ModifierUncheckedUpdateInput>
  }

  /**
   * Modifier delete
   */
  export type ModifierDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    /**
     * Filter which Modifier to delete.
     */
    where: ModifierWhereUniqueInput
  }

  /**
   * Modifier deleteMany
   */
  export type ModifierDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Modifiers to delete
     */
    where?: ModifierWhereInput
  }

  /**
   * Modifier.promotionMarkups
   */
  export type Modifier$promotionMarkupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionModifierMarkup
     */
    select?: PromotionModifierMarkupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionModifierMarkupInclude<ExtArgs> | null
    where?: PromotionModifierMarkupWhereInput
    orderBy?: PromotionModifierMarkupOrderByWithRelationInput | PromotionModifierMarkupOrderByWithRelationInput[]
    cursor?: PromotionModifierMarkupWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionModifierMarkupScalarFieldEnum | PromotionModifierMarkupScalarFieldEnum[]
  }

  /**
   * Modifier without action
   */
  export type ModifierDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
  }


  /**
   * Model ProductModifierCategory
   */

  export type AggregateProductModifierCategory = {
    _count: ProductModifierCategoryCountAggregateOutputType | null
    _avg: ProductModifierCategoryAvgAggregateOutputType | null
    _sum: ProductModifierCategorySumAggregateOutputType | null
    _min: ProductModifierCategoryMinAggregateOutputType | null
    _max: ProductModifierCategoryMaxAggregateOutputType | null
  }

  export type ProductModifierCategoryAvgAggregateOutputType = {
    minQuantity: number | null
    maxQuantity: number | null
    priceOverride: Decimal | null
    displayOrder: number | null
  }

  export type ProductModifierCategorySumAggregateOutputType = {
    minQuantity: number | null
    maxQuantity: number | null
    priceOverride: Decimal | null
    displayOrder: number | null
  }

  export type ProductModifierCategoryMinAggregateOutputType = {
    id: string | null
    productId: string | null
    modifierCategoryId: string | null
    minQuantity: number | null
    maxQuantity: number | null
    priceOverride: Decimal | null
    isRequired: boolean | null
    displayOrder: number | null
    createdAt: Date | null
  }

  export type ProductModifierCategoryMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    modifierCategoryId: string | null
    minQuantity: number | null
    maxQuantity: number | null
    priceOverride: Decimal | null
    isRequired: boolean | null
    displayOrder: number | null
    createdAt: Date | null
  }

  export type ProductModifierCategoryCountAggregateOutputType = {
    id: number
    productId: number
    modifierCategoryId: number
    minQuantity: number
    maxQuantity: number
    priceOverride: number
    isRequired: number
    displayOrder: number
    createdAt: number
    _all: number
  }


  export type ProductModifierCategoryAvgAggregateInputType = {
    minQuantity?: true
    maxQuantity?: true
    priceOverride?: true
    displayOrder?: true
  }

  export type ProductModifierCategorySumAggregateInputType = {
    minQuantity?: true
    maxQuantity?: true
    priceOverride?: true
    displayOrder?: true
  }

  export type ProductModifierCategoryMinAggregateInputType = {
    id?: true
    productId?: true
    modifierCategoryId?: true
    minQuantity?: true
    maxQuantity?: true
    priceOverride?: true
    isRequired?: true
    displayOrder?: true
    createdAt?: true
  }

  export type ProductModifierCategoryMaxAggregateInputType = {
    id?: true
    productId?: true
    modifierCategoryId?: true
    minQuantity?: true
    maxQuantity?: true
    priceOverride?: true
    isRequired?: true
    displayOrder?: true
    createdAt?: true
  }

  export type ProductModifierCategoryCountAggregateInputType = {
    id?: true
    productId?: true
    modifierCategoryId?: true
    minQuantity?: true
    maxQuantity?: true
    priceOverride?: true
    isRequired?: true
    displayOrder?: true
    createdAt?: true
    _all?: true
  }

  export type ProductModifierCategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductModifierCategory to aggregate.
     */
    where?: ProductModifierCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductModifierCategories to fetch.
     */
    orderBy?: ProductModifierCategoryOrderByWithRelationInput | ProductModifierCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductModifierCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductModifierCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductModifierCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductModifierCategories
    **/
    _count?: true | ProductModifierCategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductModifierCategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductModifierCategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductModifierCategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductModifierCategoryMaxAggregateInputType
  }

  export type GetProductModifierCategoryAggregateType<T extends ProductModifierCategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateProductModifierCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductModifierCategory[P]>
      : GetScalarType<T[P], AggregateProductModifierCategory[P]>
  }




  export type ProductModifierCategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductModifierCategoryWhereInput
    orderBy?: ProductModifierCategoryOrderByWithAggregationInput | ProductModifierCategoryOrderByWithAggregationInput[]
    by: ProductModifierCategoryScalarFieldEnum[] | ProductModifierCategoryScalarFieldEnum
    having?: ProductModifierCategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductModifierCategoryCountAggregateInputType | true
    _avg?: ProductModifierCategoryAvgAggregateInputType
    _sum?: ProductModifierCategorySumAggregateInputType
    _min?: ProductModifierCategoryMinAggregateInputType
    _max?: ProductModifierCategoryMaxAggregateInputType
  }

  export type ProductModifierCategoryGroupByOutputType = {
    id: string
    productId: string
    modifierCategoryId: string
    minQuantity: number
    maxQuantity: number
    priceOverride: Decimal | null
    isRequired: boolean
    displayOrder: number
    createdAt: Date
    _count: ProductModifierCategoryCountAggregateOutputType | null
    _avg: ProductModifierCategoryAvgAggregateOutputType | null
    _sum: ProductModifierCategorySumAggregateOutputType | null
    _min: ProductModifierCategoryMinAggregateOutputType | null
    _max: ProductModifierCategoryMaxAggregateOutputType | null
  }

  type GetProductModifierCategoryGroupByPayload<T extends ProductModifierCategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductModifierCategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductModifierCategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductModifierCategoryGroupByOutputType[P]>
            : GetScalarType<T[P], ProductModifierCategoryGroupByOutputType[P]>
        }
      >
    >


  export type ProductModifierCategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    modifierCategoryId?: boolean
    minQuantity?: boolean
    maxQuantity?: boolean
    priceOverride?: boolean
    isRequired?: boolean
    displayOrder?: boolean
    createdAt?: boolean
    modifierCategory?: boolean | ModifierCategoryDefaultArgs<ExtArgs>
    product?: boolean | MenuProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productModifierCategory"]>

  export type ProductModifierCategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    modifierCategoryId?: boolean
    minQuantity?: boolean
    maxQuantity?: boolean
    priceOverride?: boolean
    isRequired?: boolean
    displayOrder?: boolean
    createdAt?: boolean
    modifierCategory?: boolean | ModifierCategoryDefaultArgs<ExtArgs>
    product?: boolean | MenuProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productModifierCategory"]>

  export type ProductModifierCategorySelectScalar = {
    id?: boolean
    productId?: boolean
    modifierCategoryId?: boolean
    minQuantity?: boolean
    maxQuantity?: boolean
    priceOverride?: boolean
    isRequired?: boolean
    displayOrder?: boolean
    createdAt?: boolean
  }

  export type ProductModifierCategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modifierCategory?: boolean | ModifierCategoryDefaultArgs<ExtArgs>
    product?: boolean | MenuProductDefaultArgs<ExtArgs>
  }
  export type ProductModifierCategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modifierCategory?: boolean | ModifierCategoryDefaultArgs<ExtArgs>
    product?: boolean | MenuProductDefaultArgs<ExtArgs>
  }

  export type $ProductModifierCategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductModifierCategory"
    objects: {
      modifierCategory: Prisma.$ModifierCategoryPayload<ExtArgs>
      product: Prisma.$MenuProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string
      modifierCategoryId: string
      minQuantity: number
      maxQuantity: number
      priceOverride: Prisma.Decimal | null
      isRequired: boolean
      displayOrder: number
      createdAt: Date
    }, ExtArgs["result"]["productModifierCategory"]>
    composites: {}
  }

  type ProductModifierCategoryGetPayload<S extends boolean | null | undefined | ProductModifierCategoryDefaultArgs> = $Result.GetResult<Prisma.$ProductModifierCategoryPayload, S>

  type ProductModifierCategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProductModifierCategoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProductModifierCategoryCountAggregateInputType | true
    }

  export interface ProductModifierCategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductModifierCategory'], meta: { name: 'ProductModifierCategory' } }
    /**
     * Find zero or one ProductModifierCategory that matches the filter.
     * @param {ProductModifierCategoryFindUniqueArgs} args - Arguments to find a ProductModifierCategory
     * @example
     * // Get one ProductModifierCategory
     * const productModifierCategory = await prisma.productModifierCategory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductModifierCategoryFindUniqueArgs>(args: SelectSubset<T, ProductModifierCategoryFindUniqueArgs<ExtArgs>>): Prisma__ProductModifierCategoryClient<$Result.GetResult<Prisma.$ProductModifierCategoryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ProductModifierCategory that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProductModifierCategoryFindUniqueOrThrowArgs} args - Arguments to find a ProductModifierCategory
     * @example
     * // Get one ProductModifierCategory
     * const productModifierCategory = await prisma.productModifierCategory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductModifierCategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductModifierCategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductModifierCategoryClient<$Result.GetResult<Prisma.$ProductModifierCategoryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ProductModifierCategory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductModifierCategoryFindFirstArgs} args - Arguments to find a ProductModifierCategory
     * @example
     * // Get one ProductModifierCategory
     * const productModifierCategory = await prisma.productModifierCategory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductModifierCategoryFindFirstArgs>(args?: SelectSubset<T, ProductModifierCategoryFindFirstArgs<ExtArgs>>): Prisma__ProductModifierCategoryClient<$Result.GetResult<Prisma.$ProductModifierCategoryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ProductModifierCategory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductModifierCategoryFindFirstOrThrowArgs} args - Arguments to find a ProductModifierCategory
     * @example
     * // Get one ProductModifierCategory
     * const productModifierCategory = await prisma.productModifierCategory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductModifierCategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductModifierCategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductModifierCategoryClient<$Result.GetResult<Prisma.$ProductModifierCategoryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ProductModifierCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductModifierCategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductModifierCategories
     * const productModifierCategories = await prisma.productModifierCategory.findMany()
     * 
     * // Get first 10 ProductModifierCategories
     * const productModifierCategories = await prisma.productModifierCategory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productModifierCategoryWithIdOnly = await prisma.productModifierCategory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductModifierCategoryFindManyArgs>(args?: SelectSubset<T, ProductModifierCategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductModifierCategoryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ProductModifierCategory.
     * @param {ProductModifierCategoryCreateArgs} args - Arguments to create a ProductModifierCategory.
     * @example
     * // Create one ProductModifierCategory
     * const ProductModifierCategory = await prisma.productModifierCategory.create({
     *   data: {
     *     // ... data to create a ProductModifierCategory
     *   }
     * })
     * 
     */
    create<T extends ProductModifierCategoryCreateArgs>(args: SelectSubset<T, ProductModifierCategoryCreateArgs<ExtArgs>>): Prisma__ProductModifierCategoryClient<$Result.GetResult<Prisma.$ProductModifierCategoryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ProductModifierCategories.
     * @param {ProductModifierCategoryCreateManyArgs} args - Arguments to create many ProductModifierCategories.
     * @example
     * // Create many ProductModifierCategories
     * const productModifierCategory = await prisma.productModifierCategory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductModifierCategoryCreateManyArgs>(args?: SelectSubset<T, ProductModifierCategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductModifierCategories and returns the data saved in the database.
     * @param {ProductModifierCategoryCreateManyAndReturnArgs} args - Arguments to create many ProductModifierCategories.
     * @example
     * // Create many ProductModifierCategories
     * const productModifierCategory = await prisma.productModifierCategory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductModifierCategories and only return the `id`
     * const productModifierCategoryWithIdOnly = await prisma.productModifierCategory.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductModifierCategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductModifierCategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductModifierCategoryPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ProductModifierCategory.
     * @param {ProductModifierCategoryDeleteArgs} args - Arguments to delete one ProductModifierCategory.
     * @example
     * // Delete one ProductModifierCategory
     * const ProductModifierCategory = await prisma.productModifierCategory.delete({
     *   where: {
     *     // ... filter to delete one ProductModifierCategory
     *   }
     * })
     * 
     */
    delete<T extends ProductModifierCategoryDeleteArgs>(args: SelectSubset<T, ProductModifierCategoryDeleteArgs<ExtArgs>>): Prisma__ProductModifierCategoryClient<$Result.GetResult<Prisma.$ProductModifierCategoryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ProductModifierCategory.
     * @param {ProductModifierCategoryUpdateArgs} args - Arguments to update one ProductModifierCategory.
     * @example
     * // Update one ProductModifierCategory
     * const productModifierCategory = await prisma.productModifierCategory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductModifierCategoryUpdateArgs>(args: SelectSubset<T, ProductModifierCategoryUpdateArgs<ExtArgs>>): Prisma__ProductModifierCategoryClient<$Result.GetResult<Prisma.$ProductModifierCategoryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ProductModifierCategories.
     * @param {ProductModifierCategoryDeleteManyArgs} args - Arguments to filter ProductModifierCategories to delete.
     * @example
     * // Delete a few ProductModifierCategories
     * const { count } = await prisma.productModifierCategory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductModifierCategoryDeleteManyArgs>(args?: SelectSubset<T, ProductModifierCategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductModifierCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductModifierCategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductModifierCategories
     * const productModifierCategory = await prisma.productModifierCategory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductModifierCategoryUpdateManyArgs>(args: SelectSubset<T, ProductModifierCategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProductModifierCategory.
     * @param {ProductModifierCategoryUpsertArgs} args - Arguments to update or create a ProductModifierCategory.
     * @example
     * // Update or create a ProductModifierCategory
     * const productModifierCategory = await prisma.productModifierCategory.upsert({
     *   create: {
     *     // ... data to create a ProductModifierCategory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductModifierCategory we want to update
     *   }
     * })
     */
    upsert<T extends ProductModifierCategoryUpsertArgs>(args: SelectSubset<T, ProductModifierCategoryUpsertArgs<ExtArgs>>): Prisma__ProductModifierCategoryClient<$Result.GetResult<Prisma.$ProductModifierCategoryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ProductModifierCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductModifierCategoryCountArgs} args - Arguments to filter ProductModifierCategories to count.
     * @example
     * // Count the number of ProductModifierCategories
     * const count = await prisma.productModifierCategory.count({
     *   where: {
     *     // ... the filter for the ProductModifierCategories we want to count
     *   }
     * })
    **/
    count<T extends ProductModifierCategoryCountArgs>(
      args?: Subset<T, ProductModifierCategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductModifierCategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductModifierCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductModifierCategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductModifierCategoryAggregateArgs>(args: Subset<T, ProductModifierCategoryAggregateArgs>): Prisma.PrismaPromise<GetProductModifierCategoryAggregateType<T>>

    /**
     * Group by ProductModifierCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductModifierCategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductModifierCategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductModifierCategoryGroupByArgs['orderBy'] }
        : { orderBy?: ProductModifierCategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductModifierCategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductModifierCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductModifierCategory model
   */
  readonly fields: ProductModifierCategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductModifierCategory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductModifierCategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    modifierCategory<T extends ModifierCategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ModifierCategoryDefaultArgs<ExtArgs>>): Prisma__ModifierCategoryClient<$Result.GetResult<Prisma.$ModifierCategoryPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    product<T extends MenuProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MenuProductDefaultArgs<ExtArgs>>): Prisma__MenuProductClient<$Result.GetResult<Prisma.$MenuProductPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductModifierCategory model
   */ 
  interface ProductModifierCategoryFieldRefs {
    readonly id: FieldRef<"ProductModifierCategory", 'String'>
    readonly productId: FieldRef<"ProductModifierCategory", 'String'>
    readonly modifierCategoryId: FieldRef<"ProductModifierCategory", 'String'>
    readonly minQuantity: FieldRef<"ProductModifierCategory", 'Int'>
    readonly maxQuantity: FieldRef<"ProductModifierCategory", 'Int'>
    readonly priceOverride: FieldRef<"ProductModifierCategory", 'Decimal'>
    readonly isRequired: FieldRef<"ProductModifierCategory", 'Boolean'>
    readonly displayOrder: FieldRef<"ProductModifierCategory", 'Int'>
    readonly createdAt: FieldRef<"ProductModifierCategory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductModifierCategory findUnique
   */
  export type ProductModifierCategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductModifierCategory
     */
    select?: ProductModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductModifierCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductModifierCategory to fetch.
     */
    where: ProductModifierCategoryWhereUniqueInput
  }

  /**
   * ProductModifierCategory findUniqueOrThrow
   */
  export type ProductModifierCategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductModifierCategory
     */
    select?: ProductModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductModifierCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductModifierCategory to fetch.
     */
    where: ProductModifierCategoryWhereUniqueInput
  }

  /**
   * ProductModifierCategory findFirst
   */
  export type ProductModifierCategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductModifierCategory
     */
    select?: ProductModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductModifierCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductModifierCategory to fetch.
     */
    where?: ProductModifierCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductModifierCategories to fetch.
     */
    orderBy?: ProductModifierCategoryOrderByWithRelationInput | ProductModifierCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductModifierCategories.
     */
    cursor?: ProductModifierCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductModifierCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductModifierCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductModifierCategories.
     */
    distinct?: ProductModifierCategoryScalarFieldEnum | ProductModifierCategoryScalarFieldEnum[]
  }

  /**
   * ProductModifierCategory findFirstOrThrow
   */
  export type ProductModifierCategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductModifierCategory
     */
    select?: ProductModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductModifierCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductModifierCategory to fetch.
     */
    where?: ProductModifierCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductModifierCategories to fetch.
     */
    orderBy?: ProductModifierCategoryOrderByWithRelationInput | ProductModifierCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductModifierCategories.
     */
    cursor?: ProductModifierCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductModifierCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductModifierCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductModifierCategories.
     */
    distinct?: ProductModifierCategoryScalarFieldEnum | ProductModifierCategoryScalarFieldEnum[]
  }

  /**
   * ProductModifierCategory findMany
   */
  export type ProductModifierCategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductModifierCategory
     */
    select?: ProductModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductModifierCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductModifierCategories to fetch.
     */
    where?: ProductModifierCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductModifierCategories to fetch.
     */
    orderBy?: ProductModifierCategoryOrderByWithRelationInput | ProductModifierCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductModifierCategories.
     */
    cursor?: ProductModifierCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductModifierCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductModifierCategories.
     */
    skip?: number
    distinct?: ProductModifierCategoryScalarFieldEnum | ProductModifierCategoryScalarFieldEnum[]
  }

  /**
   * ProductModifierCategory create
   */
  export type ProductModifierCategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductModifierCategory
     */
    select?: ProductModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductModifierCategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductModifierCategory.
     */
    data: XOR<ProductModifierCategoryCreateInput, ProductModifierCategoryUncheckedCreateInput>
  }

  /**
   * ProductModifierCategory createMany
   */
  export type ProductModifierCategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductModifierCategories.
     */
    data: ProductModifierCategoryCreateManyInput | ProductModifierCategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductModifierCategory createManyAndReturn
   */
  export type ProductModifierCategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductModifierCategory
     */
    select?: ProductModifierCategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ProductModifierCategories.
     */
    data: ProductModifierCategoryCreateManyInput | ProductModifierCategoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductModifierCategoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductModifierCategory update
   */
  export type ProductModifierCategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductModifierCategory
     */
    select?: ProductModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductModifierCategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductModifierCategory.
     */
    data: XOR<ProductModifierCategoryUpdateInput, ProductModifierCategoryUncheckedUpdateInput>
    /**
     * Choose, which ProductModifierCategory to update.
     */
    where: ProductModifierCategoryWhereUniqueInput
  }

  /**
   * ProductModifierCategory updateMany
   */
  export type ProductModifierCategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductModifierCategories.
     */
    data: XOR<ProductModifierCategoryUpdateManyMutationInput, ProductModifierCategoryUncheckedUpdateManyInput>
    /**
     * Filter which ProductModifierCategories to update
     */
    where?: ProductModifierCategoryWhereInput
  }

  /**
   * ProductModifierCategory upsert
   */
  export type ProductModifierCategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductModifierCategory
     */
    select?: ProductModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductModifierCategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductModifierCategory to update in case it exists.
     */
    where: ProductModifierCategoryWhereUniqueInput
    /**
     * In case the ProductModifierCategory found by the `where` argument doesn't exist, create a new ProductModifierCategory with this data.
     */
    create: XOR<ProductModifierCategoryCreateInput, ProductModifierCategoryUncheckedCreateInput>
    /**
     * In case the ProductModifierCategory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductModifierCategoryUpdateInput, ProductModifierCategoryUncheckedUpdateInput>
  }

  /**
   * ProductModifierCategory delete
   */
  export type ProductModifierCategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductModifierCategory
     */
    select?: ProductModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductModifierCategoryInclude<ExtArgs> | null
    /**
     * Filter which ProductModifierCategory to delete.
     */
    where: ProductModifierCategoryWhereUniqueInput
  }

  /**
   * ProductModifierCategory deleteMany
   */
  export type ProductModifierCategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductModifierCategories to delete
     */
    where?: ProductModifierCategoryWhereInput
  }

  /**
   * ProductModifierCategory without action
   */
  export type ProductModifierCategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductModifierCategory
     */
    select?: ProductModifierCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductModifierCategoryInclude<ExtArgs> | null
  }


  /**
   * Model Promotion
   */

  export type AggregatePromotion = {
    _count: PromotionCountAggregateOutputType | null
    _avg: PromotionAvgAggregateOutputType | null
    _sum: PromotionSumAggregateOutputType | null
    _min: PromotionMinAggregateOutputType | null
    _max: PromotionMaxAggregateOutputType | null
  }

  export type PromotionAvgAggregateOutputType = {
    minProfitMargin: Decimal | null
  }

  export type PromotionSumAggregateOutputType = {
    minProfitMargin: Decimal | null
  }

  export type PromotionMinAggregateOutputType = {
    id: string | null
    companyId: string | null
    name: string | null
    description: string | null
    promotionType: string | null
    startDate: Date | null
    endDate: Date | null
    isActive: boolean | null
    autoRevert: boolean | null
    minProfitMargin: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type PromotionMaxAggregateOutputType = {
    id: string | null
    companyId: string | null
    name: string | null
    description: string | null
    promotionType: string | null
    startDate: Date | null
    endDate: Date | null
    isActive: boolean | null
    autoRevert: boolean | null
    minProfitMargin: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type PromotionCountAggregateOutputType = {
    id: number
    companyId: number
    name: number
    description: number
    promotionType: number
    startDate: number
    endDate: number
    isActive: number
    autoRevert: number
    platforms: number
    minProfitMargin: number
    originalPricingSnapshot: number
    createdAt: number
    updatedAt: number
    createdBy: number
    _all: number
  }


  export type PromotionAvgAggregateInputType = {
    minProfitMargin?: true
  }

  export type PromotionSumAggregateInputType = {
    minProfitMargin?: true
  }

  export type PromotionMinAggregateInputType = {
    id?: true
    companyId?: true
    name?: true
    description?: true
    promotionType?: true
    startDate?: true
    endDate?: true
    isActive?: true
    autoRevert?: true
    minProfitMargin?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type PromotionMaxAggregateInputType = {
    id?: true
    companyId?: true
    name?: true
    description?: true
    promotionType?: true
    startDate?: true
    endDate?: true
    isActive?: true
    autoRevert?: true
    minProfitMargin?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type PromotionCountAggregateInputType = {
    id?: true
    companyId?: true
    name?: true
    description?: true
    promotionType?: true
    startDate?: true
    endDate?: true
    isActive?: true
    autoRevert?: true
    platforms?: true
    minProfitMargin?: true
    originalPricingSnapshot?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    _all?: true
  }

  export type PromotionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Promotion to aggregate.
     */
    where?: PromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promotions to fetch.
     */
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Promotions
    **/
    _count?: true | PromotionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PromotionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PromotionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PromotionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PromotionMaxAggregateInputType
  }

  export type GetPromotionAggregateType<T extends PromotionAggregateArgs> = {
        [P in keyof T & keyof AggregatePromotion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePromotion[P]>
      : GetScalarType<T[P], AggregatePromotion[P]>
  }




  export type PromotionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionWhereInput
    orderBy?: PromotionOrderByWithAggregationInput | PromotionOrderByWithAggregationInput[]
    by: PromotionScalarFieldEnum[] | PromotionScalarFieldEnum
    having?: PromotionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PromotionCountAggregateInputType | true
    _avg?: PromotionAvgAggregateInputType
    _sum?: PromotionSumAggregateInputType
    _min?: PromotionMinAggregateInputType
    _max?: PromotionMaxAggregateInputType
  }

  export type PromotionGroupByOutputType = {
    id: string
    companyId: string
    name: string
    description: string | null
    promotionType: string
    startDate: Date
    endDate: Date
    isActive: boolean
    autoRevert: boolean
    platforms: JsonValue
    minProfitMargin: Decimal
    originalPricingSnapshot: JsonValue | null
    createdAt: Date
    updatedAt: Date
    createdBy: string | null
    _count: PromotionCountAggregateOutputType | null
    _avg: PromotionAvgAggregateOutputType | null
    _sum: PromotionSumAggregateOutputType | null
    _min: PromotionMinAggregateOutputType | null
    _max: PromotionMaxAggregateOutputType | null
  }

  type GetPromotionGroupByPayload<T extends PromotionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PromotionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PromotionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PromotionGroupByOutputType[P]>
            : GetScalarType<T[P], PromotionGroupByOutputType[P]>
        }
      >
    >


  export type PromotionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    name?: boolean
    description?: boolean
    promotionType?: boolean
    startDate?: boolean
    endDate?: boolean
    isActive?: boolean
    autoRevert?: boolean
    platforms?: boolean
    minProfitMargin?: boolean
    originalPricingSnapshot?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    priceHistories?: boolean | Promotion$priceHistoriesArgs<ExtArgs>
    modifierMarkups?: boolean | Promotion$modifierMarkupsArgs<ExtArgs>
    promotionProducts?: boolean | Promotion$promotionProductsArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    _count?: boolean | PromotionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotion"]>

  export type PromotionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    companyId?: boolean
    name?: boolean
    description?: boolean
    promotionType?: boolean
    startDate?: boolean
    endDate?: boolean
    isActive?: boolean
    autoRevert?: boolean
    platforms?: boolean
    minProfitMargin?: boolean
    originalPricingSnapshot?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotion"]>

  export type PromotionSelectScalar = {
    id?: boolean
    companyId?: boolean
    name?: boolean
    description?: boolean
    promotionType?: boolean
    startDate?: boolean
    endDate?: boolean
    isActive?: boolean
    autoRevert?: boolean
    platforms?: boolean
    minProfitMargin?: boolean
    originalPricingSnapshot?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }

  export type PromotionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    priceHistories?: boolean | Promotion$priceHistoriesArgs<ExtArgs>
    modifierMarkups?: boolean | Promotion$modifierMarkupsArgs<ExtArgs>
    promotionProducts?: boolean | Promotion$promotionProductsArgs<ExtArgs>
    company?: boolean | CompanyDefaultArgs<ExtArgs>
    _count?: boolean | PromotionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PromotionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $PromotionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Promotion"
    objects: {
      priceHistories: Prisma.$PriceHistoryPayload<ExtArgs>[]
      modifierMarkups: Prisma.$PromotionModifierMarkupPayload<ExtArgs>[]
      promotionProducts: Prisma.$PromotionProductPayload<ExtArgs>[]
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      companyId: string
      name: string
      description: string | null
      promotionType: string
      startDate: Date
      endDate: Date
      isActive: boolean
      autoRevert: boolean
      platforms: Prisma.JsonValue
      minProfitMargin: Prisma.Decimal
      originalPricingSnapshot: Prisma.JsonValue | null
      createdAt: Date
      updatedAt: Date
      createdBy: string | null
    }, ExtArgs["result"]["promotion"]>
    composites: {}
  }

  type PromotionGetPayload<S extends boolean | null | undefined | PromotionDefaultArgs> = $Result.GetResult<Prisma.$PromotionPayload, S>

  type PromotionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PromotionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PromotionCountAggregateInputType | true
    }

  export interface PromotionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Promotion'], meta: { name: 'Promotion' } }
    /**
     * Find zero or one Promotion that matches the filter.
     * @param {PromotionFindUniqueArgs} args - Arguments to find a Promotion
     * @example
     * // Get one Promotion
     * const promotion = await prisma.promotion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PromotionFindUniqueArgs>(args: SelectSubset<T, PromotionFindUniqueArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Promotion that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PromotionFindUniqueOrThrowArgs} args - Arguments to find a Promotion
     * @example
     * // Get one Promotion
     * const promotion = await prisma.promotion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PromotionFindUniqueOrThrowArgs>(args: SelectSubset<T, PromotionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Promotion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionFindFirstArgs} args - Arguments to find a Promotion
     * @example
     * // Get one Promotion
     * const promotion = await prisma.promotion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PromotionFindFirstArgs>(args?: SelectSubset<T, PromotionFindFirstArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Promotion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionFindFirstOrThrowArgs} args - Arguments to find a Promotion
     * @example
     * // Get one Promotion
     * const promotion = await prisma.promotion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PromotionFindFirstOrThrowArgs>(args?: SelectSubset<T, PromotionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Promotions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Promotions
     * const promotions = await prisma.promotion.findMany()
     * 
     * // Get first 10 Promotions
     * const promotions = await prisma.promotion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const promotionWithIdOnly = await prisma.promotion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PromotionFindManyArgs>(args?: SelectSubset<T, PromotionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Promotion.
     * @param {PromotionCreateArgs} args - Arguments to create a Promotion.
     * @example
     * // Create one Promotion
     * const Promotion = await prisma.promotion.create({
     *   data: {
     *     // ... data to create a Promotion
     *   }
     * })
     * 
     */
    create<T extends PromotionCreateArgs>(args: SelectSubset<T, PromotionCreateArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Promotions.
     * @param {PromotionCreateManyArgs} args - Arguments to create many Promotions.
     * @example
     * // Create many Promotions
     * const promotion = await prisma.promotion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PromotionCreateManyArgs>(args?: SelectSubset<T, PromotionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Promotions and returns the data saved in the database.
     * @param {PromotionCreateManyAndReturnArgs} args - Arguments to create many Promotions.
     * @example
     * // Create many Promotions
     * const promotion = await prisma.promotion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Promotions and only return the `id`
     * const promotionWithIdOnly = await prisma.promotion.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PromotionCreateManyAndReturnArgs>(args?: SelectSubset<T, PromotionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Promotion.
     * @param {PromotionDeleteArgs} args - Arguments to delete one Promotion.
     * @example
     * // Delete one Promotion
     * const Promotion = await prisma.promotion.delete({
     *   where: {
     *     // ... filter to delete one Promotion
     *   }
     * })
     * 
     */
    delete<T extends PromotionDeleteArgs>(args: SelectSubset<T, PromotionDeleteArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Promotion.
     * @param {PromotionUpdateArgs} args - Arguments to update one Promotion.
     * @example
     * // Update one Promotion
     * const promotion = await prisma.promotion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PromotionUpdateArgs>(args: SelectSubset<T, PromotionUpdateArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Promotions.
     * @param {PromotionDeleteManyArgs} args - Arguments to filter Promotions to delete.
     * @example
     * // Delete a few Promotions
     * const { count } = await prisma.promotion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PromotionDeleteManyArgs>(args?: SelectSubset<T, PromotionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Promotions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Promotions
     * const promotion = await prisma.promotion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PromotionUpdateManyArgs>(args: SelectSubset<T, PromotionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Promotion.
     * @param {PromotionUpsertArgs} args - Arguments to update or create a Promotion.
     * @example
     * // Update or create a Promotion
     * const promotion = await prisma.promotion.upsert({
     *   create: {
     *     // ... data to create a Promotion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Promotion we want to update
     *   }
     * })
     */
    upsert<T extends PromotionUpsertArgs>(args: SelectSubset<T, PromotionUpsertArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Promotions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionCountArgs} args - Arguments to filter Promotions to count.
     * @example
     * // Count the number of Promotions
     * const count = await prisma.promotion.count({
     *   where: {
     *     // ... the filter for the Promotions we want to count
     *   }
     * })
    **/
    count<T extends PromotionCountArgs>(
      args?: Subset<T, PromotionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PromotionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Promotion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PromotionAggregateArgs>(args: Subset<T, PromotionAggregateArgs>): Prisma.PrismaPromise<GetPromotionAggregateType<T>>

    /**
     * Group by Promotion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PromotionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PromotionGroupByArgs['orderBy'] }
        : { orderBy?: PromotionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PromotionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPromotionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Promotion model
   */
  readonly fields: PromotionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Promotion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PromotionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    priceHistories<T extends Promotion$priceHistoriesArgs<ExtArgs> = {}>(args?: Subset<T, Promotion$priceHistoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "findMany"> | Null>
    modifierMarkups<T extends Promotion$modifierMarkupsArgs<ExtArgs> = {}>(args?: Subset<T, Promotion$modifierMarkupsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionModifierMarkupPayload<ExtArgs>, T, "findMany"> | Null>
    promotionProducts<T extends Promotion$promotionProductsArgs<ExtArgs> = {}>(args?: Subset<T, Promotion$promotionProductsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionProductPayload<ExtArgs>, T, "findMany"> | Null>
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Promotion model
   */ 
  interface PromotionFieldRefs {
    readonly id: FieldRef<"Promotion", 'String'>
    readonly companyId: FieldRef<"Promotion", 'String'>
    readonly name: FieldRef<"Promotion", 'String'>
    readonly description: FieldRef<"Promotion", 'String'>
    readonly promotionType: FieldRef<"Promotion", 'String'>
    readonly startDate: FieldRef<"Promotion", 'DateTime'>
    readonly endDate: FieldRef<"Promotion", 'DateTime'>
    readonly isActive: FieldRef<"Promotion", 'Boolean'>
    readonly autoRevert: FieldRef<"Promotion", 'Boolean'>
    readonly platforms: FieldRef<"Promotion", 'Json'>
    readonly minProfitMargin: FieldRef<"Promotion", 'Decimal'>
    readonly originalPricingSnapshot: FieldRef<"Promotion", 'Json'>
    readonly createdAt: FieldRef<"Promotion", 'DateTime'>
    readonly updatedAt: FieldRef<"Promotion", 'DateTime'>
    readonly createdBy: FieldRef<"Promotion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Promotion findUnique
   */
  export type PromotionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotion to fetch.
     */
    where: PromotionWhereUniqueInput
  }

  /**
   * Promotion findUniqueOrThrow
   */
  export type PromotionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotion to fetch.
     */
    where: PromotionWhereUniqueInput
  }

  /**
   * Promotion findFirst
   */
  export type PromotionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotion to fetch.
     */
    where?: PromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promotions to fetch.
     */
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Promotions.
     */
    cursor?: PromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Promotions.
     */
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Promotion findFirstOrThrow
   */
  export type PromotionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotion to fetch.
     */
    where?: PromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promotions to fetch.
     */
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Promotions.
     */
    cursor?: PromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Promotions.
     */
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Promotion findMany
   */
  export type PromotionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotions to fetch.
     */
    where?: PromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promotions to fetch.
     */
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Promotions.
     */
    cursor?: PromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promotions.
     */
    skip?: number
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Promotion create
   */
  export type PromotionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * The data needed to create a Promotion.
     */
    data: XOR<PromotionCreateInput, PromotionUncheckedCreateInput>
  }

  /**
   * Promotion createMany
   */
  export type PromotionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Promotions.
     */
    data: PromotionCreateManyInput | PromotionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Promotion createManyAndReturn
   */
  export type PromotionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Promotions.
     */
    data: PromotionCreateManyInput | PromotionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Promotion update
   */
  export type PromotionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * The data needed to update a Promotion.
     */
    data: XOR<PromotionUpdateInput, PromotionUncheckedUpdateInput>
    /**
     * Choose, which Promotion to update.
     */
    where: PromotionWhereUniqueInput
  }

  /**
   * Promotion updateMany
   */
  export type PromotionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Promotions.
     */
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyInput>
    /**
     * Filter which Promotions to update
     */
    where?: PromotionWhereInput
  }

  /**
   * Promotion upsert
   */
  export type PromotionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * The filter to search for the Promotion to update in case it exists.
     */
    where: PromotionWhereUniqueInput
    /**
     * In case the Promotion found by the `where` argument doesn't exist, create a new Promotion with this data.
     */
    create: XOR<PromotionCreateInput, PromotionUncheckedCreateInput>
    /**
     * In case the Promotion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PromotionUpdateInput, PromotionUncheckedUpdateInput>
  }

  /**
   * Promotion delete
   */
  export type PromotionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter which Promotion to delete.
     */
    where: PromotionWhereUniqueInput
  }

  /**
   * Promotion deleteMany
   */
  export type PromotionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Promotions to delete
     */
    where?: PromotionWhereInput
  }

  /**
   * Promotion.priceHistories
   */
  export type Promotion$priceHistoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceHistoryInclude<ExtArgs> | null
    where?: PriceHistoryWhereInput
    orderBy?: PriceHistoryOrderByWithRelationInput | PriceHistoryOrderByWithRelationInput[]
    cursor?: PriceHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PriceHistoryScalarFieldEnum | PriceHistoryScalarFieldEnum[]
  }

  /**
   * Promotion.modifierMarkups
   */
  export type Promotion$modifierMarkupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionModifierMarkup
     */
    select?: PromotionModifierMarkupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionModifierMarkupInclude<ExtArgs> | null
    where?: PromotionModifierMarkupWhereInput
    orderBy?: PromotionModifierMarkupOrderByWithRelationInput | PromotionModifierMarkupOrderByWithRelationInput[]
    cursor?: PromotionModifierMarkupWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionModifierMarkupScalarFieldEnum | PromotionModifierMarkupScalarFieldEnum[]
  }

  /**
   * Promotion.promotionProducts
   */
  export type Promotion$promotionProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionProduct
     */
    select?: PromotionProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionProductInclude<ExtArgs> | null
    where?: PromotionProductWhereInput
    orderBy?: PromotionProductOrderByWithRelationInput | PromotionProductOrderByWithRelationInput[]
    cursor?: PromotionProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionProductScalarFieldEnum | PromotionProductScalarFieldEnum[]
  }

  /**
   * Promotion without action
   */
  export type PromotionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
  }


  /**
   * Model PromotionProduct
   */

  export type AggregatePromotionProduct = {
    _count: PromotionProductCountAggregateOutputType | null
    _avg: PromotionProductAvgAggregateOutputType | null
    _sum: PromotionProductSumAggregateOutputType | null
    _min: PromotionProductMinAggregateOutputType | null
    _max: PromotionProductMaxAggregateOutputType | null
  }

  export type PromotionProductAvgAggregateOutputType = {
    baseDiscountValue: Decimal | null
  }

  export type PromotionProductSumAggregateOutputType = {
    baseDiscountValue: Decimal | null
  }

  export type PromotionProductMinAggregateOutputType = {
    id: string | null
    promotionId: string | null
    productId: string | null
    baseDiscountType: string | null
    baseDiscountValue: Decimal | null
    createdAt: Date | null
  }

  export type PromotionProductMaxAggregateOutputType = {
    id: string | null
    promotionId: string | null
    productId: string | null
    baseDiscountType: string | null
    baseDiscountValue: Decimal | null
    createdAt: Date | null
  }

  export type PromotionProductCountAggregateOutputType = {
    id: number
    promotionId: number
    productId: number
    baseDiscountType: number
    baseDiscountValue: number
    createdAt: number
    _all: number
  }


  export type PromotionProductAvgAggregateInputType = {
    baseDiscountValue?: true
  }

  export type PromotionProductSumAggregateInputType = {
    baseDiscountValue?: true
  }

  export type PromotionProductMinAggregateInputType = {
    id?: true
    promotionId?: true
    productId?: true
    baseDiscountType?: true
    baseDiscountValue?: true
    createdAt?: true
  }

  export type PromotionProductMaxAggregateInputType = {
    id?: true
    promotionId?: true
    productId?: true
    baseDiscountType?: true
    baseDiscountValue?: true
    createdAt?: true
  }

  export type PromotionProductCountAggregateInputType = {
    id?: true
    promotionId?: true
    productId?: true
    baseDiscountType?: true
    baseDiscountValue?: true
    createdAt?: true
    _all?: true
  }

  export type PromotionProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PromotionProduct to aggregate.
     */
    where?: PromotionProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionProducts to fetch.
     */
    orderBy?: PromotionProductOrderByWithRelationInput | PromotionProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PromotionProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionProducts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionProducts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PromotionProducts
    **/
    _count?: true | PromotionProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PromotionProductAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PromotionProductSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PromotionProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PromotionProductMaxAggregateInputType
  }

  export type GetPromotionProductAggregateType<T extends PromotionProductAggregateArgs> = {
        [P in keyof T & keyof AggregatePromotionProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePromotionProduct[P]>
      : GetScalarType<T[P], AggregatePromotionProduct[P]>
  }




  export type PromotionProductGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionProductWhereInput
    orderBy?: PromotionProductOrderByWithAggregationInput | PromotionProductOrderByWithAggregationInput[]
    by: PromotionProductScalarFieldEnum[] | PromotionProductScalarFieldEnum
    having?: PromotionProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PromotionProductCountAggregateInputType | true
    _avg?: PromotionProductAvgAggregateInputType
    _sum?: PromotionProductSumAggregateInputType
    _min?: PromotionProductMinAggregateInputType
    _max?: PromotionProductMaxAggregateInputType
  }

  export type PromotionProductGroupByOutputType = {
    id: string
    promotionId: string
    productId: string
    baseDiscountType: string
    baseDiscountValue: Decimal
    createdAt: Date
    _count: PromotionProductCountAggregateOutputType | null
    _avg: PromotionProductAvgAggregateOutputType | null
    _sum: PromotionProductSumAggregateOutputType | null
    _min: PromotionProductMinAggregateOutputType | null
    _max: PromotionProductMaxAggregateOutputType | null
  }

  type GetPromotionProductGroupByPayload<T extends PromotionProductGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PromotionProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PromotionProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PromotionProductGroupByOutputType[P]>
            : GetScalarType<T[P], PromotionProductGroupByOutputType[P]>
        }
      >
    >


  export type PromotionProductSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    promotionId?: boolean
    productId?: boolean
    baseDiscountType?: boolean
    baseDiscountValue?: boolean
    createdAt?: boolean
    product?: boolean | MenuProductDefaultArgs<ExtArgs>
    promotion?: boolean | PromotionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotionProduct"]>

  export type PromotionProductSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    promotionId?: boolean
    productId?: boolean
    baseDiscountType?: boolean
    baseDiscountValue?: boolean
    createdAt?: boolean
    product?: boolean | MenuProductDefaultArgs<ExtArgs>
    promotion?: boolean | PromotionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotionProduct"]>

  export type PromotionProductSelectScalar = {
    id?: boolean
    promotionId?: boolean
    productId?: boolean
    baseDiscountType?: boolean
    baseDiscountValue?: boolean
    createdAt?: boolean
  }

  export type PromotionProductInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | MenuProductDefaultArgs<ExtArgs>
    promotion?: boolean | PromotionDefaultArgs<ExtArgs>
  }
  export type PromotionProductIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | MenuProductDefaultArgs<ExtArgs>
    promotion?: boolean | PromotionDefaultArgs<ExtArgs>
  }

  export type $PromotionProductPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PromotionProduct"
    objects: {
      product: Prisma.$MenuProductPayload<ExtArgs>
      promotion: Prisma.$PromotionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      promotionId: string
      productId: string
      baseDiscountType: string
      baseDiscountValue: Prisma.Decimal
      createdAt: Date
    }, ExtArgs["result"]["promotionProduct"]>
    composites: {}
  }

  type PromotionProductGetPayload<S extends boolean | null | undefined | PromotionProductDefaultArgs> = $Result.GetResult<Prisma.$PromotionProductPayload, S>

  type PromotionProductCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PromotionProductFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PromotionProductCountAggregateInputType | true
    }

  export interface PromotionProductDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PromotionProduct'], meta: { name: 'PromotionProduct' } }
    /**
     * Find zero or one PromotionProduct that matches the filter.
     * @param {PromotionProductFindUniqueArgs} args - Arguments to find a PromotionProduct
     * @example
     * // Get one PromotionProduct
     * const promotionProduct = await prisma.promotionProduct.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PromotionProductFindUniqueArgs>(args: SelectSubset<T, PromotionProductFindUniqueArgs<ExtArgs>>): Prisma__PromotionProductClient<$Result.GetResult<Prisma.$PromotionProductPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PromotionProduct that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PromotionProductFindUniqueOrThrowArgs} args - Arguments to find a PromotionProduct
     * @example
     * // Get one PromotionProduct
     * const promotionProduct = await prisma.promotionProduct.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PromotionProductFindUniqueOrThrowArgs>(args: SelectSubset<T, PromotionProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PromotionProductClient<$Result.GetResult<Prisma.$PromotionProductPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PromotionProduct that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionProductFindFirstArgs} args - Arguments to find a PromotionProduct
     * @example
     * // Get one PromotionProduct
     * const promotionProduct = await prisma.promotionProduct.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PromotionProductFindFirstArgs>(args?: SelectSubset<T, PromotionProductFindFirstArgs<ExtArgs>>): Prisma__PromotionProductClient<$Result.GetResult<Prisma.$PromotionProductPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PromotionProduct that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionProductFindFirstOrThrowArgs} args - Arguments to find a PromotionProduct
     * @example
     * // Get one PromotionProduct
     * const promotionProduct = await prisma.promotionProduct.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PromotionProductFindFirstOrThrowArgs>(args?: SelectSubset<T, PromotionProductFindFirstOrThrowArgs<ExtArgs>>): Prisma__PromotionProductClient<$Result.GetResult<Prisma.$PromotionProductPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PromotionProducts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionProductFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PromotionProducts
     * const promotionProducts = await prisma.promotionProduct.findMany()
     * 
     * // Get first 10 PromotionProducts
     * const promotionProducts = await prisma.promotionProduct.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const promotionProductWithIdOnly = await prisma.promotionProduct.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PromotionProductFindManyArgs>(args?: SelectSubset<T, PromotionProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionProductPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PromotionProduct.
     * @param {PromotionProductCreateArgs} args - Arguments to create a PromotionProduct.
     * @example
     * // Create one PromotionProduct
     * const PromotionProduct = await prisma.promotionProduct.create({
     *   data: {
     *     // ... data to create a PromotionProduct
     *   }
     * })
     * 
     */
    create<T extends PromotionProductCreateArgs>(args: SelectSubset<T, PromotionProductCreateArgs<ExtArgs>>): Prisma__PromotionProductClient<$Result.GetResult<Prisma.$PromotionProductPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PromotionProducts.
     * @param {PromotionProductCreateManyArgs} args - Arguments to create many PromotionProducts.
     * @example
     * // Create many PromotionProducts
     * const promotionProduct = await prisma.promotionProduct.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PromotionProductCreateManyArgs>(args?: SelectSubset<T, PromotionProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PromotionProducts and returns the data saved in the database.
     * @param {PromotionProductCreateManyAndReturnArgs} args - Arguments to create many PromotionProducts.
     * @example
     * // Create many PromotionProducts
     * const promotionProduct = await prisma.promotionProduct.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PromotionProducts and only return the `id`
     * const promotionProductWithIdOnly = await prisma.promotionProduct.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PromotionProductCreateManyAndReturnArgs>(args?: SelectSubset<T, PromotionProductCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionProductPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PromotionProduct.
     * @param {PromotionProductDeleteArgs} args - Arguments to delete one PromotionProduct.
     * @example
     * // Delete one PromotionProduct
     * const PromotionProduct = await prisma.promotionProduct.delete({
     *   where: {
     *     // ... filter to delete one PromotionProduct
     *   }
     * })
     * 
     */
    delete<T extends PromotionProductDeleteArgs>(args: SelectSubset<T, PromotionProductDeleteArgs<ExtArgs>>): Prisma__PromotionProductClient<$Result.GetResult<Prisma.$PromotionProductPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PromotionProduct.
     * @param {PromotionProductUpdateArgs} args - Arguments to update one PromotionProduct.
     * @example
     * // Update one PromotionProduct
     * const promotionProduct = await prisma.promotionProduct.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PromotionProductUpdateArgs>(args: SelectSubset<T, PromotionProductUpdateArgs<ExtArgs>>): Prisma__PromotionProductClient<$Result.GetResult<Prisma.$PromotionProductPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PromotionProducts.
     * @param {PromotionProductDeleteManyArgs} args - Arguments to filter PromotionProducts to delete.
     * @example
     * // Delete a few PromotionProducts
     * const { count } = await prisma.promotionProduct.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PromotionProductDeleteManyArgs>(args?: SelectSubset<T, PromotionProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PromotionProducts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PromotionProducts
     * const promotionProduct = await prisma.promotionProduct.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PromotionProductUpdateManyArgs>(args: SelectSubset<T, PromotionProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PromotionProduct.
     * @param {PromotionProductUpsertArgs} args - Arguments to update or create a PromotionProduct.
     * @example
     * // Update or create a PromotionProduct
     * const promotionProduct = await prisma.promotionProduct.upsert({
     *   create: {
     *     // ... data to create a PromotionProduct
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PromotionProduct we want to update
     *   }
     * })
     */
    upsert<T extends PromotionProductUpsertArgs>(args: SelectSubset<T, PromotionProductUpsertArgs<ExtArgs>>): Prisma__PromotionProductClient<$Result.GetResult<Prisma.$PromotionProductPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PromotionProducts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionProductCountArgs} args - Arguments to filter PromotionProducts to count.
     * @example
     * // Count the number of PromotionProducts
     * const count = await prisma.promotionProduct.count({
     *   where: {
     *     // ... the filter for the PromotionProducts we want to count
     *   }
     * })
    **/
    count<T extends PromotionProductCountArgs>(
      args?: Subset<T, PromotionProductCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PromotionProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PromotionProduct.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PromotionProductAggregateArgs>(args: Subset<T, PromotionProductAggregateArgs>): Prisma.PrismaPromise<GetPromotionProductAggregateType<T>>

    /**
     * Group by PromotionProduct.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PromotionProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PromotionProductGroupByArgs['orderBy'] }
        : { orderBy?: PromotionProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PromotionProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPromotionProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PromotionProduct model
   */
  readonly fields: PromotionProductFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PromotionProduct.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PromotionProductClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends MenuProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MenuProductDefaultArgs<ExtArgs>>): Prisma__MenuProductClient<$Result.GetResult<Prisma.$MenuProductPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    promotion<T extends PromotionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PromotionDefaultArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PromotionProduct model
   */ 
  interface PromotionProductFieldRefs {
    readonly id: FieldRef<"PromotionProduct", 'String'>
    readonly promotionId: FieldRef<"PromotionProduct", 'String'>
    readonly productId: FieldRef<"PromotionProduct", 'String'>
    readonly baseDiscountType: FieldRef<"PromotionProduct", 'String'>
    readonly baseDiscountValue: FieldRef<"PromotionProduct", 'Decimal'>
    readonly createdAt: FieldRef<"PromotionProduct", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PromotionProduct findUnique
   */
  export type PromotionProductFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionProduct
     */
    select?: PromotionProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionProductInclude<ExtArgs> | null
    /**
     * Filter, which PromotionProduct to fetch.
     */
    where: PromotionProductWhereUniqueInput
  }

  /**
   * PromotionProduct findUniqueOrThrow
   */
  export type PromotionProductFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionProduct
     */
    select?: PromotionProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionProductInclude<ExtArgs> | null
    /**
     * Filter, which PromotionProduct to fetch.
     */
    where: PromotionProductWhereUniqueInput
  }

  /**
   * PromotionProduct findFirst
   */
  export type PromotionProductFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionProduct
     */
    select?: PromotionProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionProductInclude<ExtArgs> | null
    /**
     * Filter, which PromotionProduct to fetch.
     */
    where?: PromotionProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionProducts to fetch.
     */
    orderBy?: PromotionProductOrderByWithRelationInput | PromotionProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PromotionProducts.
     */
    cursor?: PromotionProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionProducts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionProducts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PromotionProducts.
     */
    distinct?: PromotionProductScalarFieldEnum | PromotionProductScalarFieldEnum[]
  }

  /**
   * PromotionProduct findFirstOrThrow
   */
  export type PromotionProductFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionProduct
     */
    select?: PromotionProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionProductInclude<ExtArgs> | null
    /**
     * Filter, which PromotionProduct to fetch.
     */
    where?: PromotionProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionProducts to fetch.
     */
    orderBy?: PromotionProductOrderByWithRelationInput | PromotionProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PromotionProducts.
     */
    cursor?: PromotionProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionProducts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionProducts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PromotionProducts.
     */
    distinct?: PromotionProductScalarFieldEnum | PromotionProductScalarFieldEnum[]
  }

  /**
   * PromotionProduct findMany
   */
  export type PromotionProductFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionProduct
     */
    select?: PromotionProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionProductInclude<ExtArgs> | null
    /**
     * Filter, which PromotionProducts to fetch.
     */
    where?: PromotionProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionProducts to fetch.
     */
    orderBy?: PromotionProductOrderByWithRelationInput | PromotionProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PromotionProducts.
     */
    cursor?: PromotionProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionProducts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionProducts.
     */
    skip?: number
    distinct?: PromotionProductScalarFieldEnum | PromotionProductScalarFieldEnum[]
  }

  /**
   * PromotionProduct create
   */
  export type PromotionProductCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionProduct
     */
    select?: PromotionProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionProductInclude<ExtArgs> | null
    /**
     * The data needed to create a PromotionProduct.
     */
    data: XOR<PromotionProductCreateInput, PromotionProductUncheckedCreateInput>
  }

  /**
   * PromotionProduct createMany
   */
  export type PromotionProductCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PromotionProducts.
     */
    data: PromotionProductCreateManyInput | PromotionProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PromotionProduct createManyAndReturn
   */
  export type PromotionProductCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionProduct
     */
    select?: PromotionProductSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PromotionProducts.
     */
    data: PromotionProductCreateManyInput | PromotionProductCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionProductIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PromotionProduct update
   */
  export type PromotionProductUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionProduct
     */
    select?: PromotionProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionProductInclude<ExtArgs> | null
    /**
     * The data needed to update a PromotionProduct.
     */
    data: XOR<PromotionProductUpdateInput, PromotionProductUncheckedUpdateInput>
    /**
     * Choose, which PromotionProduct to update.
     */
    where: PromotionProductWhereUniqueInput
  }

  /**
   * PromotionProduct updateMany
   */
  export type PromotionProductUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PromotionProducts.
     */
    data: XOR<PromotionProductUpdateManyMutationInput, PromotionProductUncheckedUpdateManyInput>
    /**
     * Filter which PromotionProducts to update
     */
    where?: PromotionProductWhereInput
  }

  /**
   * PromotionProduct upsert
   */
  export type PromotionProductUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionProduct
     */
    select?: PromotionProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionProductInclude<ExtArgs> | null
    /**
     * The filter to search for the PromotionProduct to update in case it exists.
     */
    where: PromotionProductWhereUniqueInput
    /**
     * In case the PromotionProduct found by the `where` argument doesn't exist, create a new PromotionProduct with this data.
     */
    create: XOR<PromotionProductCreateInput, PromotionProductUncheckedCreateInput>
    /**
     * In case the PromotionProduct was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PromotionProductUpdateInput, PromotionProductUncheckedUpdateInput>
  }

  /**
   * PromotionProduct delete
   */
  export type PromotionProductDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionProduct
     */
    select?: PromotionProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionProductInclude<ExtArgs> | null
    /**
     * Filter which PromotionProduct to delete.
     */
    where: PromotionProductWhereUniqueInput
  }

  /**
   * PromotionProduct deleteMany
   */
  export type PromotionProductDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PromotionProducts to delete
     */
    where?: PromotionProductWhereInput
  }

  /**
   * PromotionProduct without action
   */
  export type PromotionProductDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionProduct
     */
    select?: PromotionProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionProductInclude<ExtArgs> | null
  }


  /**
   * Model PromotionModifierMarkup
   */

  export type AggregatePromotionModifierMarkup = {
    _count: PromotionModifierMarkupCountAggregateOutputType | null
    _avg: PromotionModifierMarkupAvgAggregateOutputType | null
    _sum: PromotionModifierMarkupSumAggregateOutputType | null
    _min: PromotionModifierMarkupMinAggregateOutputType | null
    _max: PromotionModifierMarkupMaxAggregateOutputType | null
  }

  export type PromotionModifierMarkupAvgAggregateOutputType = {
    markupPercentage: Decimal | null
    originalPrice: Decimal | null
    markedUpPrice: Decimal | null
    profitMargin: Decimal | null
  }

  export type PromotionModifierMarkupSumAggregateOutputType = {
    markupPercentage: Decimal | null
    originalPrice: Decimal | null
    markedUpPrice: Decimal | null
    profitMargin: Decimal | null
  }

  export type PromotionModifierMarkupMinAggregateOutputType = {
    id: string | null
    promotionId: string | null
    productId: string | null
    modifierId: string | null
    markupPercentage: Decimal | null
    originalPrice: Decimal | null
    markedUpPrice: Decimal | null
    profitMargin: Decimal | null
    businessReason: string | null
    createdAt: Date | null
  }

  export type PromotionModifierMarkupMaxAggregateOutputType = {
    id: string | null
    promotionId: string | null
    productId: string | null
    modifierId: string | null
    markupPercentage: Decimal | null
    originalPrice: Decimal | null
    markedUpPrice: Decimal | null
    profitMargin: Decimal | null
    businessReason: string | null
    createdAt: Date | null
  }

  export type PromotionModifierMarkupCountAggregateOutputType = {
    id: number
    promotionId: number
    productId: number
    modifierId: number
    markupPercentage: number
    originalPrice: number
    markedUpPrice: number
    profitMargin: number
    businessReason: number
    createdAt: number
    _all: number
  }


  export type PromotionModifierMarkupAvgAggregateInputType = {
    markupPercentage?: true
    originalPrice?: true
    markedUpPrice?: true
    profitMargin?: true
  }

  export type PromotionModifierMarkupSumAggregateInputType = {
    markupPercentage?: true
    originalPrice?: true
    markedUpPrice?: true
    profitMargin?: true
  }

  export type PromotionModifierMarkupMinAggregateInputType = {
    id?: true
    promotionId?: true
    productId?: true
    modifierId?: true
    markupPercentage?: true
    originalPrice?: true
    markedUpPrice?: true
    profitMargin?: true
    businessReason?: true
    createdAt?: true
  }

  export type PromotionModifierMarkupMaxAggregateInputType = {
    id?: true
    promotionId?: true
    productId?: true
    modifierId?: true
    markupPercentage?: true
    originalPrice?: true
    markedUpPrice?: true
    profitMargin?: true
    businessReason?: true
    createdAt?: true
  }

  export type PromotionModifierMarkupCountAggregateInputType = {
    id?: true
    promotionId?: true
    productId?: true
    modifierId?: true
    markupPercentage?: true
    originalPrice?: true
    markedUpPrice?: true
    profitMargin?: true
    businessReason?: true
    createdAt?: true
    _all?: true
  }

  export type PromotionModifierMarkupAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PromotionModifierMarkup to aggregate.
     */
    where?: PromotionModifierMarkupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionModifierMarkups to fetch.
     */
    orderBy?: PromotionModifierMarkupOrderByWithRelationInput | PromotionModifierMarkupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PromotionModifierMarkupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionModifierMarkups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionModifierMarkups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PromotionModifierMarkups
    **/
    _count?: true | PromotionModifierMarkupCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PromotionModifierMarkupAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PromotionModifierMarkupSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PromotionModifierMarkupMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PromotionModifierMarkupMaxAggregateInputType
  }

  export type GetPromotionModifierMarkupAggregateType<T extends PromotionModifierMarkupAggregateArgs> = {
        [P in keyof T & keyof AggregatePromotionModifierMarkup]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePromotionModifierMarkup[P]>
      : GetScalarType<T[P], AggregatePromotionModifierMarkup[P]>
  }




  export type PromotionModifierMarkupGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionModifierMarkupWhereInput
    orderBy?: PromotionModifierMarkupOrderByWithAggregationInput | PromotionModifierMarkupOrderByWithAggregationInput[]
    by: PromotionModifierMarkupScalarFieldEnum[] | PromotionModifierMarkupScalarFieldEnum
    having?: PromotionModifierMarkupScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PromotionModifierMarkupCountAggregateInputType | true
    _avg?: PromotionModifierMarkupAvgAggregateInputType
    _sum?: PromotionModifierMarkupSumAggregateInputType
    _min?: PromotionModifierMarkupMinAggregateInputType
    _max?: PromotionModifierMarkupMaxAggregateInputType
  }

  export type PromotionModifierMarkupGroupByOutputType = {
    id: string
    promotionId: string
    productId: string
    modifierId: string
    markupPercentage: Decimal
    originalPrice: Decimal
    markedUpPrice: Decimal
    profitMargin: Decimal | null
    businessReason: string | null
    createdAt: Date
    _count: PromotionModifierMarkupCountAggregateOutputType | null
    _avg: PromotionModifierMarkupAvgAggregateOutputType | null
    _sum: PromotionModifierMarkupSumAggregateOutputType | null
    _min: PromotionModifierMarkupMinAggregateOutputType | null
    _max: PromotionModifierMarkupMaxAggregateOutputType | null
  }

  type GetPromotionModifierMarkupGroupByPayload<T extends PromotionModifierMarkupGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PromotionModifierMarkupGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PromotionModifierMarkupGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PromotionModifierMarkupGroupByOutputType[P]>
            : GetScalarType<T[P], PromotionModifierMarkupGroupByOutputType[P]>
        }
      >
    >


  export type PromotionModifierMarkupSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    promotionId?: boolean
    productId?: boolean
    modifierId?: boolean
    markupPercentage?: boolean
    originalPrice?: boolean
    markedUpPrice?: boolean
    profitMargin?: boolean
    businessReason?: boolean
    createdAt?: boolean
    modifier?: boolean | ModifierDefaultArgs<ExtArgs>
    product?: boolean | MenuProductDefaultArgs<ExtArgs>
    promotion?: boolean | PromotionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotionModifierMarkup"]>

  export type PromotionModifierMarkupSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    promotionId?: boolean
    productId?: boolean
    modifierId?: boolean
    markupPercentage?: boolean
    originalPrice?: boolean
    markedUpPrice?: boolean
    profitMargin?: boolean
    businessReason?: boolean
    createdAt?: boolean
    modifier?: boolean | ModifierDefaultArgs<ExtArgs>
    product?: boolean | MenuProductDefaultArgs<ExtArgs>
    promotion?: boolean | PromotionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotionModifierMarkup"]>

  export type PromotionModifierMarkupSelectScalar = {
    id?: boolean
    promotionId?: boolean
    productId?: boolean
    modifierId?: boolean
    markupPercentage?: boolean
    originalPrice?: boolean
    markedUpPrice?: boolean
    profitMargin?: boolean
    businessReason?: boolean
    createdAt?: boolean
  }

  export type PromotionModifierMarkupInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modifier?: boolean | ModifierDefaultArgs<ExtArgs>
    product?: boolean | MenuProductDefaultArgs<ExtArgs>
    promotion?: boolean | PromotionDefaultArgs<ExtArgs>
  }
  export type PromotionModifierMarkupIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modifier?: boolean | ModifierDefaultArgs<ExtArgs>
    product?: boolean | MenuProductDefaultArgs<ExtArgs>
    promotion?: boolean | PromotionDefaultArgs<ExtArgs>
  }

  export type $PromotionModifierMarkupPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PromotionModifierMarkup"
    objects: {
      modifier: Prisma.$ModifierPayload<ExtArgs>
      product: Prisma.$MenuProductPayload<ExtArgs>
      promotion: Prisma.$PromotionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      promotionId: string
      productId: string
      modifierId: string
      markupPercentage: Prisma.Decimal
      originalPrice: Prisma.Decimal
      markedUpPrice: Prisma.Decimal
      profitMargin: Prisma.Decimal | null
      businessReason: string | null
      createdAt: Date
    }, ExtArgs["result"]["promotionModifierMarkup"]>
    composites: {}
  }

  type PromotionModifierMarkupGetPayload<S extends boolean | null | undefined | PromotionModifierMarkupDefaultArgs> = $Result.GetResult<Prisma.$PromotionModifierMarkupPayload, S>

  type PromotionModifierMarkupCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PromotionModifierMarkupFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PromotionModifierMarkupCountAggregateInputType | true
    }

  export interface PromotionModifierMarkupDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PromotionModifierMarkup'], meta: { name: 'PromotionModifierMarkup' } }
    /**
     * Find zero or one PromotionModifierMarkup that matches the filter.
     * @param {PromotionModifierMarkupFindUniqueArgs} args - Arguments to find a PromotionModifierMarkup
     * @example
     * // Get one PromotionModifierMarkup
     * const promotionModifierMarkup = await prisma.promotionModifierMarkup.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PromotionModifierMarkupFindUniqueArgs>(args: SelectSubset<T, PromotionModifierMarkupFindUniqueArgs<ExtArgs>>): Prisma__PromotionModifierMarkupClient<$Result.GetResult<Prisma.$PromotionModifierMarkupPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PromotionModifierMarkup that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PromotionModifierMarkupFindUniqueOrThrowArgs} args - Arguments to find a PromotionModifierMarkup
     * @example
     * // Get one PromotionModifierMarkup
     * const promotionModifierMarkup = await prisma.promotionModifierMarkup.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PromotionModifierMarkupFindUniqueOrThrowArgs>(args: SelectSubset<T, PromotionModifierMarkupFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PromotionModifierMarkupClient<$Result.GetResult<Prisma.$PromotionModifierMarkupPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PromotionModifierMarkup that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionModifierMarkupFindFirstArgs} args - Arguments to find a PromotionModifierMarkup
     * @example
     * // Get one PromotionModifierMarkup
     * const promotionModifierMarkup = await prisma.promotionModifierMarkup.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PromotionModifierMarkupFindFirstArgs>(args?: SelectSubset<T, PromotionModifierMarkupFindFirstArgs<ExtArgs>>): Prisma__PromotionModifierMarkupClient<$Result.GetResult<Prisma.$PromotionModifierMarkupPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PromotionModifierMarkup that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionModifierMarkupFindFirstOrThrowArgs} args - Arguments to find a PromotionModifierMarkup
     * @example
     * // Get one PromotionModifierMarkup
     * const promotionModifierMarkup = await prisma.promotionModifierMarkup.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PromotionModifierMarkupFindFirstOrThrowArgs>(args?: SelectSubset<T, PromotionModifierMarkupFindFirstOrThrowArgs<ExtArgs>>): Prisma__PromotionModifierMarkupClient<$Result.GetResult<Prisma.$PromotionModifierMarkupPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PromotionModifierMarkups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionModifierMarkupFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PromotionModifierMarkups
     * const promotionModifierMarkups = await prisma.promotionModifierMarkup.findMany()
     * 
     * // Get first 10 PromotionModifierMarkups
     * const promotionModifierMarkups = await prisma.promotionModifierMarkup.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const promotionModifierMarkupWithIdOnly = await prisma.promotionModifierMarkup.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PromotionModifierMarkupFindManyArgs>(args?: SelectSubset<T, PromotionModifierMarkupFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionModifierMarkupPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PromotionModifierMarkup.
     * @param {PromotionModifierMarkupCreateArgs} args - Arguments to create a PromotionModifierMarkup.
     * @example
     * // Create one PromotionModifierMarkup
     * const PromotionModifierMarkup = await prisma.promotionModifierMarkup.create({
     *   data: {
     *     // ... data to create a PromotionModifierMarkup
     *   }
     * })
     * 
     */
    create<T extends PromotionModifierMarkupCreateArgs>(args: SelectSubset<T, PromotionModifierMarkupCreateArgs<ExtArgs>>): Prisma__PromotionModifierMarkupClient<$Result.GetResult<Prisma.$PromotionModifierMarkupPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PromotionModifierMarkups.
     * @param {PromotionModifierMarkupCreateManyArgs} args - Arguments to create many PromotionModifierMarkups.
     * @example
     * // Create many PromotionModifierMarkups
     * const promotionModifierMarkup = await prisma.promotionModifierMarkup.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PromotionModifierMarkupCreateManyArgs>(args?: SelectSubset<T, PromotionModifierMarkupCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PromotionModifierMarkups and returns the data saved in the database.
     * @param {PromotionModifierMarkupCreateManyAndReturnArgs} args - Arguments to create many PromotionModifierMarkups.
     * @example
     * // Create many PromotionModifierMarkups
     * const promotionModifierMarkup = await prisma.promotionModifierMarkup.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PromotionModifierMarkups and only return the `id`
     * const promotionModifierMarkupWithIdOnly = await prisma.promotionModifierMarkup.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PromotionModifierMarkupCreateManyAndReturnArgs>(args?: SelectSubset<T, PromotionModifierMarkupCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionModifierMarkupPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PromotionModifierMarkup.
     * @param {PromotionModifierMarkupDeleteArgs} args - Arguments to delete one PromotionModifierMarkup.
     * @example
     * // Delete one PromotionModifierMarkup
     * const PromotionModifierMarkup = await prisma.promotionModifierMarkup.delete({
     *   where: {
     *     // ... filter to delete one PromotionModifierMarkup
     *   }
     * })
     * 
     */
    delete<T extends PromotionModifierMarkupDeleteArgs>(args: SelectSubset<T, PromotionModifierMarkupDeleteArgs<ExtArgs>>): Prisma__PromotionModifierMarkupClient<$Result.GetResult<Prisma.$PromotionModifierMarkupPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PromotionModifierMarkup.
     * @param {PromotionModifierMarkupUpdateArgs} args - Arguments to update one PromotionModifierMarkup.
     * @example
     * // Update one PromotionModifierMarkup
     * const promotionModifierMarkup = await prisma.promotionModifierMarkup.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PromotionModifierMarkupUpdateArgs>(args: SelectSubset<T, PromotionModifierMarkupUpdateArgs<ExtArgs>>): Prisma__PromotionModifierMarkupClient<$Result.GetResult<Prisma.$PromotionModifierMarkupPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PromotionModifierMarkups.
     * @param {PromotionModifierMarkupDeleteManyArgs} args - Arguments to filter PromotionModifierMarkups to delete.
     * @example
     * // Delete a few PromotionModifierMarkups
     * const { count } = await prisma.promotionModifierMarkup.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PromotionModifierMarkupDeleteManyArgs>(args?: SelectSubset<T, PromotionModifierMarkupDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PromotionModifierMarkups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionModifierMarkupUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PromotionModifierMarkups
     * const promotionModifierMarkup = await prisma.promotionModifierMarkup.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PromotionModifierMarkupUpdateManyArgs>(args: SelectSubset<T, PromotionModifierMarkupUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PromotionModifierMarkup.
     * @param {PromotionModifierMarkupUpsertArgs} args - Arguments to update or create a PromotionModifierMarkup.
     * @example
     * // Update or create a PromotionModifierMarkup
     * const promotionModifierMarkup = await prisma.promotionModifierMarkup.upsert({
     *   create: {
     *     // ... data to create a PromotionModifierMarkup
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PromotionModifierMarkup we want to update
     *   }
     * })
     */
    upsert<T extends PromotionModifierMarkupUpsertArgs>(args: SelectSubset<T, PromotionModifierMarkupUpsertArgs<ExtArgs>>): Prisma__PromotionModifierMarkupClient<$Result.GetResult<Prisma.$PromotionModifierMarkupPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PromotionModifierMarkups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionModifierMarkupCountArgs} args - Arguments to filter PromotionModifierMarkups to count.
     * @example
     * // Count the number of PromotionModifierMarkups
     * const count = await prisma.promotionModifierMarkup.count({
     *   where: {
     *     // ... the filter for the PromotionModifierMarkups we want to count
     *   }
     * })
    **/
    count<T extends PromotionModifierMarkupCountArgs>(
      args?: Subset<T, PromotionModifierMarkupCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PromotionModifierMarkupCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PromotionModifierMarkup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionModifierMarkupAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PromotionModifierMarkupAggregateArgs>(args: Subset<T, PromotionModifierMarkupAggregateArgs>): Prisma.PrismaPromise<GetPromotionModifierMarkupAggregateType<T>>

    /**
     * Group by PromotionModifierMarkup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionModifierMarkupGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PromotionModifierMarkupGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PromotionModifierMarkupGroupByArgs['orderBy'] }
        : { orderBy?: PromotionModifierMarkupGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PromotionModifierMarkupGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPromotionModifierMarkupGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PromotionModifierMarkup model
   */
  readonly fields: PromotionModifierMarkupFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PromotionModifierMarkup.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PromotionModifierMarkupClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    modifier<T extends ModifierDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ModifierDefaultArgs<ExtArgs>>): Prisma__ModifierClient<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    product<T extends MenuProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MenuProductDefaultArgs<ExtArgs>>): Prisma__MenuProductClient<$Result.GetResult<Prisma.$MenuProductPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    promotion<T extends PromotionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PromotionDefaultArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PromotionModifierMarkup model
   */ 
  interface PromotionModifierMarkupFieldRefs {
    readonly id: FieldRef<"PromotionModifierMarkup", 'String'>
    readonly promotionId: FieldRef<"PromotionModifierMarkup", 'String'>
    readonly productId: FieldRef<"PromotionModifierMarkup", 'String'>
    readonly modifierId: FieldRef<"PromotionModifierMarkup", 'String'>
    readonly markupPercentage: FieldRef<"PromotionModifierMarkup", 'Decimal'>
    readonly originalPrice: FieldRef<"PromotionModifierMarkup", 'Decimal'>
    readonly markedUpPrice: FieldRef<"PromotionModifierMarkup", 'Decimal'>
    readonly profitMargin: FieldRef<"PromotionModifierMarkup", 'Decimal'>
    readonly businessReason: FieldRef<"PromotionModifierMarkup", 'String'>
    readonly createdAt: FieldRef<"PromotionModifierMarkup", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PromotionModifierMarkup findUnique
   */
  export type PromotionModifierMarkupFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionModifierMarkup
     */
    select?: PromotionModifierMarkupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionModifierMarkupInclude<ExtArgs> | null
    /**
     * Filter, which PromotionModifierMarkup to fetch.
     */
    where: PromotionModifierMarkupWhereUniqueInput
  }

  /**
   * PromotionModifierMarkup findUniqueOrThrow
   */
  export type PromotionModifierMarkupFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionModifierMarkup
     */
    select?: PromotionModifierMarkupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionModifierMarkupInclude<ExtArgs> | null
    /**
     * Filter, which PromotionModifierMarkup to fetch.
     */
    where: PromotionModifierMarkupWhereUniqueInput
  }

  /**
   * PromotionModifierMarkup findFirst
   */
  export type PromotionModifierMarkupFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionModifierMarkup
     */
    select?: PromotionModifierMarkupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionModifierMarkupInclude<ExtArgs> | null
    /**
     * Filter, which PromotionModifierMarkup to fetch.
     */
    where?: PromotionModifierMarkupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionModifierMarkups to fetch.
     */
    orderBy?: PromotionModifierMarkupOrderByWithRelationInput | PromotionModifierMarkupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PromotionModifierMarkups.
     */
    cursor?: PromotionModifierMarkupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionModifierMarkups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionModifierMarkups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PromotionModifierMarkups.
     */
    distinct?: PromotionModifierMarkupScalarFieldEnum | PromotionModifierMarkupScalarFieldEnum[]
  }

  /**
   * PromotionModifierMarkup findFirstOrThrow
   */
  export type PromotionModifierMarkupFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionModifierMarkup
     */
    select?: PromotionModifierMarkupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionModifierMarkupInclude<ExtArgs> | null
    /**
     * Filter, which PromotionModifierMarkup to fetch.
     */
    where?: PromotionModifierMarkupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionModifierMarkups to fetch.
     */
    orderBy?: PromotionModifierMarkupOrderByWithRelationInput | PromotionModifierMarkupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PromotionModifierMarkups.
     */
    cursor?: PromotionModifierMarkupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionModifierMarkups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionModifierMarkups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PromotionModifierMarkups.
     */
    distinct?: PromotionModifierMarkupScalarFieldEnum | PromotionModifierMarkupScalarFieldEnum[]
  }

  /**
   * PromotionModifierMarkup findMany
   */
  export type PromotionModifierMarkupFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionModifierMarkup
     */
    select?: PromotionModifierMarkupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionModifierMarkupInclude<ExtArgs> | null
    /**
     * Filter, which PromotionModifierMarkups to fetch.
     */
    where?: PromotionModifierMarkupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PromotionModifierMarkups to fetch.
     */
    orderBy?: PromotionModifierMarkupOrderByWithRelationInput | PromotionModifierMarkupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PromotionModifierMarkups.
     */
    cursor?: PromotionModifierMarkupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PromotionModifierMarkups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PromotionModifierMarkups.
     */
    skip?: number
    distinct?: PromotionModifierMarkupScalarFieldEnum | PromotionModifierMarkupScalarFieldEnum[]
  }

  /**
   * PromotionModifierMarkup create
   */
  export type PromotionModifierMarkupCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionModifierMarkup
     */
    select?: PromotionModifierMarkupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionModifierMarkupInclude<ExtArgs> | null
    /**
     * The data needed to create a PromotionModifierMarkup.
     */
    data: XOR<PromotionModifierMarkupCreateInput, PromotionModifierMarkupUncheckedCreateInput>
  }

  /**
   * PromotionModifierMarkup createMany
   */
  export type PromotionModifierMarkupCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PromotionModifierMarkups.
     */
    data: PromotionModifierMarkupCreateManyInput | PromotionModifierMarkupCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PromotionModifierMarkup createManyAndReturn
   */
  export type PromotionModifierMarkupCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionModifierMarkup
     */
    select?: PromotionModifierMarkupSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PromotionModifierMarkups.
     */
    data: PromotionModifierMarkupCreateManyInput | PromotionModifierMarkupCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionModifierMarkupIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PromotionModifierMarkup update
   */
  export type PromotionModifierMarkupUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionModifierMarkup
     */
    select?: PromotionModifierMarkupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionModifierMarkupInclude<ExtArgs> | null
    /**
     * The data needed to update a PromotionModifierMarkup.
     */
    data: XOR<PromotionModifierMarkupUpdateInput, PromotionModifierMarkupUncheckedUpdateInput>
    /**
     * Choose, which PromotionModifierMarkup to update.
     */
    where: PromotionModifierMarkupWhereUniqueInput
  }

  /**
   * PromotionModifierMarkup updateMany
   */
  export type PromotionModifierMarkupUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PromotionModifierMarkups.
     */
    data: XOR<PromotionModifierMarkupUpdateManyMutationInput, PromotionModifierMarkupUncheckedUpdateManyInput>
    /**
     * Filter which PromotionModifierMarkups to update
     */
    where?: PromotionModifierMarkupWhereInput
  }

  /**
   * PromotionModifierMarkup upsert
   */
  export type PromotionModifierMarkupUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionModifierMarkup
     */
    select?: PromotionModifierMarkupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionModifierMarkupInclude<ExtArgs> | null
    /**
     * The filter to search for the PromotionModifierMarkup to update in case it exists.
     */
    where: PromotionModifierMarkupWhereUniqueInput
    /**
     * In case the PromotionModifierMarkup found by the `where` argument doesn't exist, create a new PromotionModifierMarkup with this data.
     */
    create: XOR<PromotionModifierMarkupCreateInput, PromotionModifierMarkupUncheckedCreateInput>
    /**
     * In case the PromotionModifierMarkup was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PromotionModifierMarkupUpdateInput, PromotionModifierMarkupUncheckedUpdateInput>
  }

  /**
   * PromotionModifierMarkup delete
   */
  export type PromotionModifierMarkupDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionModifierMarkup
     */
    select?: PromotionModifierMarkupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionModifierMarkupInclude<ExtArgs> | null
    /**
     * Filter which PromotionModifierMarkup to delete.
     */
    where: PromotionModifierMarkupWhereUniqueInput
  }

  /**
   * PromotionModifierMarkup deleteMany
   */
  export type PromotionModifierMarkupDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PromotionModifierMarkups to delete
     */
    where?: PromotionModifierMarkupWhereInput
  }

  /**
   * PromotionModifierMarkup without action
   */
  export type PromotionModifierMarkupDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionModifierMarkup
     */
    select?: PromotionModifierMarkupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionModifierMarkupInclude<ExtArgs> | null
  }


  /**
   * Model PriceHistory
   */

  export type AggregatePriceHistory = {
    _count: PriceHistoryCountAggregateOutputType | null
    _avg: PriceHistoryAvgAggregateOutputType | null
    _sum: PriceHistorySumAggregateOutputType | null
    _min: PriceHistoryMinAggregateOutputType | null
    _max: PriceHistoryMaxAggregateOutputType | null
  }

  export type PriceHistoryAvgAggregateOutputType = {
    oldPrice: Decimal | null
    newPrice: Decimal | null
  }

  export type PriceHistorySumAggregateOutputType = {
    oldPrice: Decimal | null
    newPrice: Decimal | null
  }

  export type PriceHistoryMinAggregateOutputType = {
    id: string | null
    entityType: string | null
    entityId: string | null
    promotionId: string | null
    oldPrice: Decimal | null
    newPrice: Decimal | null
    changeReason: string | null
    platform: string | null
    createdAt: Date | null
    createdBy: string | null
  }

  export type PriceHistoryMaxAggregateOutputType = {
    id: string | null
    entityType: string | null
    entityId: string | null
    promotionId: string | null
    oldPrice: Decimal | null
    newPrice: Decimal | null
    changeReason: string | null
    platform: string | null
    createdAt: Date | null
    createdBy: string | null
  }

  export type PriceHistoryCountAggregateOutputType = {
    id: number
    entityType: number
    entityId: number
    promotionId: number
    oldPrice: number
    newPrice: number
    changeReason: number
    platform: number
    createdAt: number
    createdBy: number
    _all: number
  }


  export type PriceHistoryAvgAggregateInputType = {
    oldPrice?: true
    newPrice?: true
  }

  export type PriceHistorySumAggregateInputType = {
    oldPrice?: true
    newPrice?: true
  }

  export type PriceHistoryMinAggregateInputType = {
    id?: true
    entityType?: true
    entityId?: true
    promotionId?: true
    oldPrice?: true
    newPrice?: true
    changeReason?: true
    platform?: true
    createdAt?: true
    createdBy?: true
  }

  export type PriceHistoryMaxAggregateInputType = {
    id?: true
    entityType?: true
    entityId?: true
    promotionId?: true
    oldPrice?: true
    newPrice?: true
    changeReason?: true
    platform?: true
    createdAt?: true
    createdBy?: true
  }

  export type PriceHistoryCountAggregateInputType = {
    id?: true
    entityType?: true
    entityId?: true
    promotionId?: true
    oldPrice?: true
    newPrice?: true
    changeReason?: true
    platform?: true
    createdAt?: true
    createdBy?: true
    _all?: true
  }

  export type PriceHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PriceHistory to aggregate.
     */
    where?: PriceHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PriceHistories to fetch.
     */
    orderBy?: PriceHistoryOrderByWithRelationInput | PriceHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PriceHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PriceHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PriceHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PriceHistories
    **/
    _count?: true | PriceHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PriceHistoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PriceHistorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PriceHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PriceHistoryMaxAggregateInputType
  }

  export type GetPriceHistoryAggregateType<T extends PriceHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregatePriceHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePriceHistory[P]>
      : GetScalarType<T[P], AggregatePriceHistory[P]>
  }




  export type PriceHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PriceHistoryWhereInput
    orderBy?: PriceHistoryOrderByWithAggregationInput | PriceHistoryOrderByWithAggregationInput[]
    by: PriceHistoryScalarFieldEnum[] | PriceHistoryScalarFieldEnum
    having?: PriceHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PriceHistoryCountAggregateInputType | true
    _avg?: PriceHistoryAvgAggregateInputType
    _sum?: PriceHistorySumAggregateInputType
    _min?: PriceHistoryMinAggregateInputType
    _max?: PriceHistoryMaxAggregateInputType
  }

  export type PriceHistoryGroupByOutputType = {
    id: string
    entityType: string
    entityId: string
    promotionId: string | null
    oldPrice: Decimal | null
    newPrice: Decimal | null
    changeReason: string | null
    platform: string | null
    createdAt: Date
    createdBy: string | null
    _count: PriceHistoryCountAggregateOutputType | null
    _avg: PriceHistoryAvgAggregateOutputType | null
    _sum: PriceHistorySumAggregateOutputType | null
    _min: PriceHistoryMinAggregateOutputType | null
    _max: PriceHistoryMaxAggregateOutputType | null
  }

  type GetPriceHistoryGroupByPayload<T extends PriceHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PriceHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PriceHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PriceHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], PriceHistoryGroupByOutputType[P]>
        }
      >
    >


  export type PriceHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    entityType?: boolean
    entityId?: boolean
    promotionId?: boolean
    oldPrice?: boolean
    newPrice?: boolean
    changeReason?: boolean
    platform?: boolean
    createdAt?: boolean
    createdBy?: boolean
    promotion?: boolean | PriceHistory$promotionArgs<ExtArgs>
  }, ExtArgs["result"]["priceHistory"]>

  export type PriceHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    entityType?: boolean
    entityId?: boolean
    promotionId?: boolean
    oldPrice?: boolean
    newPrice?: boolean
    changeReason?: boolean
    platform?: boolean
    createdAt?: boolean
    createdBy?: boolean
    promotion?: boolean | PriceHistory$promotionArgs<ExtArgs>
  }, ExtArgs["result"]["priceHistory"]>

  export type PriceHistorySelectScalar = {
    id?: boolean
    entityType?: boolean
    entityId?: boolean
    promotionId?: boolean
    oldPrice?: boolean
    newPrice?: boolean
    changeReason?: boolean
    platform?: boolean
    createdAt?: boolean
    createdBy?: boolean
  }

  export type PriceHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotion?: boolean | PriceHistory$promotionArgs<ExtArgs>
  }
  export type PriceHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotion?: boolean | PriceHistory$promotionArgs<ExtArgs>
  }

  export type $PriceHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PriceHistory"
    objects: {
      promotion: Prisma.$PromotionPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      entityType: string
      entityId: string
      promotionId: string | null
      oldPrice: Prisma.Decimal | null
      newPrice: Prisma.Decimal | null
      changeReason: string | null
      platform: string | null
      createdAt: Date
      createdBy: string | null
    }, ExtArgs["result"]["priceHistory"]>
    composites: {}
  }

  type PriceHistoryGetPayload<S extends boolean | null | undefined | PriceHistoryDefaultArgs> = $Result.GetResult<Prisma.$PriceHistoryPayload, S>

  type PriceHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PriceHistoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PriceHistoryCountAggregateInputType | true
    }

  export interface PriceHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PriceHistory'], meta: { name: 'PriceHistory' } }
    /**
     * Find zero or one PriceHistory that matches the filter.
     * @param {PriceHistoryFindUniqueArgs} args - Arguments to find a PriceHistory
     * @example
     * // Get one PriceHistory
     * const priceHistory = await prisma.priceHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PriceHistoryFindUniqueArgs>(args: SelectSubset<T, PriceHistoryFindUniqueArgs<ExtArgs>>): Prisma__PriceHistoryClient<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PriceHistory that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PriceHistoryFindUniqueOrThrowArgs} args - Arguments to find a PriceHistory
     * @example
     * // Get one PriceHistory
     * const priceHistory = await prisma.priceHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PriceHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, PriceHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PriceHistoryClient<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PriceHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceHistoryFindFirstArgs} args - Arguments to find a PriceHistory
     * @example
     * // Get one PriceHistory
     * const priceHistory = await prisma.priceHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PriceHistoryFindFirstArgs>(args?: SelectSubset<T, PriceHistoryFindFirstArgs<ExtArgs>>): Prisma__PriceHistoryClient<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PriceHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceHistoryFindFirstOrThrowArgs} args - Arguments to find a PriceHistory
     * @example
     * // Get one PriceHistory
     * const priceHistory = await prisma.priceHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PriceHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, PriceHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__PriceHistoryClient<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PriceHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PriceHistories
     * const priceHistories = await prisma.priceHistory.findMany()
     * 
     * // Get first 10 PriceHistories
     * const priceHistories = await prisma.priceHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const priceHistoryWithIdOnly = await prisma.priceHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PriceHistoryFindManyArgs>(args?: SelectSubset<T, PriceHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PriceHistory.
     * @param {PriceHistoryCreateArgs} args - Arguments to create a PriceHistory.
     * @example
     * // Create one PriceHistory
     * const PriceHistory = await prisma.priceHistory.create({
     *   data: {
     *     // ... data to create a PriceHistory
     *   }
     * })
     * 
     */
    create<T extends PriceHistoryCreateArgs>(args: SelectSubset<T, PriceHistoryCreateArgs<ExtArgs>>): Prisma__PriceHistoryClient<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PriceHistories.
     * @param {PriceHistoryCreateManyArgs} args - Arguments to create many PriceHistories.
     * @example
     * // Create many PriceHistories
     * const priceHistory = await prisma.priceHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PriceHistoryCreateManyArgs>(args?: SelectSubset<T, PriceHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PriceHistories and returns the data saved in the database.
     * @param {PriceHistoryCreateManyAndReturnArgs} args - Arguments to create many PriceHistories.
     * @example
     * // Create many PriceHistories
     * const priceHistory = await prisma.priceHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PriceHistories and only return the `id`
     * const priceHistoryWithIdOnly = await prisma.priceHistory.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PriceHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, PriceHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a PriceHistory.
     * @param {PriceHistoryDeleteArgs} args - Arguments to delete one PriceHistory.
     * @example
     * // Delete one PriceHistory
     * const PriceHistory = await prisma.priceHistory.delete({
     *   where: {
     *     // ... filter to delete one PriceHistory
     *   }
     * })
     * 
     */
    delete<T extends PriceHistoryDeleteArgs>(args: SelectSubset<T, PriceHistoryDeleteArgs<ExtArgs>>): Prisma__PriceHistoryClient<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PriceHistory.
     * @param {PriceHistoryUpdateArgs} args - Arguments to update one PriceHistory.
     * @example
     * // Update one PriceHistory
     * const priceHistory = await prisma.priceHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PriceHistoryUpdateArgs>(args: SelectSubset<T, PriceHistoryUpdateArgs<ExtArgs>>): Prisma__PriceHistoryClient<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PriceHistories.
     * @param {PriceHistoryDeleteManyArgs} args - Arguments to filter PriceHistories to delete.
     * @example
     * // Delete a few PriceHistories
     * const { count } = await prisma.priceHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PriceHistoryDeleteManyArgs>(args?: SelectSubset<T, PriceHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PriceHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PriceHistories
     * const priceHistory = await prisma.priceHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PriceHistoryUpdateManyArgs>(args: SelectSubset<T, PriceHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PriceHistory.
     * @param {PriceHistoryUpsertArgs} args - Arguments to update or create a PriceHistory.
     * @example
     * // Update or create a PriceHistory
     * const priceHistory = await prisma.priceHistory.upsert({
     *   create: {
     *     // ... data to create a PriceHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PriceHistory we want to update
     *   }
     * })
     */
    upsert<T extends PriceHistoryUpsertArgs>(args: SelectSubset<T, PriceHistoryUpsertArgs<ExtArgs>>): Prisma__PriceHistoryClient<$Result.GetResult<Prisma.$PriceHistoryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PriceHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceHistoryCountArgs} args - Arguments to filter PriceHistories to count.
     * @example
     * // Count the number of PriceHistories
     * const count = await prisma.priceHistory.count({
     *   where: {
     *     // ... the filter for the PriceHistories we want to count
     *   }
     * })
    **/
    count<T extends PriceHistoryCountArgs>(
      args?: Subset<T, PriceHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PriceHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PriceHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PriceHistoryAggregateArgs>(args: Subset<T, PriceHistoryAggregateArgs>): Prisma.PrismaPromise<GetPriceHistoryAggregateType<T>>

    /**
     * Group by PriceHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PriceHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PriceHistoryGroupByArgs['orderBy'] }
        : { orderBy?: PriceHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PriceHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPriceHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PriceHistory model
   */
  readonly fields: PriceHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PriceHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PriceHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    promotion<T extends PriceHistory$promotionArgs<ExtArgs> = {}>(args?: Subset<T, PriceHistory$promotionArgs<ExtArgs>>): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PriceHistory model
   */ 
  interface PriceHistoryFieldRefs {
    readonly id: FieldRef<"PriceHistory", 'String'>
    readonly entityType: FieldRef<"PriceHistory", 'String'>
    readonly entityId: FieldRef<"PriceHistory", 'String'>
    readonly promotionId: FieldRef<"PriceHistory", 'String'>
    readonly oldPrice: FieldRef<"PriceHistory", 'Decimal'>
    readonly newPrice: FieldRef<"PriceHistory", 'Decimal'>
    readonly changeReason: FieldRef<"PriceHistory", 'String'>
    readonly platform: FieldRef<"PriceHistory", 'String'>
    readonly createdAt: FieldRef<"PriceHistory", 'DateTime'>
    readonly createdBy: FieldRef<"PriceHistory", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PriceHistory findUnique
   */
  export type PriceHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceHistoryInclude<ExtArgs> | null
    /**
     * Filter, which PriceHistory to fetch.
     */
    where: PriceHistoryWhereUniqueInput
  }

  /**
   * PriceHistory findUniqueOrThrow
   */
  export type PriceHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceHistoryInclude<ExtArgs> | null
    /**
     * Filter, which PriceHistory to fetch.
     */
    where: PriceHistoryWhereUniqueInput
  }

  /**
   * PriceHistory findFirst
   */
  export type PriceHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceHistoryInclude<ExtArgs> | null
    /**
     * Filter, which PriceHistory to fetch.
     */
    where?: PriceHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PriceHistories to fetch.
     */
    orderBy?: PriceHistoryOrderByWithRelationInput | PriceHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PriceHistories.
     */
    cursor?: PriceHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PriceHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PriceHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PriceHistories.
     */
    distinct?: PriceHistoryScalarFieldEnum | PriceHistoryScalarFieldEnum[]
  }

  /**
   * PriceHistory findFirstOrThrow
   */
  export type PriceHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceHistoryInclude<ExtArgs> | null
    /**
     * Filter, which PriceHistory to fetch.
     */
    where?: PriceHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PriceHistories to fetch.
     */
    orderBy?: PriceHistoryOrderByWithRelationInput | PriceHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PriceHistories.
     */
    cursor?: PriceHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PriceHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PriceHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PriceHistories.
     */
    distinct?: PriceHistoryScalarFieldEnum | PriceHistoryScalarFieldEnum[]
  }

  /**
   * PriceHistory findMany
   */
  export type PriceHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceHistoryInclude<ExtArgs> | null
    /**
     * Filter, which PriceHistories to fetch.
     */
    where?: PriceHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PriceHistories to fetch.
     */
    orderBy?: PriceHistoryOrderByWithRelationInput | PriceHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PriceHistories.
     */
    cursor?: PriceHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PriceHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PriceHistories.
     */
    skip?: number
    distinct?: PriceHistoryScalarFieldEnum | PriceHistoryScalarFieldEnum[]
  }

  /**
   * PriceHistory create
   */
  export type PriceHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a PriceHistory.
     */
    data: XOR<PriceHistoryCreateInput, PriceHistoryUncheckedCreateInput>
  }

  /**
   * PriceHistory createMany
   */
  export type PriceHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PriceHistories.
     */
    data: PriceHistoryCreateManyInput | PriceHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PriceHistory createManyAndReturn
   */
  export type PriceHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many PriceHistories.
     */
    data: PriceHistoryCreateManyInput | PriceHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PriceHistory update
   */
  export type PriceHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a PriceHistory.
     */
    data: XOR<PriceHistoryUpdateInput, PriceHistoryUncheckedUpdateInput>
    /**
     * Choose, which PriceHistory to update.
     */
    where: PriceHistoryWhereUniqueInput
  }

  /**
   * PriceHistory updateMany
   */
  export type PriceHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PriceHistories.
     */
    data: XOR<PriceHistoryUpdateManyMutationInput, PriceHistoryUncheckedUpdateManyInput>
    /**
     * Filter which PriceHistories to update
     */
    where?: PriceHistoryWhereInput
  }

  /**
   * PriceHistory upsert
   */
  export type PriceHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the PriceHistory to update in case it exists.
     */
    where: PriceHistoryWhereUniqueInput
    /**
     * In case the PriceHistory found by the `where` argument doesn't exist, create a new PriceHistory with this data.
     */
    create: XOR<PriceHistoryCreateInput, PriceHistoryUncheckedCreateInput>
    /**
     * In case the PriceHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PriceHistoryUpdateInput, PriceHistoryUncheckedUpdateInput>
  }

  /**
   * PriceHistory delete
   */
  export type PriceHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceHistoryInclude<ExtArgs> | null
    /**
     * Filter which PriceHistory to delete.
     */
    where: PriceHistoryWhereUniqueInput
  }

  /**
   * PriceHistory deleteMany
   */
  export type PriceHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PriceHistories to delete
     */
    where?: PriceHistoryWhereInput
  }

  /**
   * PriceHistory.promotion
   */
  export type PriceHistory$promotionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    where?: PromotionWhereInput
  }

  /**
   * PriceHistory without action
   */
  export type PriceHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PriceHistory
     */
    select?: PriceHistorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceHistoryInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CompanyScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    logo: 'logo',
    businessType: 'businessType',
    timezone: 'timezone',
    defaultCurrency: 'defaultCurrency',
    status: 'status',
    subscriptionPlan: 'subscriptionPlan',
    subscriptionExpiresAt: 'subscriptionExpiresAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy'
  };

  export type CompanyScalarFieldEnum = (typeof CompanyScalarFieldEnum)[keyof typeof CompanyScalarFieldEnum]


  export const LicenseScalarFieldEnum: {
    id: 'id',
    companyId: 'companyId',
    status: 'status',
    startDate: 'startDate',
    expiresAt: 'expiresAt',
    features: 'features',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    daysRemaining: 'daysRemaining',
    lastChecked: 'lastChecked',
    renewedAt: 'renewedAt',
    totalDays: 'totalDays'
  };

  export type LicenseScalarFieldEnum = (typeof LicenseScalarFieldEnum)[keyof typeof LicenseScalarFieldEnum]


  export const BranchScalarFieldEnum: {
    id: 'id',
    companyId: 'companyId',
    name: 'name',
    phone: 'phone',
    email: 'email',
    address: 'address',
    city: 'city',
    country: 'country',
    latitude: 'latitude',
    longitude: 'longitude',
    isDefault: 'isDefault',
    isActive: 'isActive',
    allowsOnlineOrders: 'allowsOnlineOrders',
    allowsDelivery: 'allowsDelivery',
    allowsPickup: 'allowsPickup',
    timezone: 'timezone',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    nameAr: 'nameAr',
    openTime: 'openTime',
    closeTime: 'closeTime'
  };

  export type BranchScalarFieldEnum = (typeof BranchScalarFieldEnum)[keyof typeof BranchScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    phone: 'phone',
    avatarUrl: 'avatarUrl',
    passwordHash: 'passwordHash',
    pin: 'pin',
    emailVerifiedAt: 'emailVerifiedAt',
    role: 'role',
    status: 'status',
    companyId: 'companyId',
    branchId: 'branchId',
    language: 'language',
    timezone: 'timezone',
    lastLoginAt: 'lastLoginAt',
    lastLoginIp: 'lastLoginIp',
    failedLoginAttempts: 'failedLoginAttempts',
    lockedUntil: 'lockedUntil',
    mustChangePassword: 'mustChangePassword',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy',
    firstName: 'firstName',
    lastName: 'lastName',
    username: 'username'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const UserSessionScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    tokenHash: 'tokenHash',
    refreshTokenHash: 'refreshTokenHash',
    expiresAt: 'expiresAt',
    refreshExpiresAt: 'refreshExpiresAt',
    ipAddress: 'ipAddress',
    userAgent: 'userAgent',
    deviceType: 'deviceType',
    isActive: 'isActive',
    revokedAt: 'revokedAt',
    createdAt: 'createdAt',
    lastUsedAt: 'lastUsedAt'
  };

  export type UserSessionScalarFieldEnum = (typeof UserSessionScalarFieldEnum)[keyof typeof UserSessionScalarFieldEnum]


  export const UserActivityLogScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    action: 'action',
    resourceType: 'resourceType',
    resourceId: 'resourceId',
    description: 'description',
    ipAddress: 'ipAddress',
    userAgent: 'userAgent',
    success: 'success',
    errorMessage: 'errorMessage',
    timestamp: 'timestamp'
  };

  export type UserActivityLogScalarFieldEnum = (typeof UserActivityLogScalarFieldEnum)[keyof typeof UserActivityLogScalarFieldEnum]


  export const MenuCategoryScalarFieldEnum: {
    id: 'id',
    companyId: 'companyId',
    name: 'name',
    description: 'description',
    image: 'image',
    displayNumber: 'displayNumber',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy'
  };

  export type MenuCategoryScalarFieldEnum = (typeof MenuCategoryScalarFieldEnum)[keyof typeof MenuCategoryScalarFieldEnum]


  export const MenuProductScalarFieldEnum: {
    id: 'id',
    companyId: 'companyId',
    categoryId: 'categoryId',
    name: 'name',
    description: 'description',
    image: 'image',
    images: 'images',
    slug: 'slug',
    basePrice: 'basePrice',
    pricing: 'pricing',
    cost: 'cost',
    status: 'status',
    priority: 'priority',
    preparationTime: 'preparationTime',
    pricingMethod: 'pricingMethod',
    sellingMethod: 'sellingMethod',
    tags: 'tags',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy'
  };

  export type MenuProductScalarFieldEnum = (typeof MenuProductScalarFieldEnum)[keyof typeof MenuProductScalarFieldEnum]


  export const ProductImageScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    filename: 'filename',
    originalName: 'originalName',
    url: 'url',
    size: 'size',
    width: 'width',
    height: 'height',
    mimeType: 'mimeType',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductImageScalarFieldEnum = (typeof ProductImageScalarFieldEnum)[keyof typeof ProductImageScalarFieldEnum]


  export const ModifierCategoryScalarFieldEnum: {
    id: 'id',
    companyId: 'companyId',
    name: 'name',
    description: 'description',
    displayNumber: 'displayNumber',
    image: 'image',
    selectionType: 'selectionType',
    isRequired: 'isRequired',
    minSelections: 'minSelections',
    maxSelections: 'maxSelections',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type ModifierCategoryScalarFieldEnum = (typeof ModifierCategoryScalarFieldEnum)[keyof typeof ModifierCategoryScalarFieldEnum]


  export const ModifierScalarFieldEnum: {
    id: 'id',
    modifierCategoryId: 'modifierCategoryId',
    companyId: 'companyId',
    name: 'name',
    description: 'description',
    basePrice: 'basePrice',
    pricing: 'pricing',
    cost: 'cost',
    status: 'status',
    displayNumber: 'displayNumber',
    isDefault: 'isDefault',
    image: 'image',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type ModifierScalarFieldEnum = (typeof ModifierScalarFieldEnum)[keyof typeof ModifierScalarFieldEnum]


  export const ProductModifierCategoryScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    modifierCategoryId: 'modifierCategoryId',
    minQuantity: 'minQuantity',
    maxQuantity: 'maxQuantity',
    priceOverride: 'priceOverride',
    isRequired: 'isRequired',
    displayOrder: 'displayOrder',
    createdAt: 'createdAt'
  };

  export type ProductModifierCategoryScalarFieldEnum = (typeof ProductModifierCategoryScalarFieldEnum)[keyof typeof ProductModifierCategoryScalarFieldEnum]


  export const PromotionScalarFieldEnum: {
    id: 'id',
    companyId: 'companyId',
    name: 'name',
    description: 'description',
    promotionType: 'promotionType',
    startDate: 'startDate',
    endDate: 'endDate',
    isActive: 'isActive',
    autoRevert: 'autoRevert',
    platforms: 'platforms',
    minProfitMargin: 'minProfitMargin',
    originalPricingSnapshot: 'originalPricingSnapshot',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy'
  };

  export type PromotionScalarFieldEnum = (typeof PromotionScalarFieldEnum)[keyof typeof PromotionScalarFieldEnum]


  export const PromotionProductScalarFieldEnum: {
    id: 'id',
    promotionId: 'promotionId',
    productId: 'productId',
    baseDiscountType: 'baseDiscountType',
    baseDiscountValue: 'baseDiscountValue',
    createdAt: 'createdAt'
  };

  export type PromotionProductScalarFieldEnum = (typeof PromotionProductScalarFieldEnum)[keyof typeof PromotionProductScalarFieldEnum]


  export const PromotionModifierMarkupScalarFieldEnum: {
    id: 'id',
    promotionId: 'promotionId',
    productId: 'productId',
    modifierId: 'modifierId',
    markupPercentage: 'markupPercentage',
    originalPrice: 'originalPrice',
    markedUpPrice: 'markedUpPrice',
    profitMargin: 'profitMargin',
    businessReason: 'businessReason',
    createdAt: 'createdAt'
  };

  export type PromotionModifierMarkupScalarFieldEnum = (typeof PromotionModifierMarkupScalarFieldEnum)[keyof typeof PromotionModifierMarkupScalarFieldEnum]


  export const PriceHistoryScalarFieldEnum: {
    id: 'id',
    entityType: 'entityType',
    entityId: 'entityId',
    promotionId: 'promotionId',
    oldPrice: 'oldPrice',
    newPrice: 'newPrice',
    changeReason: 'changeReason',
    platform: 'platform',
    createdAt: 'createdAt',
    createdBy: 'createdBy'
  };

  export type PriceHistoryScalarFieldEnum = (typeof PriceHistoryScalarFieldEnum)[keyof typeof PriceHistoryScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'CompanyStatus'
   */
  export type EnumCompanyStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CompanyStatus'>
    


  /**
   * Reference to a field of type 'CompanyStatus[]'
   */
  export type ListEnumCompanyStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CompanyStatus[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'LicenseStatus'
   */
  export type EnumLicenseStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LicenseStatus'>
    


  /**
   * Reference to a field of type 'LicenseStatus[]'
   */
  export type ListEnumLicenseStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'LicenseStatus[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'UserRole'
   */
  export type EnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole'>
    


  /**
   * Reference to a field of type 'UserRole[]'
   */
  export type ListEnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole[]'>
    


  /**
   * Reference to a field of type 'UserStatus'
   */
  export type EnumUserStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserStatus'>
    


  /**
   * Reference to a field of type 'UserStatus[]'
   */
  export type ListEnumUserStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserStatus[]'>
    


  /**
   * Reference to a field of type 'ModifierSelectionType'
   */
  export type EnumModifierSelectionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ModifierSelectionType'>
    


  /**
   * Reference to a field of type 'ModifierSelectionType[]'
   */
  export type ListEnumModifierSelectionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ModifierSelectionType[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type CompanyWhereInput = {
    AND?: CompanyWhereInput | CompanyWhereInput[]
    OR?: CompanyWhereInput[]
    NOT?: CompanyWhereInput | CompanyWhereInput[]
    id?: StringFilter<"Company"> | string
    name?: StringFilter<"Company"> | string
    slug?: StringFilter<"Company"> | string
    logo?: StringNullableFilter<"Company"> | string | null
    businessType?: StringNullableFilter<"Company"> | string | null
    timezone?: StringFilter<"Company"> | string
    defaultCurrency?: StringFilter<"Company"> | string
    status?: EnumCompanyStatusFilter<"Company"> | $Enums.CompanyStatus
    subscriptionPlan?: StringNullableFilter<"Company"> | string | null
    subscriptionExpiresAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    createdAt?: DateTimeFilter<"Company"> | Date | string
    updatedAt?: DateTimeFilter<"Company"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    createdBy?: StringNullableFilter<"Company"> | string | null
    updatedBy?: StringNullableFilter<"Company"> | string | null
    branches?: BranchListRelationFilter
    licenses?: LicenseListRelationFilter
    menuCategories?: MenuCategoryListRelationFilter
    menuProducts?: MenuProductListRelationFilter
    modifierCategories?: ModifierCategoryListRelationFilter
    modifiers?: ModifierListRelationFilter
    promotions?: PromotionListRelationFilter
    users?: UserListRelationFilter
  }

  export type CompanyOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    logo?: SortOrderInput | SortOrder
    businessType?: SortOrderInput | SortOrder
    timezone?: SortOrder
    defaultCurrency?: SortOrder
    status?: SortOrder
    subscriptionPlan?: SortOrderInput | SortOrder
    subscriptionExpiresAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    branches?: BranchOrderByRelationAggregateInput
    licenses?: LicenseOrderByRelationAggregateInput
    menuCategories?: MenuCategoryOrderByRelationAggregateInput
    menuProducts?: MenuProductOrderByRelationAggregateInput
    modifierCategories?: ModifierCategoryOrderByRelationAggregateInput
    modifiers?: ModifierOrderByRelationAggregateInput
    promotions?: PromotionOrderByRelationAggregateInput
    users?: UserOrderByRelationAggregateInput
  }

  export type CompanyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    AND?: CompanyWhereInput | CompanyWhereInput[]
    OR?: CompanyWhereInput[]
    NOT?: CompanyWhereInput | CompanyWhereInput[]
    name?: StringFilter<"Company"> | string
    logo?: StringNullableFilter<"Company"> | string | null
    businessType?: StringNullableFilter<"Company"> | string | null
    timezone?: StringFilter<"Company"> | string
    defaultCurrency?: StringFilter<"Company"> | string
    status?: EnumCompanyStatusFilter<"Company"> | $Enums.CompanyStatus
    subscriptionPlan?: StringNullableFilter<"Company"> | string | null
    subscriptionExpiresAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    createdAt?: DateTimeFilter<"Company"> | Date | string
    updatedAt?: DateTimeFilter<"Company"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Company"> | Date | string | null
    createdBy?: StringNullableFilter<"Company"> | string | null
    updatedBy?: StringNullableFilter<"Company"> | string | null
    branches?: BranchListRelationFilter
    licenses?: LicenseListRelationFilter
    menuCategories?: MenuCategoryListRelationFilter
    menuProducts?: MenuProductListRelationFilter
    modifierCategories?: ModifierCategoryListRelationFilter
    modifiers?: ModifierListRelationFilter
    promotions?: PromotionListRelationFilter
    users?: UserListRelationFilter
  }, "id" | "slug">

  export type CompanyOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    logo?: SortOrderInput | SortOrder
    businessType?: SortOrderInput | SortOrder
    timezone?: SortOrder
    defaultCurrency?: SortOrder
    status?: SortOrder
    subscriptionPlan?: SortOrderInput | SortOrder
    subscriptionExpiresAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: CompanyCountOrderByAggregateInput
    _max?: CompanyMaxOrderByAggregateInput
    _min?: CompanyMinOrderByAggregateInput
  }

  export type CompanyScalarWhereWithAggregatesInput = {
    AND?: CompanyScalarWhereWithAggregatesInput | CompanyScalarWhereWithAggregatesInput[]
    OR?: CompanyScalarWhereWithAggregatesInput[]
    NOT?: CompanyScalarWhereWithAggregatesInput | CompanyScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Company"> | string
    name?: StringWithAggregatesFilter<"Company"> | string
    slug?: StringWithAggregatesFilter<"Company"> | string
    logo?: StringNullableWithAggregatesFilter<"Company"> | string | null
    businessType?: StringNullableWithAggregatesFilter<"Company"> | string | null
    timezone?: StringWithAggregatesFilter<"Company"> | string
    defaultCurrency?: StringWithAggregatesFilter<"Company"> | string
    status?: EnumCompanyStatusWithAggregatesFilter<"Company"> | $Enums.CompanyStatus
    subscriptionPlan?: StringNullableWithAggregatesFilter<"Company"> | string | null
    subscriptionExpiresAt?: DateTimeNullableWithAggregatesFilter<"Company"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Company"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Company"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Company"> | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter<"Company"> | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"Company"> | string | null
  }

  export type LicenseWhereInput = {
    AND?: LicenseWhereInput | LicenseWhereInput[]
    OR?: LicenseWhereInput[]
    NOT?: LicenseWhereInput | LicenseWhereInput[]
    id?: StringFilter<"License"> | string
    companyId?: StringFilter<"License"> | string
    status?: EnumLicenseStatusFilter<"License"> | $Enums.LicenseStatus
    startDate?: DateTimeFilter<"License"> | Date | string
    expiresAt?: DateTimeFilter<"License"> | Date | string
    features?: JsonNullableFilter<"License">
    createdAt?: DateTimeFilter<"License"> | Date | string
    updatedAt?: DateTimeFilter<"License"> | Date | string
    createdBy?: StringNullableFilter<"License"> | string | null
    updatedBy?: StringNullableFilter<"License"> | string | null
    daysRemaining?: IntFilter<"License"> | number
    lastChecked?: DateTimeNullableFilter<"License"> | Date | string | null
    renewedAt?: DateTimeNullableFilter<"License"> | Date | string | null
    totalDays?: IntFilter<"License"> | number
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }

  export type LicenseOrderByWithRelationInput = {
    id?: SortOrder
    companyId?: SortOrder
    status?: SortOrder
    startDate?: SortOrder
    expiresAt?: SortOrder
    features?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    daysRemaining?: SortOrder
    lastChecked?: SortOrderInput | SortOrder
    renewedAt?: SortOrderInput | SortOrder
    totalDays?: SortOrder
    company?: CompanyOrderByWithRelationInput
  }

  export type LicenseWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: LicenseWhereInput | LicenseWhereInput[]
    OR?: LicenseWhereInput[]
    NOT?: LicenseWhereInput | LicenseWhereInput[]
    companyId?: StringFilter<"License"> | string
    status?: EnumLicenseStatusFilter<"License"> | $Enums.LicenseStatus
    startDate?: DateTimeFilter<"License"> | Date | string
    expiresAt?: DateTimeFilter<"License"> | Date | string
    features?: JsonNullableFilter<"License">
    createdAt?: DateTimeFilter<"License"> | Date | string
    updatedAt?: DateTimeFilter<"License"> | Date | string
    createdBy?: StringNullableFilter<"License"> | string | null
    updatedBy?: StringNullableFilter<"License"> | string | null
    daysRemaining?: IntFilter<"License"> | number
    lastChecked?: DateTimeNullableFilter<"License"> | Date | string | null
    renewedAt?: DateTimeNullableFilter<"License"> | Date | string | null
    totalDays?: IntFilter<"License"> | number
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }, "id">

  export type LicenseOrderByWithAggregationInput = {
    id?: SortOrder
    companyId?: SortOrder
    status?: SortOrder
    startDate?: SortOrder
    expiresAt?: SortOrder
    features?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    daysRemaining?: SortOrder
    lastChecked?: SortOrderInput | SortOrder
    renewedAt?: SortOrderInput | SortOrder
    totalDays?: SortOrder
    _count?: LicenseCountOrderByAggregateInput
    _avg?: LicenseAvgOrderByAggregateInput
    _max?: LicenseMaxOrderByAggregateInput
    _min?: LicenseMinOrderByAggregateInput
    _sum?: LicenseSumOrderByAggregateInput
  }

  export type LicenseScalarWhereWithAggregatesInput = {
    AND?: LicenseScalarWhereWithAggregatesInput | LicenseScalarWhereWithAggregatesInput[]
    OR?: LicenseScalarWhereWithAggregatesInput[]
    NOT?: LicenseScalarWhereWithAggregatesInput | LicenseScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"License"> | string
    companyId?: StringWithAggregatesFilter<"License"> | string
    status?: EnumLicenseStatusWithAggregatesFilter<"License"> | $Enums.LicenseStatus
    startDate?: DateTimeWithAggregatesFilter<"License"> | Date | string
    expiresAt?: DateTimeWithAggregatesFilter<"License"> | Date | string
    features?: JsonNullableWithAggregatesFilter<"License">
    createdAt?: DateTimeWithAggregatesFilter<"License"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"License"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"License"> | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"License"> | string | null
    daysRemaining?: IntWithAggregatesFilter<"License"> | number
    lastChecked?: DateTimeNullableWithAggregatesFilter<"License"> | Date | string | null
    renewedAt?: DateTimeNullableWithAggregatesFilter<"License"> | Date | string | null
    totalDays?: IntWithAggregatesFilter<"License"> | number
  }

  export type BranchWhereInput = {
    AND?: BranchWhereInput | BranchWhereInput[]
    OR?: BranchWhereInput[]
    NOT?: BranchWhereInput | BranchWhereInput[]
    id?: StringFilter<"Branch"> | string
    companyId?: StringFilter<"Branch"> | string
    name?: StringFilter<"Branch"> | string
    phone?: StringNullableFilter<"Branch"> | string | null
    email?: StringNullableFilter<"Branch"> | string | null
    address?: StringNullableFilter<"Branch"> | string | null
    city?: StringNullableFilter<"Branch"> | string | null
    country?: StringNullableFilter<"Branch"> | string | null
    latitude?: DecimalNullableFilter<"Branch"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"Branch"> | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFilter<"Branch"> | boolean
    isActive?: BoolFilter<"Branch"> | boolean
    allowsOnlineOrders?: BoolFilter<"Branch"> | boolean
    allowsDelivery?: BoolFilter<"Branch"> | boolean
    allowsPickup?: BoolFilter<"Branch"> | boolean
    timezone?: StringFilter<"Branch"> | string
    createdAt?: DateTimeFilter<"Branch"> | Date | string
    updatedAt?: DateTimeFilter<"Branch"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Branch"> | Date | string | null
    createdBy?: StringNullableFilter<"Branch"> | string | null
    updatedBy?: StringNullableFilter<"Branch"> | string | null
    nameAr?: StringFilter<"Branch"> | string
    openTime?: StringNullableFilter<"Branch"> | string | null
    closeTime?: StringNullableFilter<"Branch"> | string | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    users?: UserListRelationFilter
  }

  export type BranchOrderByWithRelationInput = {
    id?: SortOrder
    companyId?: SortOrder
    name?: SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    isDefault?: SortOrder
    isActive?: SortOrder
    allowsOnlineOrders?: SortOrder
    allowsDelivery?: SortOrder
    allowsPickup?: SortOrder
    timezone?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    nameAr?: SortOrder
    openTime?: SortOrderInput | SortOrder
    closeTime?: SortOrderInput | SortOrder
    company?: CompanyOrderByWithRelationInput
    users?: UserOrderByRelationAggregateInput
  }

  export type BranchWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BranchWhereInput | BranchWhereInput[]
    OR?: BranchWhereInput[]
    NOT?: BranchWhereInput | BranchWhereInput[]
    companyId?: StringFilter<"Branch"> | string
    name?: StringFilter<"Branch"> | string
    phone?: StringNullableFilter<"Branch"> | string | null
    email?: StringNullableFilter<"Branch"> | string | null
    address?: StringNullableFilter<"Branch"> | string | null
    city?: StringNullableFilter<"Branch"> | string | null
    country?: StringNullableFilter<"Branch"> | string | null
    latitude?: DecimalNullableFilter<"Branch"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"Branch"> | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFilter<"Branch"> | boolean
    isActive?: BoolFilter<"Branch"> | boolean
    allowsOnlineOrders?: BoolFilter<"Branch"> | boolean
    allowsDelivery?: BoolFilter<"Branch"> | boolean
    allowsPickup?: BoolFilter<"Branch"> | boolean
    timezone?: StringFilter<"Branch"> | string
    createdAt?: DateTimeFilter<"Branch"> | Date | string
    updatedAt?: DateTimeFilter<"Branch"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Branch"> | Date | string | null
    createdBy?: StringNullableFilter<"Branch"> | string | null
    updatedBy?: StringNullableFilter<"Branch"> | string | null
    nameAr?: StringFilter<"Branch"> | string
    openTime?: StringNullableFilter<"Branch"> | string | null
    closeTime?: StringNullableFilter<"Branch"> | string | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    users?: UserListRelationFilter
  }, "id">

  export type BranchOrderByWithAggregationInput = {
    id?: SortOrder
    companyId?: SortOrder
    name?: SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    isDefault?: SortOrder
    isActive?: SortOrder
    allowsOnlineOrders?: SortOrder
    allowsDelivery?: SortOrder
    allowsPickup?: SortOrder
    timezone?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    nameAr?: SortOrder
    openTime?: SortOrderInput | SortOrder
    closeTime?: SortOrderInput | SortOrder
    _count?: BranchCountOrderByAggregateInput
    _avg?: BranchAvgOrderByAggregateInput
    _max?: BranchMaxOrderByAggregateInput
    _min?: BranchMinOrderByAggregateInput
    _sum?: BranchSumOrderByAggregateInput
  }

  export type BranchScalarWhereWithAggregatesInput = {
    AND?: BranchScalarWhereWithAggregatesInput | BranchScalarWhereWithAggregatesInput[]
    OR?: BranchScalarWhereWithAggregatesInput[]
    NOT?: BranchScalarWhereWithAggregatesInput | BranchScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Branch"> | string
    companyId?: StringWithAggregatesFilter<"Branch"> | string
    name?: StringWithAggregatesFilter<"Branch"> | string
    phone?: StringNullableWithAggregatesFilter<"Branch"> | string | null
    email?: StringNullableWithAggregatesFilter<"Branch"> | string | null
    address?: StringNullableWithAggregatesFilter<"Branch"> | string | null
    city?: StringNullableWithAggregatesFilter<"Branch"> | string | null
    country?: StringNullableWithAggregatesFilter<"Branch"> | string | null
    latitude?: DecimalNullableWithAggregatesFilter<"Branch"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableWithAggregatesFilter<"Branch"> | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolWithAggregatesFilter<"Branch"> | boolean
    isActive?: BoolWithAggregatesFilter<"Branch"> | boolean
    allowsOnlineOrders?: BoolWithAggregatesFilter<"Branch"> | boolean
    allowsDelivery?: BoolWithAggregatesFilter<"Branch"> | boolean
    allowsPickup?: BoolWithAggregatesFilter<"Branch"> | boolean
    timezone?: StringWithAggregatesFilter<"Branch"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Branch"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Branch"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Branch"> | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter<"Branch"> | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"Branch"> | string | null
    nameAr?: StringWithAggregatesFilter<"Branch"> | string
    openTime?: StringNullableWithAggregatesFilter<"Branch"> | string | null
    closeTime?: StringNullableWithAggregatesFilter<"Branch"> | string | null
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    phone?: StringNullableFilter<"User"> | string | null
    avatarUrl?: StringNullableFilter<"User"> | string | null
    passwordHash?: StringFilter<"User"> | string
    pin?: StringNullableFilter<"User"> | string | null
    emailVerifiedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    status?: EnumUserStatusFilter<"User"> | $Enums.UserStatus
    companyId?: StringFilter<"User"> | string
    branchId?: StringNullableFilter<"User"> | string | null
    language?: StringFilter<"User"> | string
    timezone?: StringFilter<"User"> | string
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    lastLoginIp?: StringNullableFilter<"User"> | string | null
    failedLoginAttempts?: IntFilter<"User"> | number
    lockedUntil?: DateTimeNullableFilter<"User"> | Date | string | null
    mustChangePassword?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    createdBy?: StringNullableFilter<"User"> | string | null
    updatedBy?: StringNullableFilter<"User"> | string | null
    firstName?: StringNullableFilter<"User"> | string | null
    lastName?: StringNullableFilter<"User"> | string | null
    username?: StringNullableFilter<"User"> | string | null
    activityLogs?: UserActivityLogListRelationFilter
    sessions?: UserSessionListRelationFilter
    branch?: XOR<BranchNullableRelationFilter, BranchWhereInput> | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    avatarUrl?: SortOrderInput | SortOrder
    passwordHash?: SortOrder
    pin?: SortOrderInput | SortOrder
    emailVerifiedAt?: SortOrderInput | SortOrder
    role?: SortOrder
    status?: SortOrder
    companyId?: SortOrder
    branchId?: SortOrderInput | SortOrder
    language?: SortOrder
    timezone?: SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    lastLoginIp?: SortOrderInput | SortOrder
    failedLoginAttempts?: SortOrder
    lockedUntil?: SortOrderInput | SortOrder
    mustChangePassword?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    firstName?: SortOrderInput | SortOrder
    lastName?: SortOrderInput | SortOrder
    username?: SortOrderInput | SortOrder
    activityLogs?: UserActivityLogOrderByRelationAggregateInput
    sessions?: UserSessionOrderByRelationAggregateInput
    branch?: BranchOrderByWithRelationInput
    company?: CompanyOrderByWithRelationInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    username?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringFilter<"User"> | string
    phone?: StringNullableFilter<"User"> | string | null
    avatarUrl?: StringNullableFilter<"User"> | string | null
    passwordHash?: StringFilter<"User"> | string
    pin?: StringNullableFilter<"User"> | string | null
    emailVerifiedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    status?: EnumUserStatusFilter<"User"> | $Enums.UserStatus
    companyId?: StringFilter<"User"> | string
    branchId?: StringNullableFilter<"User"> | string | null
    language?: StringFilter<"User"> | string
    timezone?: StringFilter<"User"> | string
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    lastLoginIp?: StringNullableFilter<"User"> | string | null
    failedLoginAttempts?: IntFilter<"User"> | number
    lockedUntil?: DateTimeNullableFilter<"User"> | Date | string | null
    mustChangePassword?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    createdBy?: StringNullableFilter<"User"> | string | null
    updatedBy?: StringNullableFilter<"User"> | string | null
    firstName?: StringNullableFilter<"User"> | string | null
    lastName?: StringNullableFilter<"User"> | string | null
    activityLogs?: UserActivityLogListRelationFilter
    sessions?: UserSessionListRelationFilter
    branch?: XOR<BranchNullableRelationFilter, BranchWhereInput> | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }, "id" | "email" | "username">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    avatarUrl?: SortOrderInput | SortOrder
    passwordHash?: SortOrder
    pin?: SortOrderInput | SortOrder
    emailVerifiedAt?: SortOrderInput | SortOrder
    role?: SortOrder
    status?: SortOrder
    companyId?: SortOrder
    branchId?: SortOrderInput | SortOrder
    language?: SortOrder
    timezone?: SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    lastLoginIp?: SortOrderInput | SortOrder
    failedLoginAttempts?: SortOrder
    lockedUntil?: SortOrderInput | SortOrder
    mustChangePassword?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    firstName?: SortOrderInput | SortOrder
    lastName?: SortOrderInput | SortOrder
    username?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    name?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    phone?: StringNullableWithAggregatesFilter<"User"> | string | null
    avatarUrl?: StringNullableWithAggregatesFilter<"User"> | string | null
    passwordHash?: StringWithAggregatesFilter<"User"> | string
    pin?: StringNullableWithAggregatesFilter<"User"> | string | null
    emailVerifiedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    role?: EnumUserRoleWithAggregatesFilter<"User"> | $Enums.UserRole
    status?: EnumUserStatusWithAggregatesFilter<"User"> | $Enums.UserStatus
    companyId?: StringWithAggregatesFilter<"User"> | string
    branchId?: StringNullableWithAggregatesFilter<"User"> | string | null
    language?: StringWithAggregatesFilter<"User"> | string
    timezone?: StringWithAggregatesFilter<"User"> | string
    lastLoginAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    lastLoginIp?: StringNullableWithAggregatesFilter<"User"> | string | null
    failedLoginAttempts?: IntWithAggregatesFilter<"User"> | number
    lockedUntil?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    mustChangePassword?: BoolWithAggregatesFilter<"User"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter<"User"> | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"User"> | string | null
    firstName?: StringNullableWithAggregatesFilter<"User"> | string | null
    lastName?: StringNullableWithAggregatesFilter<"User"> | string | null
    username?: StringNullableWithAggregatesFilter<"User"> | string | null
  }

  export type UserSessionWhereInput = {
    AND?: UserSessionWhereInput | UserSessionWhereInput[]
    OR?: UserSessionWhereInput[]
    NOT?: UserSessionWhereInput | UserSessionWhereInput[]
    id?: StringFilter<"UserSession"> | string
    userId?: StringFilter<"UserSession"> | string
    tokenHash?: StringFilter<"UserSession"> | string
    refreshTokenHash?: StringNullableFilter<"UserSession"> | string | null
    expiresAt?: DateTimeFilter<"UserSession"> | Date | string
    refreshExpiresAt?: DateTimeNullableFilter<"UserSession"> | Date | string | null
    ipAddress?: StringNullableFilter<"UserSession"> | string | null
    userAgent?: StringNullableFilter<"UserSession"> | string | null
    deviceType?: StringNullableFilter<"UserSession"> | string | null
    isActive?: BoolFilter<"UserSession"> | boolean
    revokedAt?: DateTimeNullableFilter<"UserSession"> | Date | string | null
    createdAt?: DateTimeFilter<"UserSession"> | Date | string
    lastUsedAt?: DateTimeFilter<"UserSession"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type UserSessionOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    tokenHash?: SortOrder
    refreshTokenHash?: SortOrderInput | SortOrder
    expiresAt?: SortOrder
    refreshExpiresAt?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    deviceType?: SortOrderInput | SortOrder
    isActive?: SortOrder
    revokedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    lastUsedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type UserSessionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    tokenHash?: string
    refreshTokenHash?: string
    AND?: UserSessionWhereInput | UserSessionWhereInput[]
    OR?: UserSessionWhereInput[]
    NOT?: UserSessionWhereInput | UserSessionWhereInput[]
    userId?: StringFilter<"UserSession"> | string
    expiresAt?: DateTimeFilter<"UserSession"> | Date | string
    refreshExpiresAt?: DateTimeNullableFilter<"UserSession"> | Date | string | null
    ipAddress?: StringNullableFilter<"UserSession"> | string | null
    userAgent?: StringNullableFilter<"UserSession"> | string | null
    deviceType?: StringNullableFilter<"UserSession"> | string | null
    isActive?: BoolFilter<"UserSession"> | boolean
    revokedAt?: DateTimeNullableFilter<"UserSession"> | Date | string | null
    createdAt?: DateTimeFilter<"UserSession"> | Date | string
    lastUsedAt?: DateTimeFilter<"UserSession"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "tokenHash" | "refreshTokenHash">

  export type UserSessionOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    tokenHash?: SortOrder
    refreshTokenHash?: SortOrderInput | SortOrder
    expiresAt?: SortOrder
    refreshExpiresAt?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    deviceType?: SortOrderInput | SortOrder
    isActive?: SortOrder
    revokedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    lastUsedAt?: SortOrder
    _count?: UserSessionCountOrderByAggregateInput
    _max?: UserSessionMaxOrderByAggregateInput
    _min?: UserSessionMinOrderByAggregateInput
  }

  export type UserSessionScalarWhereWithAggregatesInput = {
    AND?: UserSessionScalarWhereWithAggregatesInput | UserSessionScalarWhereWithAggregatesInput[]
    OR?: UserSessionScalarWhereWithAggregatesInput[]
    NOT?: UserSessionScalarWhereWithAggregatesInput | UserSessionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserSession"> | string
    userId?: StringWithAggregatesFilter<"UserSession"> | string
    tokenHash?: StringWithAggregatesFilter<"UserSession"> | string
    refreshTokenHash?: StringNullableWithAggregatesFilter<"UserSession"> | string | null
    expiresAt?: DateTimeWithAggregatesFilter<"UserSession"> | Date | string
    refreshExpiresAt?: DateTimeNullableWithAggregatesFilter<"UserSession"> | Date | string | null
    ipAddress?: StringNullableWithAggregatesFilter<"UserSession"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"UserSession"> | string | null
    deviceType?: StringNullableWithAggregatesFilter<"UserSession"> | string | null
    isActive?: BoolWithAggregatesFilter<"UserSession"> | boolean
    revokedAt?: DateTimeNullableWithAggregatesFilter<"UserSession"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"UserSession"> | Date | string
    lastUsedAt?: DateTimeWithAggregatesFilter<"UserSession"> | Date | string
  }

  export type UserActivityLogWhereInput = {
    AND?: UserActivityLogWhereInput | UserActivityLogWhereInput[]
    OR?: UserActivityLogWhereInput[]
    NOT?: UserActivityLogWhereInput | UserActivityLogWhereInput[]
    id?: StringFilter<"UserActivityLog"> | string
    userId?: StringFilter<"UserActivityLog"> | string
    action?: StringFilter<"UserActivityLog"> | string
    resourceType?: StringNullableFilter<"UserActivityLog"> | string | null
    resourceId?: StringNullableFilter<"UserActivityLog"> | string | null
    description?: StringNullableFilter<"UserActivityLog"> | string | null
    ipAddress?: StringNullableFilter<"UserActivityLog"> | string | null
    userAgent?: StringNullableFilter<"UserActivityLog"> | string | null
    success?: BoolFilter<"UserActivityLog"> | boolean
    errorMessage?: StringNullableFilter<"UserActivityLog"> | string | null
    timestamp?: DateTimeFilter<"UserActivityLog"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type UserActivityLogOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    resourceType?: SortOrderInput | SortOrder
    resourceId?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    success?: SortOrder
    errorMessage?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type UserActivityLogWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: UserActivityLogWhereInput | UserActivityLogWhereInput[]
    OR?: UserActivityLogWhereInput[]
    NOT?: UserActivityLogWhereInput | UserActivityLogWhereInput[]
    userId?: StringFilter<"UserActivityLog"> | string
    action?: StringFilter<"UserActivityLog"> | string
    resourceType?: StringNullableFilter<"UserActivityLog"> | string | null
    resourceId?: StringNullableFilter<"UserActivityLog"> | string | null
    description?: StringNullableFilter<"UserActivityLog"> | string | null
    ipAddress?: StringNullableFilter<"UserActivityLog"> | string | null
    userAgent?: StringNullableFilter<"UserActivityLog"> | string | null
    success?: BoolFilter<"UserActivityLog"> | boolean
    errorMessage?: StringNullableFilter<"UserActivityLog"> | string | null
    timestamp?: DateTimeFilter<"UserActivityLog"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type UserActivityLogOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    resourceType?: SortOrderInput | SortOrder
    resourceId?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    success?: SortOrder
    errorMessage?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    _count?: UserActivityLogCountOrderByAggregateInput
    _max?: UserActivityLogMaxOrderByAggregateInput
    _min?: UserActivityLogMinOrderByAggregateInput
  }

  export type UserActivityLogScalarWhereWithAggregatesInput = {
    AND?: UserActivityLogScalarWhereWithAggregatesInput | UserActivityLogScalarWhereWithAggregatesInput[]
    OR?: UserActivityLogScalarWhereWithAggregatesInput[]
    NOT?: UserActivityLogScalarWhereWithAggregatesInput | UserActivityLogScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserActivityLog"> | string
    userId?: StringWithAggregatesFilter<"UserActivityLog"> | string
    action?: StringWithAggregatesFilter<"UserActivityLog"> | string
    resourceType?: StringNullableWithAggregatesFilter<"UserActivityLog"> | string | null
    resourceId?: StringNullableWithAggregatesFilter<"UserActivityLog"> | string | null
    description?: StringNullableWithAggregatesFilter<"UserActivityLog"> | string | null
    ipAddress?: StringNullableWithAggregatesFilter<"UserActivityLog"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"UserActivityLog"> | string | null
    success?: BoolWithAggregatesFilter<"UserActivityLog"> | boolean
    errorMessage?: StringNullableWithAggregatesFilter<"UserActivityLog"> | string | null
    timestamp?: DateTimeWithAggregatesFilter<"UserActivityLog"> | Date | string
  }

  export type MenuCategoryWhereInput = {
    AND?: MenuCategoryWhereInput | MenuCategoryWhereInput[]
    OR?: MenuCategoryWhereInput[]
    NOT?: MenuCategoryWhereInput | MenuCategoryWhereInput[]
    id?: StringFilter<"MenuCategory"> | string
    companyId?: StringFilter<"MenuCategory"> | string
    name?: JsonFilter<"MenuCategory">
    description?: JsonNullableFilter<"MenuCategory">
    image?: StringNullableFilter<"MenuCategory"> | string | null
    displayNumber?: IntFilter<"MenuCategory"> | number
    isActive?: BoolFilter<"MenuCategory"> | boolean
    createdAt?: DateTimeFilter<"MenuCategory"> | Date | string
    updatedAt?: DateTimeFilter<"MenuCategory"> | Date | string
    deletedAt?: DateTimeNullableFilter<"MenuCategory"> | Date | string | null
    createdBy?: StringNullableFilter<"MenuCategory"> | string | null
    updatedBy?: StringNullableFilter<"MenuCategory"> | string | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    products?: MenuProductListRelationFilter
  }

  export type MenuCategoryOrderByWithRelationInput = {
    id?: SortOrder
    companyId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    displayNumber?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    company?: CompanyOrderByWithRelationInput
    products?: MenuProductOrderByRelationAggregateInput
  }

  export type MenuCategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MenuCategoryWhereInput | MenuCategoryWhereInput[]
    OR?: MenuCategoryWhereInput[]
    NOT?: MenuCategoryWhereInput | MenuCategoryWhereInput[]
    companyId?: StringFilter<"MenuCategory"> | string
    name?: JsonFilter<"MenuCategory">
    description?: JsonNullableFilter<"MenuCategory">
    image?: StringNullableFilter<"MenuCategory"> | string | null
    displayNumber?: IntFilter<"MenuCategory"> | number
    isActive?: BoolFilter<"MenuCategory"> | boolean
    createdAt?: DateTimeFilter<"MenuCategory"> | Date | string
    updatedAt?: DateTimeFilter<"MenuCategory"> | Date | string
    deletedAt?: DateTimeNullableFilter<"MenuCategory"> | Date | string | null
    createdBy?: StringNullableFilter<"MenuCategory"> | string | null
    updatedBy?: StringNullableFilter<"MenuCategory"> | string | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    products?: MenuProductListRelationFilter
  }, "id">

  export type MenuCategoryOrderByWithAggregationInput = {
    id?: SortOrder
    companyId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    displayNumber?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: MenuCategoryCountOrderByAggregateInput
    _avg?: MenuCategoryAvgOrderByAggregateInput
    _max?: MenuCategoryMaxOrderByAggregateInput
    _min?: MenuCategoryMinOrderByAggregateInput
    _sum?: MenuCategorySumOrderByAggregateInput
  }

  export type MenuCategoryScalarWhereWithAggregatesInput = {
    AND?: MenuCategoryScalarWhereWithAggregatesInput | MenuCategoryScalarWhereWithAggregatesInput[]
    OR?: MenuCategoryScalarWhereWithAggregatesInput[]
    NOT?: MenuCategoryScalarWhereWithAggregatesInput | MenuCategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MenuCategory"> | string
    companyId?: StringWithAggregatesFilter<"MenuCategory"> | string
    name?: JsonWithAggregatesFilter<"MenuCategory">
    description?: JsonNullableWithAggregatesFilter<"MenuCategory">
    image?: StringNullableWithAggregatesFilter<"MenuCategory"> | string | null
    displayNumber?: IntWithAggregatesFilter<"MenuCategory"> | number
    isActive?: BoolWithAggregatesFilter<"MenuCategory"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"MenuCategory"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"MenuCategory"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"MenuCategory"> | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter<"MenuCategory"> | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"MenuCategory"> | string | null
  }

  export type MenuProductWhereInput = {
    AND?: MenuProductWhereInput | MenuProductWhereInput[]
    OR?: MenuProductWhereInput[]
    NOT?: MenuProductWhereInput | MenuProductWhereInput[]
    id?: StringFilter<"MenuProduct"> | string
    companyId?: StringFilter<"MenuProduct"> | string
    categoryId?: StringNullableFilter<"MenuProduct"> | string | null
    name?: JsonFilter<"MenuProduct">
    description?: JsonNullableFilter<"MenuProduct">
    image?: StringNullableFilter<"MenuProduct"> | string | null
    images?: StringNullableListFilter<"MenuProduct">
    slug?: StringNullableFilter<"MenuProduct"> | string | null
    basePrice?: DecimalFilter<"MenuProduct"> | Decimal | DecimalJsLike | number | string
    pricing?: JsonFilter<"MenuProduct">
    cost?: DecimalFilter<"MenuProduct"> | Decimal | DecimalJsLike | number | string
    status?: IntFilter<"MenuProduct"> | number
    priority?: IntFilter<"MenuProduct"> | number
    preparationTime?: IntFilter<"MenuProduct"> | number
    pricingMethod?: IntFilter<"MenuProduct"> | number
    sellingMethod?: IntFilter<"MenuProduct"> | number
    tags?: StringNullableListFilter<"MenuProduct">
    createdAt?: DateTimeFilter<"MenuProduct"> | Date | string
    updatedAt?: DateTimeFilter<"MenuProduct"> | Date | string
    deletedAt?: DateTimeNullableFilter<"MenuProduct"> | Date | string | null
    createdBy?: StringNullableFilter<"MenuProduct"> | string | null
    updatedBy?: StringNullableFilter<"MenuProduct"> | string | null
    category?: XOR<MenuCategoryNullableRelationFilter, MenuCategoryWhereInput> | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    modifierCategories?: ProductModifierCategoryListRelationFilter
    promotionModifierMarkups?: PromotionModifierMarkupListRelationFilter
    promotionProducts?: PromotionProductListRelationFilter
    productImages?: ProductImageListRelationFilter
  }

  export type MenuProductOrderByWithRelationInput = {
    id?: SortOrder
    companyId?: SortOrder
    categoryId?: SortOrderInput | SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    images?: SortOrder
    slug?: SortOrderInput | SortOrder
    basePrice?: SortOrder
    pricing?: SortOrder
    cost?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    preparationTime?: SortOrder
    pricingMethod?: SortOrder
    sellingMethod?: SortOrder
    tags?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    category?: MenuCategoryOrderByWithRelationInput
    company?: CompanyOrderByWithRelationInput
    modifierCategories?: ProductModifierCategoryOrderByRelationAggregateInput
    promotionModifierMarkups?: PromotionModifierMarkupOrderByRelationAggregateInput
    promotionProducts?: PromotionProductOrderByRelationAggregateInput
    productImages?: ProductImageOrderByRelationAggregateInput
  }

  export type MenuProductWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MenuProductWhereInput | MenuProductWhereInput[]
    OR?: MenuProductWhereInput[]
    NOT?: MenuProductWhereInput | MenuProductWhereInput[]
    companyId?: StringFilter<"MenuProduct"> | string
    categoryId?: StringNullableFilter<"MenuProduct"> | string | null
    name?: JsonFilter<"MenuProduct">
    description?: JsonNullableFilter<"MenuProduct">
    image?: StringNullableFilter<"MenuProduct"> | string | null
    images?: StringNullableListFilter<"MenuProduct">
    slug?: StringNullableFilter<"MenuProduct"> | string | null
    basePrice?: DecimalFilter<"MenuProduct"> | Decimal | DecimalJsLike | number | string
    pricing?: JsonFilter<"MenuProduct">
    cost?: DecimalFilter<"MenuProduct"> | Decimal | DecimalJsLike | number | string
    status?: IntFilter<"MenuProduct"> | number
    priority?: IntFilter<"MenuProduct"> | number
    preparationTime?: IntFilter<"MenuProduct"> | number
    pricingMethod?: IntFilter<"MenuProduct"> | number
    sellingMethod?: IntFilter<"MenuProduct"> | number
    tags?: StringNullableListFilter<"MenuProduct">
    createdAt?: DateTimeFilter<"MenuProduct"> | Date | string
    updatedAt?: DateTimeFilter<"MenuProduct"> | Date | string
    deletedAt?: DateTimeNullableFilter<"MenuProduct"> | Date | string | null
    createdBy?: StringNullableFilter<"MenuProduct"> | string | null
    updatedBy?: StringNullableFilter<"MenuProduct"> | string | null
    category?: XOR<MenuCategoryNullableRelationFilter, MenuCategoryWhereInput> | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    modifierCategories?: ProductModifierCategoryListRelationFilter
    promotionModifierMarkups?: PromotionModifierMarkupListRelationFilter
    promotionProducts?: PromotionProductListRelationFilter
    productImages?: ProductImageListRelationFilter
  }, "id">

  export type MenuProductOrderByWithAggregationInput = {
    id?: SortOrder
    companyId?: SortOrder
    categoryId?: SortOrderInput | SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    images?: SortOrder
    slug?: SortOrderInput | SortOrder
    basePrice?: SortOrder
    pricing?: SortOrder
    cost?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    preparationTime?: SortOrder
    pricingMethod?: SortOrder
    sellingMethod?: SortOrder
    tags?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: MenuProductCountOrderByAggregateInput
    _avg?: MenuProductAvgOrderByAggregateInput
    _max?: MenuProductMaxOrderByAggregateInput
    _min?: MenuProductMinOrderByAggregateInput
    _sum?: MenuProductSumOrderByAggregateInput
  }

  export type MenuProductScalarWhereWithAggregatesInput = {
    AND?: MenuProductScalarWhereWithAggregatesInput | MenuProductScalarWhereWithAggregatesInput[]
    OR?: MenuProductScalarWhereWithAggregatesInput[]
    NOT?: MenuProductScalarWhereWithAggregatesInput | MenuProductScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"MenuProduct"> | string
    companyId?: StringWithAggregatesFilter<"MenuProduct"> | string
    categoryId?: StringNullableWithAggregatesFilter<"MenuProduct"> | string | null
    name?: JsonWithAggregatesFilter<"MenuProduct">
    description?: JsonNullableWithAggregatesFilter<"MenuProduct">
    image?: StringNullableWithAggregatesFilter<"MenuProduct"> | string | null
    images?: StringNullableListFilter<"MenuProduct">
    slug?: StringNullableWithAggregatesFilter<"MenuProduct"> | string | null
    basePrice?: DecimalWithAggregatesFilter<"MenuProduct"> | Decimal | DecimalJsLike | number | string
    pricing?: JsonWithAggregatesFilter<"MenuProduct">
    cost?: DecimalWithAggregatesFilter<"MenuProduct"> | Decimal | DecimalJsLike | number | string
    status?: IntWithAggregatesFilter<"MenuProduct"> | number
    priority?: IntWithAggregatesFilter<"MenuProduct"> | number
    preparationTime?: IntWithAggregatesFilter<"MenuProduct"> | number
    pricingMethod?: IntWithAggregatesFilter<"MenuProduct"> | number
    sellingMethod?: IntWithAggregatesFilter<"MenuProduct"> | number
    tags?: StringNullableListFilter<"MenuProduct">
    createdAt?: DateTimeWithAggregatesFilter<"MenuProduct"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"MenuProduct"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"MenuProduct"> | Date | string | null
    createdBy?: StringNullableWithAggregatesFilter<"MenuProduct"> | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"MenuProduct"> | string | null
  }

  export type ProductImageWhereInput = {
    AND?: ProductImageWhereInput | ProductImageWhereInput[]
    OR?: ProductImageWhereInput[]
    NOT?: ProductImageWhereInput | ProductImageWhereInput[]
    id?: StringFilter<"ProductImage"> | string
    productId?: StringNullableFilter<"ProductImage"> | string | null
    filename?: StringFilter<"ProductImage"> | string
    originalName?: StringFilter<"ProductImage"> | string
    url?: StringFilter<"ProductImage"> | string
    size?: IntFilter<"ProductImage"> | number
    width?: IntFilter<"ProductImage"> | number
    height?: IntFilter<"ProductImage"> | number
    mimeType?: StringFilter<"ProductImage"> | string
    createdAt?: DateTimeFilter<"ProductImage"> | Date | string
    updatedAt?: DateTimeFilter<"ProductImage"> | Date | string
    product?: XOR<MenuProductNullableRelationFilter, MenuProductWhereInput> | null
  }

  export type ProductImageOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrderInput | SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    url?: SortOrder
    size?: SortOrder
    width?: SortOrder
    height?: SortOrder
    mimeType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    product?: MenuProductOrderByWithRelationInput
  }

  export type ProductImageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductImageWhereInput | ProductImageWhereInput[]
    OR?: ProductImageWhereInput[]
    NOT?: ProductImageWhereInput | ProductImageWhereInput[]
    productId?: StringNullableFilter<"ProductImage"> | string | null
    filename?: StringFilter<"ProductImage"> | string
    originalName?: StringFilter<"ProductImage"> | string
    url?: StringFilter<"ProductImage"> | string
    size?: IntFilter<"ProductImage"> | number
    width?: IntFilter<"ProductImage"> | number
    height?: IntFilter<"ProductImage"> | number
    mimeType?: StringFilter<"ProductImage"> | string
    createdAt?: DateTimeFilter<"ProductImage"> | Date | string
    updatedAt?: DateTimeFilter<"ProductImage"> | Date | string
    product?: XOR<MenuProductNullableRelationFilter, MenuProductWhereInput> | null
  }, "id">

  export type ProductImageOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrderInput | SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    url?: SortOrder
    size?: SortOrder
    width?: SortOrder
    height?: SortOrder
    mimeType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductImageCountOrderByAggregateInput
    _avg?: ProductImageAvgOrderByAggregateInput
    _max?: ProductImageMaxOrderByAggregateInput
    _min?: ProductImageMinOrderByAggregateInput
    _sum?: ProductImageSumOrderByAggregateInput
  }

  export type ProductImageScalarWhereWithAggregatesInput = {
    AND?: ProductImageScalarWhereWithAggregatesInput | ProductImageScalarWhereWithAggregatesInput[]
    OR?: ProductImageScalarWhereWithAggregatesInput[]
    NOT?: ProductImageScalarWhereWithAggregatesInput | ProductImageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductImage"> | string
    productId?: StringNullableWithAggregatesFilter<"ProductImage"> | string | null
    filename?: StringWithAggregatesFilter<"ProductImage"> | string
    originalName?: StringWithAggregatesFilter<"ProductImage"> | string
    url?: StringWithAggregatesFilter<"ProductImage"> | string
    size?: IntWithAggregatesFilter<"ProductImage"> | number
    width?: IntWithAggregatesFilter<"ProductImage"> | number
    height?: IntWithAggregatesFilter<"ProductImage"> | number
    mimeType?: StringWithAggregatesFilter<"ProductImage"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ProductImage"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductImage"> | Date | string
  }

  export type ModifierCategoryWhereInput = {
    AND?: ModifierCategoryWhereInput | ModifierCategoryWhereInput[]
    OR?: ModifierCategoryWhereInput[]
    NOT?: ModifierCategoryWhereInput | ModifierCategoryWhereInput[]
    id?: StringFilter<"ModifierCategory"> | string
    companyId?: StringFilter<"ModifierCategory"> | string
    name?: JsonFilter<"ModifierCategory">
    description?: JsonNullableFilter<"ModifierCategory">
    displayNumber?: IntFilter<"ModifierCategory"> | number
    image?: StringNullableFilter<"ModifierCategory"> | string | null
    selectionType?: EnumModifierSelectionTypeFilter<"ModifierCategory"> | $Enums.ModifierSelectionType
    isRequired?: BoolFilter<"ModifierCategory"> | boolean
    minSelections?: IntFilter<"ModifierCategory"> | number
    maxSelections?: IntFilter<"ModifierCategory"> | number
    createdAt?: DateTimeFilter<"ModifierCategory"> | Date | string
    updatedAt?: DateTimeFilter<"ModifierCategory"> | Date | string
    deletedAt?: DateTimeNullableFilter<"ModifierCategory"> | Date | string | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    modifiers?: ModifierListRelationFilter
    productCategories?: ProductModifierCategoryListRelationFilter
  }

  export type ModifierCategoryOrderByWithRelationInput = {
    id?: SortOrder
    companyId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    displayNumber?: SortOrder
    image?: SortOrderInput | SortOrder
    selectionType?: SortOrder
    isRequired?: SortOrder
    minSelections?: SortOrder
    maxSelections?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    company?: CompanyOrderByWithRelationInput
    modifiers?: ModifierOrderByRelationAggregateInput
    productCategories?: ProductModifierCategoryOrderByRelationAggregateInput
  }

  export type ModifierCategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ModifierCategoryWhereInput | ModifierCategoryWhereInput[]
    OR?: ModifierCategoryWhereInput[]
    NOT?: ModifierCategoryWhereInput | ModifierCategoryWhereInput[]
    companyId?: StringFilter<"ModifierCategory"> | string
    name?: JsonFilter<"ModifierCategory">
    description?: JsonNullableFilter<"ModifierCategory">
    displayNumber?: IntFilter<"ModifierCategory"> | number
    image?: StringNullableFilter<"ModifierCategory"> | string | null
    selectionType?: EnumModifierSelectionTypeFilter<"ModifierCategory"> | $Enums.ModifierSelectionType
    isRequired?: BoolFilter<"ModifierCategory"> | boolean
    minSelections?: IntFilter<"ModifierCategory"> | number
    maxSelections?: IntFilter<"ModifierCategory"> | number
    createdAt?: DateTimeFilter<"ModifierCategory"> | Date | string
    updatedAt?: DateTimeFilter<"ModifierCategory"> | Date | string
    deletedAt?: DateTimeNullableFilter<"ModifierCategory"> | Date | string | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    modifiers?: ModifierListRelationFilter
    productCategories?: ProductModifierCategoryListRelationFilter
  }, "id">

  export type ModifierCategoryOrderByWithAggregationInput = {
    id?: SortOrder
    companyId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    displayNumber?: SortOrder
    image?: SortOrderInput | SortOrder
    selectionType?: SortOrder
    isRequired?: SortOrder
    minSelections?: SortOrder
    maxSelections?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: ModifierCategoryCountOrderByAggregateInput
    _avg?: ModifierCategoryAvgOrderByAggregateInput
    _max?: ModifierCategoryMaxOrderByAggregateInput
    _min?: ModifierCategoryMinOrderByAggregateInput
    _sum?: ModifierCategorySumOrderByAggregateInput
  }

  export type ModifierCategoryScalarWhereWithAggregatesInput = {
    AND?: ModifierCategoryScalarWhereWithAggregatesInput | ModifierCategoryScalarWhereWithAggregatesInput[]
    OR?: ModifierCategoryScalarWhereWithAggregatesInput[]
    NOT?: ModifierCategoryScalarWhereWithAggregatesInput | ModifierCategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ModifierCategory"> | string
    companyId?: StringWithAggregatesFilter<"ModifierCategory"> | string
    name?: JsonWithAggregatesFilter<"ModifierCategory">
    description?: JsonNullableWithAggregatesFilter<"ModifierCategory">
    displayNumber?: IntWithAggregatesFilter<"ModifierCategory"> | number
    image?: StringNullableWithAggregatesFilter<"ModifierCategory"> | string | null
    selectionType?: EnumModifierSelectionTypeWithAggregatesFilter<"ModifierCategory"> | $Enums.ModifierSelectionType
    isRequired?: BoolWithAggregatesFilter<"ModifierCategory"> | boolean
    minSelections?: IntWithAggregatesFilter<"ModifierCategory"> | number
    maxSelections?: IntWithAggregatesFilter<"ModifierCategory"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ModifierCategory"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ModifierCategory"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"ModifierCategory"> | Date | string | null
  }

  export type ModifierWhereInput = {
    AND?: ModifierWhereInput | ModifierWhereInput[]
    OR?: ModifierWhereInput[]
    NOT?: ModifierWhereInput | ModifierWhereInput[]
    id?: StringFilter<"Modifier"> | string
    modifierCategoryId?: StringFilter<"Modifier"> | string
    companyId?: StringFilter<"Modifier"> | string
    name?: JsonFilter<"Modifier">
    description?: JsonNullableFilter<"Modifier">
    basePrice?: DecimalFilter<"Modifier"> | Decimal | DecimalJsLike | number | string
    pricing?: JsonFilter<"Modifier">
    cost?: DecimalFilter<"Modifier"> | Decimal | DecimalJsLike | number | string
    status?: IntFilter<"Modifier"> | number
    displayNumber?: IntFilter<"Modifier"> | number
    isDefault?: BoolFilter<"Modifier"> | boolean
    image?: StringNullableFilter<"Modifier"> | string | null
    createdAt?: DateTimeFilter<"Modifier"> | Date | string
    updatedAt?: DateTimeFilter<"Modifier"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Modifier"> | Date | string | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    modifierCategory?: XOR<ModifierCategoryRelationFilter, ModifierCategoryWhereInput>
    promotionMarkups?: PromotionModifierMarkupListRelationFilter
  }

  export type ModifierOrderByWithRelationInput = {
    id?: SortOrder
    modifierCategoryId?: SortOrder
    companyId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    basePrice?: SortOrder
    pricing?: SortOrder
    cost?: SortOrder
    status?: SortOrder
    displayNumber?: SortOrder
    isDefault?: SortOrder
    image?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    company?: CompanyOrderByWithRelationInput
    modifierCategory?: ModifierCategoryOrderByWithRelationInput
    promotionMarkups?: PromotionModifierMarkupOrderByRelationAggregateInput
  }

  export type ModifierWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ModifierWhereInput | ModifierWhereInput[]
    OR?: ModifierWhereInput[]
    NOT?: ModifierWhereInput | ModifierWhereInput[]
    modifierCategoryId?: StringFilter<"Modifier"> | string
    companyId?: StringFilter<"Modifier"> | string
    name?: JsonFilter<"Modifier">
    description?: JsonNullableFilter<"Modifier">
    basePrice?: DecimalFilter<"Modifier"> | Decimal | DecimalJsLike | number | string
    pricing?: JsonFilter<"Modifier">
    cost?: DecimalFilter<"Modifier"> | Decimal | DecimalJsLike | number | string
    status?: IntFilter<"Modifier"> | number
    displayNumber?: IntFilter<"Modifier"> | number
    isDefault?: BoolFilter<"Modifier"> | boolean
    image?: StringNullableFilter<"Modifier"> | string | null
    createdAt?: DateTimeFilter<"Modifier"> | Date | string
    updatedAt?: DateTimeFilter<"Modifier"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Modifier"> | Date | string | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
    modifierCategory?: XOR<ModifierCategoryRelationFilter, ModifierCategoryWhereInput>
    promotionMarkups?: PromotionModifierMarkupListRelationFilter
  }, "id">

  export type ModifierOrderByWithAggregationInput = {
    id?: SortOrder
    modifierCategoryId?: SortOrder
    companyId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    basePrice?: SortOrder
    pricing?: SortOrder
    cost?: SortOrder
    status?: SortOrder
    displayNumber?: SortOrder
    isDefault?: SortOrder
    image?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: ModifierCountOrderByAggregateInput
    _avg?: ModifierAvgOrderByAggregateInput
    _max?: ModifierMaxOrderByAggregateInput
    _min?: ModifierMinOrderByAggregateInput
    _sum?: ModifierSumOrderByAggregateInput
  }

  export type ModifierScalarWhereWithAggregatesInput = {
    AND?: ModifierScalarWhereWithAggregatesInput | ModifierScalarWhereWithAggregatesInput[]
    OR?: ModifierScalarWhereWithAggregatesInput[]
    NOT?: ModifierScalarWhereWithAggregatesInput | ModifierScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Modifier"> | string
    modifierCategoryId?: StringWithAggregatesFilter<"Modifier"> | string
    companyId?: StringWithAggregatesFilter<"Modifier"> | string
    name?: JsonWithAggregatesFilter<"Modifier">
    description?: JsonNullableWithAggregatesFilter<"Modifier">
    basePrice?: DecimalWithAggregatesFilter<"Modifier"> | Decimal | DecimalJsLike | number | string
    pricing?: JsonWithAggregatesFilter<"Modifier">
    cost?: DecimalWithAggregatesFilter<"Modifier"> | Decimal | DecimalJsLike | number | string
    status?: IntWithAggregatesFilter<"Modifier"> | number
    displayNumber?: IntWithAggregatesFilter<"Modifier"> | number
    isDefault?: BoolWithAggregatesFilter<"Modifier"> | boolean
    image?: StringNullableWithAggregatesFilter<"Modifier"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Modifier"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Modifier"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Modifier"> | Date | string | null
  }

  export type ProductModifierCategoryWhereInput = {
    AND?: ProductModifierCategoryWhereInput | ProductModifierCategoryWhereInput[]
    OR?: ProductModifierCategoryWhereInput[]
    NOT?: ProductModifierCategoryWhereInput | ProductModifierCategoryWhereInput[]
    id?: StringFilter<"ProductModifierCategory"> | string
    productId?: StringFilter<"ProductModifierCategory"> | string
    modifierCategoryId?: StringFilter<"ProductModifierCategory"> | string
    minQuantity?: IntFilter<"ProductModifierCategory"> | number
    maxQuantity?: IntFilter<"ProductModifierCategory"> | number
    priceOverride?: DecimalNullableFilter<"ProductModifierCategory"> | Decimal | DecimalJsLike | number | string | null
    isRequired?: BoolFilter<"ProductModifierCategory"> | boolean
    displayOrder?: IntFilter<"ProductModifierCategory"> | number
    createdAt?: DateTimeFilter<"ProductModifierCategory"> | Date | string
    modifierCategory?: XOR<ModifierCategoryRelationFilter, ModifierCategoryWhereInput>
    product?: XOR<MenuProductRelationFilter, MenuProductWhereInput>
  }

  export type ProductModifierCategoryOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    modifierCategoryId?: SortOrder
    minQuantity?: SortOrder
    maxQuantity?: SortOrder
    priceOverride?: SortOrderInput | SortOrder
    isRequired?: SortOrder
    displayOrder?: SortOrder
    createdAt?: SortOrder
    modifierCategory?: ModifierCategoryOrderByWithRelationInput
    product?: MenuProductOrderByWithRelationInput
  }

  export type ProductModifierCategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductModifierCategoryWhereInput | ProductModifierCategoryWhereInput[]
    OR?: ProductModifierCategoryWhereInput[]
    NOT?: ProductModifierCategoryWhereInput | ProductModifierCategoryWhereInput[]
    productId?: StringFilter<"ProductModifierCategory"> | string
    modifierCategoryId?: StringFilter<"ProductModifierCategory"> | string
    minQuantity?: IntFilter<"ProductModifierCategory"> | number
    maxQuantity?: IntFilter<"ProductModifierCategory"> | number
    priceOverride?: DecimalNullableFilter<"ProductModifierCategory"> | Decimal | DecimalJsLike | number | string | null
    isRequired?: BoolFilter<"ProductModifierCategory"> | boolean
    displayOrder?: IntFilter<"ProductModifierCategory"> | number
    createdAt?: DateTimeFilter<"ProductModifierCategory"> | Date | string
    modifierCategory?: XOR<ModifierCategoryRelationFilter, ModifierCategoryWhereInput>
    product?: XOR<MenuProductRelationFilter, MenuProductWhereInput>
  }, "id">

  export type ProductModifierCategoryOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    modifierCategoryId?: SortOrder
    minQuantity?: SortOrder
    maxQuantity?: SortOrder
    priceOverride?: SortOrderInput | SortOrder
    isRequired?: SortOrder
    displayOrder?: SortOrder
    createdAt?: SortOrder
    _count?: ProductModifierCategoryCountOrderByAggregateInput
    _avg?: ProductModifierCategoryAvgOrderByAggregateInput
    _max?: ProductModifierCategoryMaxOrderByAggregateInput
    _min?: ProductModifierCategoryMinOrderByAggregateInput
    _sum?: ProductModifierCategorySumOrderByAggregateInput
  }

  export type ProductModifierCategoryScalarWhereWithAggregatesInput = {
    AND?: ProductModifierCategoryScalarWhereWithAggregatesInput | ProductModifierCategoryScalarWhereWithAggregatesInput[]
    OR?: ProductModifierCategoryScalarWhereWithAggregatesInput[]
    NOT?: ProductModifierCategoryScalarWhereWithAggregatesInput | ProductModifierCategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductModifierCategory"> | string
    productId?: StringWithAggregatesFilter<"ProductModifierCategory"> | string
    modifierCategoryId?: StringWithAggregatesFilter<"ProductModifierCategory"> | string
    minQuantity?: IntWithAggregatesFilter<"ProductModifierCategory"> | number
    maxQuantity?: IntWithAggregatesFilter<"ProductModifierCategory"> | number
    priceOverride?: DecimalNullableWithAggregatesFilter<"ProductModifierCategory"> | Decimal | DecimalJsLike | number | string | null
    isRequired?: BoolWithAggregatesFilter<"ProductModifierCategory"> | boolean
    displayOrder?: IntWithAggregatesFilter<"ProductModifierCategory"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ProductModifierCategory"> | Date | string
  }

  export type PromotionWhereInput = {
    AND?: PromotionWhereInput | PromotionWhereInput[]
    OR?: PromotionWhereInput[]
    NOT?: PromotionWhereInput | PromotionWhereInput[]
    id?: StringFilter<"Promotion"> | string
    companyId?: StringFilter<"Promotion"> | string
    name?: StringFilter<"Promotion"> | string
    description?: StringNullableFilter<"Promotion"> | string | null
    promotionType?: StringFilter<"Promotion"> | string
    startDate?: DateTimeFilter<"Promotion"> | Date | string
    endDate?: DateTimeFilter<"Promotion"> | Date | string
    isActive?: BoolFilter<"Promotion"> | boolean
    autoRevert?: BoolFilter<"Promotion"> | boolean
    platforms?: JsonFilter<"Promotion">
    minProfitMargin?: DecimalFilter<"Promotion"> | Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: JsonNullableFilter<"Promotion">
    createdAt?: DateTimeFilter<"Promotion"> | Date | string
    updatedAt?: DateTimeFilter<"Promotion"> | Date | string
    createdBy?: StringNullableFilter<"Promotion"> | string | null
    priceHistories?: PriceHistoryListRelationFilter
    modifierMarkups?: PromotionModifierMarkupListRelationFilter
    promotionProducts?: PromotionProductListRelationFilter
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }

  export type PromotionOrderByWithRelationInput = {
    id?: SortOrder
    companyId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    promotionType?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    isActive?: SortOrder
    autoRevert?: SortOrder
    platforms?: SortOrder
    minProfitMargin?: SortOrder
    originalPricingSnapshot?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    priceHistories?: PriceHistoryOrderByRelationAggregateInput
    modifierMarkups?: PromotionModifierMarkupOrderByRelationAggregateInput
    promotionProducts?: PromotionProductOrderByRelationAggregateInput
    company?: CompanyOrderByWithRelationInput
  }

  export type PromotionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PromotionWhereInput | PromotionWhereInput[]
    OR?: PromotionWhereInput[]
    NOT?: PromotionWhereInput | PromotionWhereInput[]
    companyId?: StringFilter<"Promotion"> | string
    name?: StringFilter<"Promotion"> | string
    description?: StringNullableFilter<"Promotion"> | string | null
    promotionType?: StringFilter<"Promotion"> | string
    startDate?: DateTimeFilter<"Promotion"> | Date | string
    endDate?: DateTimeFilter<"Promotion"> | Date | string
    isActive?: BoolFilter<"Promotion"> | boolean
    autoRevert?: BoolFilter<"Promotion"> | boolean
    platforms?: JsonFilter<"Promotion">
    minProfitMargin?: DecimalFilter<"Promotion"> | Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: JsonNullableFilter<"Promotion">
    createdAt?: DateTimeFilter<"Promotion"> | Date | string
    updatedAt?: DateTimeFilter<"Promotion"> | Date | string
    createdBy?: StringNullableFilter<"Promotion"> | string | null
    priceHistories?: PriceHistoryListRelationFilter
    modifierMarkups?: PromotionModifierMarkupListRelationFilter
    promotionProducts?: PromotionProductListRelationFilter
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }, "id">

  export type PromotionOrderByWithAggregationInput = {
    id?: SortOrder
    companyId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    promotionType?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    isActive?: SortOrder
    autoRevert?: SortOrder
    platforms?: SortOrder
    minProfitMargin?: SortOrder
    originalPricingSnapshot?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    _count?: PromotionCountOrderByAggregateInput
    _avg?: PromotionAvgOrderByAggregateInput
    _max?: PromotionMaxOrderByAggregateInput
    _min?: PromotionMinOrderByAggregateInput
    _sum?: PromotionSumOrderByAggregateInput
  }

  export type PromotionScalarWhereWithAggregatesInput = {
    AND?: PromotionScalarWhereWithAggregatesInput | PromotionScalarWhereWithAggregatesInput[]
    OR?: PromotionScalarWhereWithAggregatesInput[]
    NOT?: PromotionScalarWhereWithAggregatesInput | PromotionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Promotion"> | string
    companyId?: StringWithAggregatesFilter<"Promotion"> | string
    name?: StringWithAggregatesFilter<"Promotion"> | string
    description?: StringNullableWithAggregatesFilter<"Promotion"> | string | null
    promotionType?: StringWithAggregatesFilter<"Promotion"> | string
    startDate?: DateTimeWithAggregatesFilter<"Promotion"> | Date | string
    endDate?: DateTimeWithAggregatesFilter<"Promotion"> | Date | string
    isActive?: BoolWithAggregatesFilter<"Promotion"> | boolean
    autoRevert?: BoolWithAggregatesFilter<"Promotion"> | boolean
    platforms?: JsonWithAggregatesFilter<"Promotion">
    minProfitMargin?: DecimalWithAggregatesFilter<"Promotion"> | Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: JsonNullableWithAggregatesFilter<"Promotion">
    createdAt?: DateTimeWithAggregatesFilter<"Promotion"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Promotion"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"Promotion"> | string | null
  }

  export type PromotionProductWhereInput = {
    AND?: PromotionProductWhereInput | PromotionProductWhereInput[]
    OR?: PromotionProductWhereInput[]
    NOT?: PromotionProductWhereInput | PromotionProductWhereInput[]
    id?: StringFilter<"PromotionProduct"> | string
    promotionId?: StringFilter<"PromotionProduct"> | string
    productId?: StringFilter<"PromotionProduct"> | string
    baseDiscountType?: StringFilter<"PromotionProduct"> | string
    baseDiscountValue?: DecimalFilter<"PromotionProduct"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"PromotionProduct"> | Date | string
    product?: XOR<MenuProductRelationFilter, MenuProductWhereInput>
    promotion?: XOR<PromotionRelationFilter, PromotionWhereInput>
  }

  export type PromotionProductOrderByWithRelationInput = {
    id?: SortOrder
    promotionId?: SortOrder
    productId?: SortOrder
    baseDiscountType?: SortOrder
    baseDiscountValue?: SortOrder
    createdAt?: SortOrder
    product?: MenuProductOrderByWithRelationInput
    promotion?: PromotionOrderByWithRelationInput
  }

  export type PromotionProductWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PromotionProductWhereInput | PromotionProductWhereInput[]
    OR?: PromotionProductWhereInput[]
    NOT?: PromotionProductWhereInput | PromotionProductWhereInput[]
    promotionId?: StringFilter<"PromotionProduct"> | string
    productId?: StringFilter<"PromotionProduct"> | string
    baseDiscountType?: StringFilter<"PromotionProduct"> | string
    baseDiscountValue?: DecimalFilter<"PromotionProduct"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"PromotionProduct"> | Date | string
    product?: XOR<MenuProductRelationFilter, MenuProductWhereInput>
    promotion?: XOR<PromotionRelationFilter, PromotionWhereInput>
  }, "id">

  export type PromotionProductOrderByWithAggregationInput = {
    id?: SortOrder
    promotionId?: SortOrder
    productId?: SortOrder
    baseDiscountType?: SortOrder
    baseDiscountValue?: SortOrder
    createdAt?: SortOrder
    _count?: PromotionProductCountOrderByAggregateInput
    _avg?: PromotionProductAvgOrderByAggregateInput
    _max?: PromotionProductMaxOrderByAggregateInput
    _min?: PromotionProductMinOrderByAggregateInput
    _sum?: PromotionProductSumOrderByAggregateInput
  }

  export type PromotionProductScalarWhereWithAggregatesInput = {
    AND?: PromotionProductScalarWhereWithAggregatesInput | PromotionProductScalarWhereWithAggregatesInput[]
    OR?: PromotionProductScalarWhereWithAggregatesInput[]
    NOT?: PromotionProductScalarWhereWithAggregatesInput | PromotionProductScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PromotionProduct"> | string
    promotionId?: StringWithAggregatesFilter<"PromotionProduct"> | string
    productId?: StringWithAggregatesFilter<"PromotionProduct"> | string
    baseDiscountType?: StringWithAggregatesFilter<"PromotionProduct"> | string
    baseDiscountValue?: DecimalWithAggregatesFilter<"PromotionProduct"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"PromotionProduct"> | Date | string
  }

  export type PromotionModifierMarkupWhereInput = {
    AND?: PromotionModifierMarkupWhereInput | PromotionModifierMarkupWhereInput[]
    OR?: PromotionModifierMarkupWhereInput[]
    NOT?: PromotionModifierMarkupWhereInput | PromotionModifierMarkupWhereInput[]
    id?: StringFilter<"PromotionModifierMarkup"> | string
    promotionId?: StringFilter<"PromotionModifierMarkup"> | string
    productId?: StringFilter<"PromotionModifierMarkup"> | string
    modifierId?: StringFilter<"PromotionModifierMarkup"> | string
    markupPercentage?: DecimalFilter<"PromotionModifierMarkup"> | Decimal | DecimalJsLike | number | string
    originalPrice?: DecimalFilter<"PromotionModifierMarkup"> | Decimal | DecimalJsLike | number | string
    markedUpPrice?: DecimalFilter<"PromotionModifierMarkup"> | Decimal | DecimalJsLike | number | string
    profitMargin?: DecimalNullableFilter<"PromotionModifierMarkup"> | Decimal | DecimalJsLike | number | string | null
    businessReason?: StringNullableFilter<"PromotionModifierMarkup"> | string | null
    createdAt?: DateTimeFilter<"PromotionModifierMarkup"> | Date | string
    modifier?: XOR<ModifierRelationFilter, ModifierWhereInput>
    product?: XOR<MenuProductRelationFilter, MenuProductWhereInput>
    promotion?: XOR<PromotionRelationFilter, PromotionWhereInput>
  }

  export type PromotionModifierMarkupOrderByWithRelationInput = {
    id?: SortOrder
    promotionId?: SortOrder
    productId?: SortOrder
    modifierId?: SortOrder
    markupPercentage?: SortOrder
    originalPrice?: SortOrder
    markedUpPrice?: SortOrder
    profitMargin?: SortOrderInput | SortOrder
    businessReason?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    modifier?: ModifierOrderByWithRelationInput
    product?: MenuProductOrderByWithRelationInput
    promotion?: PromotionOrderByWithRelationInput
  }

  export type PromotionModifierMarkupWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PromotionModifierMarkupWhereInput | PromotionModifierMarkupWhereInput[]
    OR?: PromotionModifierMarkupWhereInput[]
    NOT?: PromotionModifierMarkupWhereInput | PromotionModifierMarkupWhereInput[]
    promotionId?: StringFilter<"PromotionModifierMarkup"> | string
    productId?: StringFilter<"PromotionModifierMarkup"> | string
    modifierId?: StringFilter<"PromotionModifierMarkup"> | string
    markupPercentage?: DecimalFilter<"PromotionModifierMarkup"> | Decimal | DecimalJsLike | number | string
    originalPrice?: DecimalFilter<"PromotionModifierMarkup"> | Decimal | DecimalJsLike | number | string
    markedUpPrice?: DecimalFilter<"PromotionModifierMarkup"> | Decimal | DecimalJsLike | number | string
    profitMargin?: DecimalNullableFilter<"PromotionModifierMarkup"> | Decimal | DecimalJsLike | number | string | null
    businessReason?: StringNullableFilter<"PromotionModifierMarkup"> | string | null
    createdAt?: DateTimeFilter<"PromotionModifierMarkup"> | Date | string
    modifier?: XOR<ModifierRelationFilter, ModifierWhereInput>
    product?: XOR<MenuProductRelationFilter, MenuProductWhereInput>
    promotion?: XOR<PromotionRelationFilter, PromotionWhereInput>
  }, "id">

  export type PromotionModifierMarkupOrderByWithAggregationInput = {
    id?: SortOrder
    promotionId?: SortOrder
    productId?: SortOrder
    modifierId?: SortOrder
    markupPercentage?: SortOrder
    originalPrice?: SortOrder
    markedUpPrice?: SortOrder
    profitMargin?: SortOrderInput | SortOrder
    businessReason?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: PromotionModifierMarkupCountOrderByAggregateInput
    _avg?: PromotionModifierMarkupAvgOrderByAggregateInput
    _max?: PromotionModifierMarkupMaxOrderByAggregateInput
    _min?: PromotionModifierMarkupMinOrderByAggregateInput
    _sum?: PromotionModifierMarkupSumOrderByAggregateInput
  }

  export type PromotionModifierMarkupScalarWhereWithAggregatesInput = {
    AND?: PromotionModifierMarkupScalarWhereWithAggregatesInput | PromotionModifierMarkupScalarWhereWithAggregatesInput[]
    OR?: PromotionModifierMarkupScalarWhereWithAggregatesInput[]
    NOT?: PromotionModifierMarkupScalarWhereWithAggregatesInput | PromotionModifierMarkupScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PromotionModifierMarkup"> | string
    promotionId?: StringWithAggregatesFilter<"PromotionModifierMarkup"> | string
    productId?: StringWithAggregatesFilter<"PromotionModifierMarkup"> | string
    modifierId?: StringWithAggregatesFilter<"PromotionModifierMarkup"> | string
    markupPercentage?: DecimalWithAggregatesFilter<"PromotionModifierMarkup"> | Decimal | DecimalJsLike | number | string
    originalPrice?: DecimalWithAggregatesFilter<"PromotionModifierMarkup"> | Decimal | DecimalJsLike | number | string
    markedUpPrice?: DecimalWithAggregatesFilter<"PromotionModifierMarkup"> | Decimal | DecimalJsLike | number | string
    profitMargin?: DecimalNullableWithAggregatesFilter<"PromotionModifierMarkup"> | Decimal | DecimalJsLike | number | string | null
    businessReason?: StringNullableWithAggregatesFilter<"PromotionModifierMarkup"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"PromotionModifierMarkup"> | Date | string
  }

  export type PriceHistoryWhereInput = {
    AND?: PriceHistoryWhereInput | PriceHistoryWhereInput[]
    OR?: PriceHistoryWhereInput[]
    NOT?: PriceHistoryWhereInput | PriceHistoryWhereInput[]
    id?: StringFilter<"PriceHistory"> | string
    entityType?: StringFilter<"PriceHistory"> | string
    entityId?: StringFilter<"PriceHistory"> | string
    promotionId?: StringNullableFilter<"PriceHistory"> | string | null
    oldPrice?: DecimalNullableFilter<"PriceHistory"> | Decimal | DecimalJsLike | number | string | null
    newPrice?: DecimalNullableFilter<"PriceHistory"> | Decimal | DecimalJsLike | number | string | null
    changeReason?: StringNullableFilter<"PriceHistory"> | string | null
    platform?: StringNullableFilter<"PriceHistory"> | string | null
    createdAt?: DateTimeFilter<"PriceHistory"> | Date | string
    createdBy?: StringNullableFilter<"PriceHistory"> | string | null
    promotion?: XOR<PromotionNullableRelationFilter, PromotionWhereInput> | null
  }

  export type PriceHistoryOrderByWithRelationInput = {
    id?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    promotionId?: SortOrderInput | SortOrder
    oldPrice?: SortOrderInput | SortOrder
    newPrice?: SortOrderInput | SortOrder
    changeReason?: SortOrderInput | SortOrder
    platform?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    promotion?: PromotionOrderByWithRelationInput
  }

  export type PriceHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PriceHistoryWhereInput | PriceHistoryWhereInput[]
    OR?: PriceHistoryWhereInput[]
    NOT?: PriceHistoryWhereInput | PriceHistoryWhereInput[]
    entityType?: StringFilter<"PriceHistory"> | string
    entityId?: StringFilter<"PriceHistory"> | string
    promotionId?: StringNullableFilter<"PriceHistory"> | string | null
    oldPrice?: DecimalNullableFilter<"PriceHistory"> | Decimal | DecimalJsLike | number | string | null
    newPrice?: DecimalNullableFilter<"PriceHistory"> | Decimal | DecimalJsLike | number | string | null
    changeReason?: StringNullableFilter<"PriceHistory"> | string | null
    platform?: StringNullableFilter<"PriceHistory"> | string | null
    createdAt?: DateTimeFilter<"PriceHistory"> | Date | string
    createdBy?: StringNullableFilter<"PriceHistory"> | string | null
    promotion?: XOR<PromotionNullableRelationFilter, PromotionWhereInput> | null
  }, "id">

  export type PriceHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    promotionId?: SortOrderInput | SortOrder
    oldPrice?: SortOrderInput | SortOrder
    newPrice?: SortOrderInput | SortOrder
    changeReason?: SortOrderInput | SortOrder
    platform?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    _count?: PriceHistoryCountOrderByAggregateInput
    _avg?: PriceHistoryAvgOrderByAggregateInput
    _max?: PriceHistoryMaxOrderByAggregateInput
    _min?: PriceHistoryMinOrderByAggregateInput
    _sum?: PriceHistorySumOrderByAggregateInput
  }

  export type PriceHistoryScalarWhereWithAggregatesInput = {
    AND?: PriceHistoryScalarWhereWithAggregatesInput | PriceHistoryScalarWhereWithAggregatesInput[]
    OR?: PriceHistoryScalarWhereWithAggregatesInput[]
    NOT?: PriceHistoryScalarWhereWithAggregatesInput | PriceHistoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PriceHistory"> | string
    entityType?: StringWithAggregatesFilter<"PriceHistory"> | string
    entityId?: StringWithAggregatesFilter<"PriceHistory"> | string
    promotionId?: StringNullableWithAggregatesFilter<"PriceHistory"> | string | null
    oldPrice?: DecimalNullableWithAggregatesFilter<"PriceHistory"> | Decimal | DecimalJsLike | number | string | null
    newPrice?: DecimalNullableWithAggregatesFilter<"PriceHistory"> | Decimal | DecimalJsLike | number | string | null
    changeReason?: StringNullableWithAggregatesFilter<"PriceHistory"> | string | null
    platform?: StringNullableWithAggregatesFilter<"PriceHistory"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"PriceHistory"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"PriceHistory"> | string | null
  }

  export type CompanyCreateInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    businessType?: string | null
    timezone?: string
    defaultCurrency?: string
    status?: $Enums.CompanyStatus
    subscriptionPlan?: string | null
    subscriptionExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    branches?: BranchCreateNestedManyWithoutCompanyInput
    licenses?: LicenseCreateNestedManyWithoutCompanyInput
    menuCategories?: MenuCategoryCreateNestedManyWithoutCompanyInput
    menuProducts?: MenuProductCreateNestedManyWithoutCompanyInput
    modifierCategories?: ModifierCategoryCreateNestedManyWithoutCompanyInput
    modifiers?: ModifierCreateNestedManyWithoutCompanyInput
    promotions?: PromotionCreateNestedManyWithoutCompanyInput
    users?: UserCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    businessType?: string | null
    timezone?: string
    defaultCurrency?: string
    status?: $Enums.CompanyStatus
    subscriptionPlan?: string | null
    subscriptionExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    branches?: BranchUncheckedCreateNestedManyWithoutCompanyInput
    licenses?: LicenseUncheckedCreateNestedManyWithoutCompanyInput
    menuCategories?: MenuCategoryUncheckedCreateNestedManyWithoutCompanyInput
    menuProducts?: MenuProductUncheckedCreateNestedManyWithoutCompanyInput
    modifierCategories?: ModifierCategoryUncheckedCreateNestedManyWithoutCompanyInput
    modifiers?: ModifierUncheckedCreateNestedManyWithoutCompanyInput
    promotions?: PromotionUncheckedCreateNestedManyWithoutCompanyInput
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    defaultCurrency?: StringFieldUpdateOperationsInput | string
    status?: EnumCompanyStatusFieldUpdateOperationsInput | $Enums.CompanyStatus
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    branches?: BranchUpdateManyWithoutCompanyNestedInput
    licenses?: LicenseUpdateManyWithoutCompanyNestedInput
    menuCategories?: MenuCategoryUpdateManyWithoutCompanyNestedInput
    menuProducts?: MenuProductUpdateManyWithoutCompanyNestedInput
    modifierCategories?: ModifierCategoryUpdateManyWithoutCompanyNestedInput
    modifiers?: ModifierUpdateManyWithoutCompanyNestedInput
    promotions?: PromotionUpdateManyWithoutCompanyNestedInput
    users?: UserUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    defaultCurrency?: StringFieldUpdateOperationsInput | string
    status?: EnumCompanyStatusFieldUpdateOperationsInput | $Enums.CompanyStatus
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    branches?: BranchUncheckedUpdateManyWithoutCompanyNestedInput
    licenses?: LicenseUncheckedUpdateManyWithoutCompanyNestedInput
    menuCategories?: MenuCategoryUncheckedUpdateManyWithoutCompanyNestedInput
    menuProducts?: MenuProductUncheckedUpdateManyWithoutCompanyNestedInput
    modifierCategories?: ModifierCategoryUncheckedUpdateManyWithoutCompanyNestedInput
    modifiers?: ModifierUncheckedUpdateManyWithoutCompanyNestedInput
    promotions?: PromotionUncheckedUpdateManyWithoutCompanyNestedInput
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyCreateManyInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    businessType?: string | null
    timezone?: string
    defaultCurrency?: string
    status?: $Enums.CompanyStatus
    subscriptionPlan?: string | null
    subscriptionExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type CompanyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    defaultCurrency?: StringFieldUpdateOperationsInput | string
    status?: EnumCompanyStatusFieldUpdateOperationsInput | $Enums.CompanyStatus
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    defaultCurrency?: StringFieldUpdateOperationsInput | string
    status?: EnumCompanyStatusFieldUpdateOperationsInput | $Enums.CompanyStatus
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LicenseCreateInput = {
    id?: string
    status?: $Enums.LicenseStatus
    startDate?: Date | string
    expiresAt: Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    daysRemaining?: number
    lastChecked?: Date | string | null
    renewedAt?: Date | string | null
    totalDays?: number
    company: CompanyCreateNestedOneWithoutLicensesInput
  }

  export type LicenseUncheckedCreateInput = {
    id?: string
    companyId: string
    status?: $Enums.LicenseStatus
    startDate?: Date | string
    expiresAt: Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    daysRemaining?: number
    lastChecked?: Date | string | null
    renewedAt?: Date | string | null
    totalDays?: number
  }

  export type LicenseUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumLicenseStatusFieldUpdateOperationsInput | $Enums.LicenseStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    daysRemaining?: IntFieldUpdateOperationsInput | number
    lastChecked?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    renewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalDays?: IntFieldUpdateOperationsInput | number
    company?: CompanyUpdateOneRequiredWithoutLicensesNestedInput
  }

  export type LicenseUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    status?: EnumLicenseStatusFieldUpdateOperationsInput | $Enums.LicenseStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    daysRemaining?: IntFieldUpdateOperationsInput | number
    lastChecked?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    renewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalDays?: IntFieldUpdateOperationsInput | number
  }

  export type LicenseCreateManyInput = {
    id?: string
    companyId: string
    status?: $Enums.LicenseStatus
    startDate?: Date | string
    expiresAt: Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    daysRemaining?: number
    lastChecked?: Date | string | null
    renewedAt?: Date | string | null
    totalDays?: number
  }

  export type LicenseUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumLicenseStatusFieldUpdateOperationsInput | $Enums.LicenseStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    daysRemaining?: IntFieldUpdateOperationsInput | number
    lastChecked?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    renewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalDays?: IntFieldUpdateOperationsInput | number
  }

  export type LicenseUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    status?: EnumLicenseStatusFieldUpdateOperationsInput | $Enums.LicenseStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    daysRemaining?: IntFieldUpdateOperationsInput | number
    lastChecked?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    renewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalDays?: IntFieldUpdateOperationsInput | number
  }

  export type BranchCreateInput = {
    id?: string
    name: string
    phone?: string | null
    email?: string | null
    address?: string | null
    city?: string | null
    country?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    isDefault?: boolean
    isActive?: boolean
    allowsOnlineOrders?: boolean
    allowsDelivery?: boolean
    allowsPickup?: boolean
    timezone?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    nameAr: string
    openTime?: string | null
    closeTime?: string | null
    company: CompanyCreateNestedOneWithoutBranchesInput
    users?: UserCreateNestedManyWithoutBranchInput
  }

  export type BranchUncheckedCreateInput = {
    id?: string
    companyId: string
    name: string
    phone?: string | null
    email?: string | null
    address?: string | null
    city?: string | null
    country?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    isDefault?: boolean
    isActive?: boolean
    allowsOnlineOrders?: boolean
    allowsDelivery?: boolean
    allowsPickup?: boolean
    timezone?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    nameAr: string
    openTime?: string | null
    closeTime?: string | null
    users?: UserUncheckedCreateNestedManyWithoutBranchInput
  }

  export type BranchUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowsOnlineOrders?: BoolFieldUpdateOperationsInput | boolean
    allowsDelivery?: BoolFieldUpdateOperationsInput | boolean
    allowsPickup?: BoolFieldUpdateOperationsInput | boolean
    timezone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    nameAr?: StringFieldUpdateOperationsInput | string
    openTime?: NullableStringFieldUpdateOperationsInput | string | null
    closeTime?: NullableStringFieldUpdateOperationsInput | string | null
    company?: CompanyUpdateOneRequiredWithoutBranchesNestedInput
    users?: UserUpdateManyWithoutBranchNestedInput
  }

  export type BranchUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowsOnlineOrders?: BoolFieldUpdateOperationsInput | boolean
    allowsDelivery?: BoolFieldUpdateOperationsInput | boolean
    allowsPickup?: BoolFieldUpdateOperationsInput | boolean
    timezone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    nameAr?: StringFieldUpdateOperationsInput | string
    openTime?: NullableStringFieldUpdateOperationsInput | string | null
    closeTime?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutBranchNestedInput
  }

  export type BranchCreateManyInput = {
    id?: string
    companyId: string
    name: string
    phone?: string | null
    email?: string | null
    address?: string | null
    city?: string | null
    country?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    isDefault?: boolean
    isActive?: boolean
    allowsOnlineOrders?: boolean
    allowsDelivery?: boolean
    allowsPickup?: boolean
    timezone?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    nameAr: string
    openTime?: string | null
    closeTime?: string | null
  }

  export type BranchUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowsOnlineOrders?: BoolFieldUpdateOperationsInput | boolean
    allowsDelivery?: BoolFieldUpdateOperationsInput | boolean
    allowsPickup?: BoolFieldUpdateOperationsInput | boolean
    timezone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    nameAr?: StringFieldUpdateOperationsInput | string
    openTime?: NullableStringFieldUpdateOperationsInput | string | null
    closeTime?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BranchUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowsOnlineOrders?: BoolFieldUpdateOperationsInput | boolean
    allowsDelivery?: BoolFieldUpdateOperationsInput | boolean
    allowsPickup?: BoolFieldUpdateOperationsInput | boolean
    timezone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    nameAr?: StringFieldUpdateOperationsInput | string
    openTime?: NullableStringFieldUpdateOperationsInput | string | null
    closeTime?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    avatarUrl?: string | null
    passwordHash: string
    pin?: string | null
    emailVerifiedAt?: Date | string | null
    role: $Enums.UserRole
    status?: $Enums.UserStatus
    language?: string
    timezone?: string
    lastLoginAt?: Date | string | null
    lastLoginIp?: string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    mustChangePassword?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    firstName?: string | null
    lastName?: string | null
    username?: string | null
    activityLogs?: UserActivityLogCreateNestedManyWithoutUserInput
    sessions?: UserSessionCreateNestedManyWithoutUserInput
    branch?: BranchCreateNestedOneWithoutUsersInput
    company: CompanyCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    avatarUrl?: string | null
    passwordHash: string
    pin?: string | null
    emailVerifiedAt?: Date | string | null
    role: $Enums.UserRole
    status?: $Enums.UserStatus
    companyId: string
    branchId?: string | null
    language?: string
    timezone?: string
    lastLoginAt?: Date | string | null
    lastLoginIp?: string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    mustChangePassword?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    firstName?: string | null
    lastName?: string | null
    username?: string | null
    activityLogs?: UserActivityLogUncheckedCreateNestedManyWithoutUserInput
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    passwordHash?: StringFieldUpdateOperationsInput | string
    pin?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginIp?: NullableStringFieldUpdateOperationsInput | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    activityLogs?: UserActivityLogUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
    branch?: BranchUpdateOneWithoutUsersNestedInput
    company?: CompanyUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    passwordHash?: StringFieldUpdateOperationsInput | string
    pin?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    companyId?: StringFieldUpdateOperationsInput | string
    branchId?: NullableStringFieldUpdateOperationsInput | string | null
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginIp?: NullableStringFieldUpdateOperationsInput | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    activityLogs?: UserActivityLogUncheckedUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    avatarUrl?: string | null
    passwordHash: string
    pin?: string | null
    emailVerifiedAt?: Date | string | null
    role: $Enums.UserRole
    status?: $Enums.UserStatus
    companyId: string
    branchId?: string | null
    language?: string
    timezone?: string
    lastLoginAt?: Date | string | null
    lastLoginIp?: string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    mustChangePassword?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    firstName?: string | null
    lastName?: string | null
    username?: string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    passwordHash?: StringFieldUpdateOperationsInput | string
    pin?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginIp?: NullableStringFieldUpdateOperationsInput | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    passwordHash?: StringFieldUpdateOperationsInput | string
    pin?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    companyId?: StringFieldUpdateOperationsInput | string
    branchId?: NullableStringFieldUpdateOperationsInput | string | null
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginIp?: NullableStringFieldUpdateOperationsInput | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserSessionCreateInput = {
    id?: string
    tokenHash: string
    refreshTokenHash?: string | null
    expiresAt: Date | string
    refreshExpiresAt?: Date | string | null
    ipAddress?: string | null
    userAgent?: string | null
    deviceType?: string | null
    isActive?: boolean
    revokedAt?: Date | string | null
    createdAt?: Date | string
    lastUsedAt?: Date | string
    user: UserCreateNestedOneWithoutSessionsInput
  }

  export type UserSessionUncheckedCreateInput = {
    id?: string
    userId: string
    tokenHash: string
    refreshTokenHash?: string | null
    expiresAt: Date | string
    refreshExpiresAt?: Date | string | null
    ipAddress?: string | null
    userAgent?: string | null
    deviceType?: string | null
    isActive?: boolean
    revokedAt?: Date | string | null
    createdAt?: Date | string
    lastUsedAt?: Date | string
  }

  export type UserSessionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tokenHash?: StringFieldUpdateOperationsInput | string
    refreshTokenHash?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refreshExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    deviceType?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type UserSessionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    tokenHash?: StringFieldUpdateOperationsInput | string
    refreshTokenHash?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refreshExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    deviceType?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionCreateManyInput = {
    id?: string
    userId: string
    tokenHash: string
    refreshTokenHash?: string | null
    expiresAt: Date | string
    refreshExpiresAt?: Date | string | null
    ipAddress?: string | null
    userAgent?: string | null
    deviceType?: string | null
    isActive?: boolean
    revokedAt?: Date | string | null
    createdAt?: Date | string
    lastUsedAt?: Date | string
  }

  export type UserSessionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    tokenHash?: StringFieldUpdateOperationsInput | string
    refreshTokenHash?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refreshExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    deviceType?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    tokenHash?: StringFieldUpdateOperationsInput | string
    refreshTokenHash?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refreshExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    deviceType?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserActivityLogCreateInput = {
    id?: string
    action: string
    resourceType?: string | null
    resourceId?: string | null
    description?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    success?: boolean
    errorMessage?: string | null
    timestamp?: Date | string
    user: UserCreateNestedOneWithoutActivityLogsInput
  }

  export type UserActivityLogUncheckedCreateInput = {
    id?: string
    userId: string
    action: string
    resourceType?: string | null
    resourceId?: string | null
    description?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    success?: boolean
    errorMessage?: string | null
    timestamp?: Date | string
  }

  export type UserActivityLogUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    resourceType?: NullableStringFieldUpdateOperationsInput | string | null
    resourceId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    success?: BoolFieldUpdateOperationsInput | boolean
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutActivityLogsNestedInput
  }

  export type UserActivityLogUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    resourceType?: NullableStringFieldUpdateOperationsInput | string | null
    resourceId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    success?: BoolFieldUpdateOperationsInput | boolean
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserActivityLogCreateManyInput = {
    id?: string
    userId: string
    action: string
    resourceType?: string | null
    resourceId?: string | null
    description?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    success?: boolean
    errorMessage?: string | null
    timestamp?: Date | string
  }

  export type UserActivityLogUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    resourceType?: NullableStringFieldUpdateOperationsInput | string | null
    resourceId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    success?: BoolFieldUpdateOperationsInput | boolean
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserActivityLogUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    resourceType?: NullableStringFieldUpdateOperationsInput | string | null
    resourceId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    success?: BoolFieldUpdateOperationsInput | boolean
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MenuCategoryCreateInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    displayNumber?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    company: CompanyCreateNestedOneWithoutMenuCategoriesInput
    products?: MenuProductCreateNestedManyWithoutCategoryInput
  }

  export type MenuCategoryUncheckedCreateInput = {
    id?: string
    companyId: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    displayNumber?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    products?: MenuProductUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type MenuCategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    displayNumber?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    company?: CompanyUpdateOneRequiredWithoutMenuCategoriesNestedInput
    products?: MenuProductUpdateManyWithoutCategoryNestedInput
  }

  export type MenuCategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    displayNumber?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    products?: MenuProductUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type MenuCategoryCreateManyInput = {
    id?: string
    companyId: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    displayNumber?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type MenuCategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    displayNumber?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MenuCategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    displayNumber?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MenuProductCreateInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    images?: MenuProductCreateimagesInput | string[]
    slug?: string | null
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    priority?: number
    preparationTime?: number
    pricingMethod?: number
    sellingMethod?: number
    tags?: MenuProductCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    category?: MenuCategoryCreateNestedOneWithoutProductsInput
    company: CompanyCreateNestedOneWithoutMenuProductsInput
    modifierCategories?: ProductModifierCategoryCreateNestedManyWithoutProductInput
    promotionModifierMarkups?: PromotionModifierMarkupCreateNestedManyWithoutProductInput
    promotionProducts?: PromotionProductCreateNestedManyWithoutProductInput
    productImages?: ProductImageCreateNestedManyWithoutProductInput
  }

  export type MenuProductUncheckedCreateInput = {
    id?: string
    companyId: string
    categoryId?: string | null
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    images?: MenuProductCreateimagesInput | string[]
    slug?: string | null
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    priority?: number
    preparationTime?: number
    pricingMethod?: number
    sellingMethod?: number
    tags?: MenuProductCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    modifierCategories?: ProductModifierCategoryUncheckedCreateNestedManyWithoutProductInput
    promotionModifierMarkups?: PromotionModifierMarkupUncheckedCreateNestedManyWithoutProductInput
    promotionProducts?: PromotionProductUncheckedCreateNestedManyWithoutProductInput
    productImages?: ProductImageUncheckedCreateNestedManyWithoutProductInput
  }

  export type MenuProductUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MenuProductUpdateimagesInput | string[]
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    priority?: IntFieldUpdateOperationsInput | number
    preparationTime?: IntFieldUpdateOperationsInput | number
    pricingMethod?: IntFieldUpdateOperationsInput | number
    sellingMethod?: IntFieldUpdateOperationsInput | number
    tags?: MenuProductUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    category?: MenuCategoryUpdateOneWithoutProductsNestedInput
    company?: CompanyUpdateOneRequiredWithoutMenuProductsNestedInput
    modifierCategories?: ProductModifierCategoryUpdateManyWithoutProductNestedInput
    promotionModifierMarkups?: PromotionModifierMarkupUpdateManyWithoutProductNestedInput
    promotionProducts?: PromotionProductUpdateManyWithoutProductNestedInput
    productImages?: ProductImageUpdateManyWithoutProductNestedInput
  }

  export type MenuProductUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MenuProductUpdateimagesInput | string[]
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    priority?: IntFieldUpdateOperationsInput | number
    preparationTime?: IntFieldUpdateOperationsInput | number
    pricingMethod?: IntFieldUpdateOperationsInput | number
    sellingMethod?: IntFieldUpdateOperationsInput | number
    tags?: MenuProductUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    modifierCategories?: ProductModifierCategoryUncheckedUpdateManyWithoutProductNestedInput
    promotionModifierMarkups?: PromotionModifierMarkupUncheckedUpdateManyWithoutProductNestedInput
    promotionProducts?: PromotionProductUncheckedUpdateManyWithoutProductNestedInput
    productImages?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
  }

  export type MenuProductCreateManyInput = {
    id?: string
    companyId: string
    categoryId?: string | null
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    images?: MenuProductCreateimagesInput | string[]
    slug?: string | null
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    priority?: number
    preparationTime?: number
    pricingMethod?: number
    sellingMethod?: number
    tags?: MenuProductCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type MenuProductUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MenuProductUpdateimagesInput | string[]
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    priority?: IntFieldUpdateOperationsInput | number
    preparationTime?: IntFieldUpdateOperationsInput | number
    pricingMethod?: IntFieldUpdateOperationsInput | number
    sellingMethod?: IntFieldUpdateOperationsInput | number
    tags?: MenuProductUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MenuProductUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MenuProductUpdateimagesInput | string[]
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    priority?: IntFieldUpdateOperationsInput | number
    preparationTime?: IntFieldUpdateOperationsInput | number
    pricingMethod?: IntFieldUpdateOperationsInput | number
    sellingMethod?: IntFieldUpdateOperationsInput | number
    tags?: MenuProductUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductImageCreateInput = {
    id?: string
    filename: string
    originalName: string
    url: string
    size: number
    width: number
    height: number
    mimeType: string
    createdAt?: Date | string
    updatedAt?: Date | string
    product?: MenuProductCreateNestedOneWithoutProductImagesInput
  }

  export type ProductImageUncheckedCreateInput = {
    id?: string
    productId?: string | null
    filename: string
    originalName: string
    url: string
    size: number
    width: number
    height: number
    mimeType: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductImageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    originalName?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    size?: IntFieldUpdateOperationsInput | number
    width?: IntFieldUpdateOperationsInput | number
    height?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: MenuProductUpdateOneWithoutProductImagesNestedInput
  }

  export type ProductImageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: StringFieldUpdateOperationsInput | string
    originalName?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    size?: IntFieldUpdateOperationsInput | number
    width?: IntFieldUpdateOperationsInput | number
    height?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductImageCreateManyInput = {
    id?: string
    productId?: string | null
    filename: string
    originalName: string
    url: string
    size: number
    width: number
    height: number
    mimeType: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductImageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    originalName?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    size?: IntFieldUpdateOperationsInput | number
    width?: IntFieldUpdateOperationsInput | number
    height?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductImageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    filename?: StringFieldUpdateOperationsInput | string
    originalName?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    size?: IntFieldUpdateOperationsInput | number
    width?: IntFieldUpdateOperationsInput | number
    height?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ModifierCategoryCreateInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: number
    image?: string | null
    selectionType?: $Enums.ModifierSelectionType
    isRequired?: boolean
    minSelections?: number
    maxSelections?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    company: CompanyCreateNestedOneWithoutModifierCategoriesInput
    modifiers?: ModifierCreateNestedManyWithoutModifierCategoryInput
    productCategories?: ProductModifierCategoryCreateNestedManyWithoutModifierCategoryInput
  }

  export type ModifierCategoryUncheckedCreateInput = {
    id?: string
    companyId: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: number
    image?: string | null
    selectionType?: $Enums.ModifierSelectionType
    isRequired?: boolean
    minSelections?: number
    maxSelections?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    modifiers?: ModifierUncheckedCreateNestedManyWithoutModifierCategoryInput
    productCategories?: ProductModifierCategoryUncheckedCreateNestedManyWithoutModifierCategoryInput
  }

  export type ModifierCategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: IntFieldUpdateOperationsInput | number
    image?: NullableStringFieldUpdateOperationsInput | string | null
    selectionType?: EnumModifierSelectionTypeFieldUpdateOperationsInput | $Enums.ModifierSelectionType
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    minSelections?: IntFieldUpdateOperationsInput | number
    maxSelections?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutModifierCategoriesNestedInput
    modifiers?: ModifierUpdateManyWithoutModifierCategoryNestedInput
    productCategories?: ProductModifierCategoryUpdateManyWithoutModifierCategoryNestedInput
  }

  export type ModifierCategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: IntFieldUpdateOperationsInput | number
    image?: NullableStringFieldUpdateOperationsInput | string | null
    selectionType?: EnumModifierSelectionTypeFieldUpdateOperationsInput | $Enums.ModifierSelectionType
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    minSelections?: IntFieldUpdateOperationsInput | number
    maxSelections?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiers?: ModifierUncheckedUpdateManyWithoutModifierCategoryNestedInput
    productCategories?: ProductModifierCategoryUncheckedUpdateManyWithoutModifierCategoryNestedInput
  }

  export type ModifierCategoryCreateManyInput = {
    id?: string
    companyId: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: number
    image?: string | null
    selectionType?: $Enums.ModifierSelectionType
    isRequired?: boolean
    minSelections?: number
    maxSelections?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ModifierCategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: IntFieldUpdateOperationsInput | number
    image?: NullableStringFieldUpdateOperationsInput | string | null
    selectionType?: EnumModifierSelectionTypeFieldUpdateOperationsInput | $Enums.ModifierSelectionType
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    minSelections?: IntFieldUpdateOperationsInput | number
    maxSelections?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ModifierCategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: IntFieldUpdateOperationsInput | number
    image?: NullableStringFieldUpdateOperationsInput | string | null
    selectionType?: EnumModifierSelectionTypeFieldUpdateOperationsInput | $Enums.ModifierSelectionType
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    minSelections?: IntFieldUpdateOperationsInput | number
    maxSelections?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ModifierCreateInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    displayNumber?: number
    isDefault?: boolean
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    company: CompanyCreateNestedOneWithoutModifiersInput
    modifierCategory: ModifierCategoryCreateNestedOneWithoutModifiersInput
    promotionMarkups?: PromotionModifierMarkupCreateNestedManyWithoutModifierInput
  }

  export type ModifierUncheckedCreateInput = {
    id?: string
    modifierCategoryId: string
    companyId: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    displayNumber?: number
    isDefault?: boolean
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    promotionMarkups?: PromotionModifierMarkupUncheckedCreateNestedManyWithoutModifierInput
  }

  export type ModifierUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    displayNumber?: IntFieldUpdateOperationsInput | number
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutModifiersNestedInput
    modifierCategory?: ModifierCategoryUpdateOneRequiredWithoutModifiersNestedInput
    promotionMarkups?: PromotionModifierMarkupUpdateManyWithoutModifierNestedInput
  }

  export type ModifierUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    modifierCategoryId?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    displayNumber?: IntFieldUpdateOperationsInput | number
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promotionMarkups?: PromotionModifierMarkupUncheckedUpdateManyWithoutModifierNestedInput
  }

  export type ModifierCreateManyInput = {
    id?: string
    modifierCategoryId: string
    companyId: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    displayNumber?: number
    isDefault?: boolean
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ModifierUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    displayNumber?: IntFieldUpdateOperationsInput | number
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ModifierUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    modifierCategoryId?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    displayNumber?: IntFieldUpdateOperationsInput | number
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProductModifierCategoryCreateInput = {
    id?: string
    minQuantity?: number
    maxQuantity?: number
    priceOverride?: Decimal | DecimalJsLike | number | string | null
    isRequired?: boolean
    displayOrder?: number
    createdAt?: Date | string
    modifierCategory: ModifierCategoryCreateNestedOneWithoutProductCategoriesInput
    product: MenuProductCreateNestedOneWithoutModifierCategoriesInput
  }

  export type ProductModifierCategoryUncheckedCreateInput = {
    id?: string
    productId: string
    modifierCategoryId: string
    minQuantity?: number
    maxQuantity?: number
    priceOverride?: Decimal | DecimalJsLike | number | string | null
    isRequired?: boolean
    displayOrder?: number
    createdAt?: Date | string
  }

  export type ProductModifierCategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    minQuantity?: IntFieldUpdateOperationsInput | number
    maxQuantity?: IntFieldUpdateOperationsInput | number
    priceOverride?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modifierCategory?: ModifierCategoryUpdateOneRequiredWithoutProductCategoriesNestedInput
    product?: MenuProductUpdateOneRequiredWithoutModifierCategoriesNestedInput
  }

  export type ProductModifierCategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    modifierCategoryId?: StringFieldUpdateOperationsInput | string
    minQuantity?: IntFieldUpdateOperationsInput | number
    maxQuantity?: IntFieldUpdateOperationsInput | number
    priceOverride?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductModifierCategoryCreateManyInput = {
    id?: string
    productId: string
    modifierCategoryId: string
    minQuantity?: number
    maxQuantity?: number
    priceOverride?: Decimal | DecimalJsLike | number | string | null
    isRequired?: boolean
    displayOrder?: number
    createdAt?: Date | string
  }

  export type ProductModifierCategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    minQuantity?: IntFieldUpdateOperationsInput | number
    maxQuantity?: IntFieldUpdateOperationsInput | number
    priceOverride?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductModifierCategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    modifierCategoryId?: StringFieldUpdateOperationsInput | string
    minQuantity?: IntFieldUpdateOperationsInput | number
    maxQuantity?: IntFieldUpdateOperationsInput | number
    priceOverride?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PromotionCreateInput = {
    id?: string
    name: string
    description?: string | null
    promotionType?: string
    startDate: Date | string
    endDate: Date | string
    isActive?: boolean
    autoRevert?: boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    priceHistories?: PriceHistoryCreateNestedManyWithoutPromotionInput
    modifierMarkups?: PromotionModifierMarkupCreateNestedManyWithoutPromotionInput
    promotionProducts?: PromotionProductCreateNestedManyWithoutPromotionInput
    company: CompanyCreateNestedOneWithoutPromotionsInput
  }

  export type PromotionUncheckedCreateInput = {
    id?: string
    companyId: string
    name: string
    description?: string | null
    promotionType?: string
    startDate: Date | string
    endDate: Date | string
    isActive?: boolean
    autoRevert?: boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    priceHistories?: PriceHistoryUncheckedCreateNestedManyWithoutPromotionInput
    modifierMarkups?: PromotionModifierMarkupUncheckedCreateNestedManyWithoutPromotionInput
    promotionProducts?: PromotionProductUncheckedCreateNestedManyWithoutPromotionInput
  }

  export type PromotionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    autoRevert?: BoolFieldUpdateOperationsInput | boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    priceHistories?: PriceHistoryUpdateManyWithoutPromotionNestedInput
    modifierMarkups?: PromotionModifierMarkupUpdateManyWithoutPromotionNestedInput
    promotionProducts?: PromotionProductUpdateManyWithoutPromotionNestedInput
    company?: CompanyUpdateOneRequiredWithoutPromotionsNestedInput
  }

  export type PromotionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    autoRevert?: BoolFieldUpdateOperationsInput | boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    priceHistories?: PriceHistoryUncheckedUpdateManyWithoutPromotionNestedInput
    modifierMarkups?: PromotionModifierMarkupUncheckedUpdateManyWithoutPromotionNestedInput
    promotionProducts?: PromotionProductUncheckedUpdateManyWithoutPromotionNestedInput
  }

  export type PromotionCreateManyInput = {
    id?: string
    companyId: string
    name: string
    description?: string | null
    promotionType?: string
    startDate: Date | string
    endDate: Date | string
    isActive?: boolean
    autoRevert?: boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type PromotionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    autoRevert?: BoolFieldUpdateOperationsInput | boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PromotionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    autoRevert?: BoolFieldUpdateOperationsInput | boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PromotionProductCreateInput = {
    id?: string
    baseDiscountType?: string
    baseDiscountValue: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    product: MenuProductCreateNestedOneWithoutPromotionProductsInput
    promotion: PromotionCreateNestedOneWithoutPromotionProductsInput
  }

  export type PromotionProductUncheckedCreateInput = {
    id?: string
    promotionId: string
    productId: string
    baseDiscountType?: string
    baseDiscountValue: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
  }

  export type PromotionProductUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    baseDiscountType?: StringFieldUpdateOperationsInput | string
    baseDiscountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: MenuProductUpdateOneRequiredWithoutPromotionProductsNestedInput
    promotion?: PromotionUpdateOneRequiredWithoutPromotionProductsNestedInput
  }

  export type PromotionProductUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    promotionId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    baseDiscountType?: StringFieldUpdateOperationsInput | string
    baseDiscountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PromotionProductCreateManyInput = {
    id?: string
    promotionId: string
    productId: string
    baseDiscountType?: string
    baseDiscountValue: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
  }

  export type PromotionProductUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    baseDiscountType?: StringFieldUpdateOperationsInput | string
    baseDiscountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PromotionProductUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    promotionId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    baseDiscountType?: StringFieldUpdateOperationsInput | string
    baseDiscountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PromotionModifierMarkupCreateInput = {
    id?: string
    markupPercentage: Decimal | DecimalJsLike | number | string
    originalPrice: Decimal | DecimalJsLike | number | string
    markedUpPrice: Decimal | DecimalJsLike | number | string
    profitMargin?: Decimal | DecimalJsLike | number | string | null
    businessReason?: string | null
    createdAt?: Date | string
    modifier: ModifierCreateNestedOneWithoutPromotionMarkupsInput
    product: MenuProductCreateNestedOneWithoutPromotionModifierMarkupsInput
    promotion: PromotionCreateNestedOneWithoutModifierMarkupsInput
  }

  export type PromotionModifierMarkupUncheckedCreateInput = {
    id?: string
    promotionId: string
    productId: string
    modifierId: string
    markupPercentage: Decimal | DecimalJsLike | number | string
    originalPrice: Decimal | DecimalJsLike | number | string
    markedUpPrice: Decimal | DecimalJsLike | number | string
    profitMargin?: Decimal | DecimalJsLike | number | string | null
    businessReason?: string | null
    createdAt?: Date | string
  }

  export type PromotionModifierMarkupUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    markupPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markedUpPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitMargin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modifier?: ModifierUpdateOneRequiredWithoutPromotionMarkupsNestedInput
    product?: MenuProductUpdateOneRequiredWithoutPromotionModifierMarkupsNestedInput
    promotion?: PromotionUpdateOneRequiredWithoutModifierMarkupsNestedInput
  }

  export type PromotionModifierMarkupUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    promotionId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    modifierId?: StringFieldUpdateOperationsInput | string
    markupPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markedUpPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitMargin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PromotionModifierMarkupCreateManyInput = {
    id?: string
    promotionId: string
    productId: string
    modifierId: string
    markupPercentage: Decimal | DecimalJsLike | number | string
    originalPrice: Decimal | DecimalJsLike | number | string
    markedUpPrice: Decimal | DecimalJsLike | number | string
    profitMargin?: Decimal | DecimalJsLike | number | string | null
    businessReason?: string | null
    createdAt?: Date | string
  }

  export type PromotionModifierMarkupUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    markupPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markedUpPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitMargin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PromotionModifierMarkupUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    promotionId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    modifierId?: StringFieldUpdateOperationsInput | string
    markupPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markedUpPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitMargin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PriceHistoryCreateInput = {
    id?: string
    entityType: string
    entityId: string
    oldPrice?: Decimal | DecimalJsLike | number | string | null
    newPrice?: Decimal | DecimalJsLike | number | string | null
    changeReason?: string | null
    platform?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    promotion?: PromotionCreateNestedOneWithoutPriceHistoriesInput
  }

  export type PriceHistoryUncheckedCreateInput = {
    id?: string
    entityType: string
    entityId: string
    promotionId?: string | null
    oldPrice?: Decimal | DecimalJsLike | number | string | null
    newPrice?: Decimal | DecimalJsLike | number | string | null
    changeReason?: string | null
    platform?: string | null
    createdAt?: Date | string
    createdBy?: string | null
  }

  export type PriceHistoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    newPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    changeReason?: NullableStringFieldUpdateOperationsInput | string | null
    platform?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    promotion?: PromotionUpdateOneWithoutPriceHistoriesNestedInput
  }

  export type PriceHistoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    promotionId?: NullableStringFieldUpdateOperationsInput | string | null
    oldPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    newPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    changeReason?: NullableStringFieldUpdateOperationsInput | string | null
    platform?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PriceHistoryCreateManyInput = {
    id?: string
    entityType: string
    entityId: string
    promotionId?: string | null
    oldPrice?: Decimal | DecimalJsLike | number | string | null
    newPrice?: Decimal | DecimalJsLike | number | string | null
    changeReason?: string | null
    platform?: string | null
    createdAt?: Date | string
    createdBy?: string | null
  }

  export type PriceHistoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    newPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    changeReason?: NullableStringFieldUpdateOperationsInput | string | null
    platform?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PriceHistoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    promotionId?: NullableStringFieldUpdateOperationsInput | string | null
    oldPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    newPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    changeReason?: NullableStringFieldUpdateOperationsInput | string | null
    platform?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type EnumCompanyStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanyStatus | EnumCompanyStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CompanyStatus[] | ListEnumCompanyStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CompanyStatus[] | ListEnumCompanyStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCompanyStatusFilter<$PrismaModel> | $Enums.CompanyStatus
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type BranchListRelationFilter = {
    every?: BranchWhereInput
    some?: BranchWhereInput
    none?: BranchWhereInput
  }

  export type LicenseListRelationFilter = {
    every?: LicenseWhereInput
    some?: LicenseWhereInput
    none?: LicenseWhereInput
  }

  export type MenuCategoryListRelationFilter = {
    every?: MenuCategoryWhereInput
    some?: MenuCategoryWhereInput
    none?: MenuCategoryWhereInput
  }

  export type MenuProductListRelationFilter = {
    every?: MenuProductWhereInput
    some?: MenuProductWhereInput
    none?: MenuProductWhereInput
  }

  export type ModifierCategoryListRelationFilter = {
    every?: ModifierCategoryWhereInput
    some?: ModifierCategoryWhereInput
    none?: ModifierCategoryWhereInput
  }

  export type ModifierListRelationFilter = {
    every?: ModifierWhereInput
    some?: ModifierWhereInput
    none?: ModifierWhereInput
  }

  export type PromotionListRelationFilter = {
    every?: PromotionWhereInput
    some?: PromotionWhereInput
    none?: PromotionWhereInput
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type BranchOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type LicenseOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MenuCategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MenuProductOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ModifierCategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ModifierOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PromotionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CompanyCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    logo?: SortOrder
    businessType?: SortOrder
    timezone?: SortOrder
    defaultCurrency?: SortOrder
    status?: SortOrder
    subscriptionPlan?: SortOrder
    subscriptionExpiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type CompanyMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    logo?: SortOrder
    businessType?: SortOrder
    timezone?: SortOrder
    defaultCurrency?: SortOrder
    status?: SortOrder
    subscriptionPlan?: SortOrder
    subscriptionExpiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type CompanyMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    logo?: SortOrder
    businessType?: SortOrder
    timezone?: SortOrder
    defaultCurrency?: SortOrder
    status?: SortOrder
    subscriptionPlan?: SortOrder
    subscriptionExpiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type EnumCompanyStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanyStatus | EnumCompanyStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CompanyStatus[] | ListEnumCompanyStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CompanyStatus[] | ListEnumCompanyStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCompanyStatusWithAggregatesFilter<$PrismaModel> | $Enums.CompanyStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCompanyStatusFilter<$PrismaModel>
    _max?: NestedEnumCompanyStatusFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumLicenseStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.LicenseStatus | EnumLicenseStatusFieldRefInput<$PrismaModel>
    in?: $Enums.LicenseStatus[] | ListEnumLicenseStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.LicenseStatus[] | ListEnumLicenseStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumLicenseStatusFilter<$PrismaModel> | $Enums.LicenseStatus
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type CompanyRelationFilter = {
    is?: CompanyWhereInput
    isNot?: CompanyWhereInput
  }

  export type LicenseCountOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    status?: SortOrder
    startDate?: SortOrder
    expiresAt?: SortOrder
    features?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    daysRemaining?: SortOrder
    lastChecked?: SortOrder
    renewedAt?: SortOrder
    totalDays?: SortOrder
  }

  export type LicenseAvgOrderByAggregateInput = {
    daysRemaining?: SortOrder
    totalDays?: SortOrder
  }

  export type LicenseMaxOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    status?: SortOrder
    startDate?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    daysRemaining?: SortOrder
    lastChecked?: SortOrder
    renewedAt?: SortOrder
    totalDays?: SortOrder
  }

  export type LicenseMinOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    status?: SortOrder
    startDate?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    daysRemaining?: SortOrder
    lastChecked?: SortOrder
    renewedAt?: SortOrder
    totalDays?: SortOrder
  }

  export type LicenseSumOrderByAggregateInput = {
    daysRemaining?: SortOrder
    totalDays?: SortOrder
  }

  export type EnumLicenseStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LicenseStatus | EnumLicenseStatusFieldRefInput<$PrismaModel>
    in?: $Enums.LicenseStatus[] | ListEnumLicenseStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.LicenseStatus[] | ListEnumLicenseStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumLicenseStatusWithAggregatesFilter<$PrismaModel> | $Enums.LicenseStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLicenseStatusFilter<$PrismaModel>
    _max?: NestedEnumLicenseStatusFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type BranchCountOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    address?: SortOrder
    city?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    isDefault?: SortOrder
    isActive?: SortOrder
    allowsOnlineOrders?: SortOrder
    allowsDelivery?: SortOrder
    allowsPickup?: SortOrder
    timezone?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    nameAr?: SortOrder
    openTime?: SortOrder
    closeTime?: SortOrder
  }

  export type BranchAvgOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type BranchMaxOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    address?: SortOrder
    city?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    isDefault?: SortOrder
    isActive?: SortOrder
    allowsOnlineOrders?: SortOrder
    allowsDelivery?: SortOrder
    allowsPickup?: SortOrder
    timezone?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    nameAr?: SortOrder
    openTime?: SortOrder
    closeTime?: SortOrder
  }

  export type BranchMinOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    name?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    address?: SortOrder
    city?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    isDefault?: SortOrder
    isActive?: SortOrder
    allowsOnlineOrders?: SortOrder
    allowsDelivery?: SortOrder
    allowsPickup?: SortOrder
    timezone?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    nameAr?: SortOrder
    openTime?: SortOrder
    closeTime?: SortOrder
  }

  export type BranchSumOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type EnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type EnumUserStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusFilter<$PrismaModel> | $Enums.UserStatus
  }

  export type UserActivityLogListRelationFilter = {
    every?: UserActivityLogWhereInput
    some?: UserActivityLogWhereInput
    none?: UserActivityLogWhereInput
  }

  export type UserSessionListRelationFilter = {
    every?: UserSessionWhereInput
    some?: UserSessionWhereInput
    none?: UserSessionWhereInput
  }

  export type BranchNullableRelationFilter = {
    is?: BranchWhereInput | null
    isNot?: BranchWhereInput | null
  }

  export type UserActivityLogOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserSessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    avatarUrl?: SortOrder
    passwordHash?: SortOrder
    pin?: SortOrder
    emailVerifiedAt?: SortOrder
    role?: SortOrder
    status?: SortOrder
    companyId?: SortOrder
    branchId?: SortOrder
    language?: SortOrder
    timezone?: SortOrder
    lastLoginAt?: SortOrder
    lastLoginIp?: SortOrder
    failedLoginAttempts?: SortOrder
    lockedUntil?: SortOrder
    mustChangePassword?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    username?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    failedLoginAttempts?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    avatarUrl?: SortOrder
    passwordHash?: SortOrder
    pin?: SortOrder
    emailVerifiedAt?: SortOrder
    role?: SortOrder
    status?: SortOrder
    companyId?: SortOrder
    branchId?: SortOrder
    language?: SortOrder
    timezone?: SortOrder
    lastLoginAt?: SortOrder
    lastLoginIp?: SortOrder
    failedLoginAttempts?: SortOrder
    lockedUntil?: SortOrder
    mustChangePassword?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    username?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    avatarUrl?: SortOrder
    passwordHash?: SortOrder
    pin?: SortOrder
    emailVerifiedAt?: SortOrder
    role?: SortOrder
    status?: SortOrder
    companyId?: SortOrder
    branchId?: SortOrder
    language?: SortOrder
    timezone?: SortOrder
    lastLoginAt?: SortOrder
    lastLoginIp?: SortOrder
    failedLoginAttempts?: SortOrder
    lockedUntil?: SortOrder
    mustChangePassword?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    username?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    failedLoginAttempts?: SortOrder
  }

  export type EnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type EnumUserStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusWithAggregatesFilter<$PrismaModel> | $Enums.UserStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserStatusFilter<$PrismaModel>
    _max?: NestedEnumUserStatusFilter<$PrismaModel>
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type UserSessionCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    tokenHash?: SortOrder
    refreshTokenHash?: SortOrder
    expiresAt?: SortOrder
    refreshExpiresAt?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    deviceType?: SortOrder
    isActive?: SortOrder
    revokedAt?: SortOrder
    createdAt?: SortOrder
    lastUsedAt?: SortOrder
  }

  export type UserSessionMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    tokenHash?: SortOrder
    refreshTokenHash?: SortOrder
    expiresAt?: SortOrder
    refreshExpiresAt?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    deviceType?: SortOrder
    isActive?: SortOrder
    revokedAt?: SortOrder
    createdAt?: SortOrder
    lastUsedAt?: SortOrder
  }

  export type UserSessionMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    tokenHash?: SortOrder
    refreshTokenHash?: SortOrder
    expiresAt?: SortOrder
    refreshExpiresAt?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    deviceType?: SortOrder
    isActive?: SortOrder
    revokedAt?: SortOrder
    createdAt?: SortOrder
    lastUsedAt?: SortOrder
  }

  export type UserActivityLogCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    resourceType?: SortOrder
    resourceId?: SortOrder
    description?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    success?: SortOrder
    errorMessage?: SortOrder
    timestamp?: SortOrder
  }

  export type UserActivityLogMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    resourceType?: SortOrder
    resourceId?: SortOrder
    description?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    success?: SortOrder
    errorMessage?: SortOrder
    timestamp?: SortOrder
  }

  export type UserActivityLogMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    action?: SortOrder
    resourceType?: SortOrder
    resourceId?: SortOrder
    description?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    success?: SortOrder
    errorMessage?: SortOrder
    timestamp?: SortOrder
  }
  export type JsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type MenuCategoryCountOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    image?: SortOrder
    displayNumber?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type MenuCategoryAvgOrderByAggregateInput = {
    displayNumber?: SortOrder
  }

  export type MenuCategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    image?: SortOrder
    displayNumber?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type MenuCategoryMinOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    image?: SortOrder
    displayNumber?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type MenuCategorySumOrderByAggregateInput = {
    displayNumber?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type MenuCategoryNullableRelationFilter = {
    is?: MenuCategoryWhereInput | null
    isNot?: MenuCategoryWhereInput | null
  }

  export type ProductModifierCategoryListRelationFilter = {
    every?: ProductModifierCategoryWhereInput
    some?: ProductModifierCategoryWhereInput
    none?: ProductModifierCategoryWhereInput
  }

  export type PromotionModifierMarkupListRelationFilter = {
    every?: PromotionModifierMarkupWhereInput
    some?: PromotionModifierMarkupWhereInput
    none?: PromotionModifierMarkupWhereInput
  }

  export type PromotionProductListRelationFilter = {
    every?: PromotionProductWhereInput
    some?: PromotionProductWhereInput
    none?: PromotionProductWhereInput
  }

  export type ProductImageListRelationFilter = {
    every?: ProductImageWhereInput
    some?: ProductImageWhereInput
    none?: ProductImageWhereInput
  }

  export type ProductModifierCategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PromotionModifierMarkupOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PromotionProductOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductImageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MenuProductCountOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    image?: SortOrder
    images?: SortOrder
    slug?: SortOrder
    basePrice?: SortOrder
    pricing?: SortOrder
    cost?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    preparationTime?: SortOrder
    pricingMethod?: SortOrder
    sellingMethod?: SortOrder
    tags?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type MenuProductAvgOrderByAggregateInput = {
    basePrice?: SortOrder
    cost?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    preparationTime?: SortOrder
    pricingMethod?: SortOrder
    sellingMethod?: SortOrder
  }

  export type MenuProductMaxOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    categoryId?: SortOrder
    image?: SortOrder
    slug?: SortOrder
    basePrice?: SortOrder
    cost?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    preparationTime?: SortOrder
    pricingMethod?: SortOrder
    sellingMethod?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type MenuProductMinOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    categoryId?: SortOrder
    image?: SortOrder
    slug?: SortOrder
    basePrice?: SortOrder
    cost?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    preparationTime?: SortOrder
    pricingMethod?: SortOrder
    sellingMethod?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type MenuProductSumOrderByAggregateInput = {
    basePrice?: SortOrder
    cost?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    preparationTime?: SortOrder
    pricingMethod?: SortOrder
    sellingMethod?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type MenuProductNullableRelationFilter = {
    is?: MenuProductWhereInput | null
    isNot?: MenuProductWhereInput | null
  }

  export type ProductImageCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    url?: SortOrder
    size?: SortOrder
    width?: SortOrder
    height?: SortOrder
    mimeType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductImageAvgOrderByAggregateInput = {
    size?: SortOrder
    width?: SortOrder
    height?: SortOrder
  }

  export type ProductImageMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    url?: SortOrder
    size?: SortOrder
    width?: SortOrder
    height?: SortOrder
    mimeType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductImageMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    filename?: SortOrder
    originalName?: SortOrder
    url?: SortOrder
    size?: SortOrder
    width?: SortOrder
    height?: SortOrder
    mimeType?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductImageSumOrderByAggregateInput = {
    size?: SortOrder
    width?: SortOrder
    height?: SortOrder
  }

  export type EnumModifierSelectionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ModifierSelectionType | EnumModifierSelectionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ModifierSelectionType[] | ListEnumModifierSelectionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ModifierSelectionType[] | ListEnumModifierSelectionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumModifierSelectionTypeFilter<$PrismaModel> | $Enums.ModifierSelectionType
  }

  export type ModifierCategoryCountOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    displayNumber?: SortOrder
    image?: SortOrder
    selectionType?: SortOrder
    isRequired?: SortOrder
    minSelections?: SortOrder
    maxSelections?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ModifierCategoryAvgOrderByAggregateInput = {
    displayNumber?: SortOrder
    minSelections?: SortOrder
    maxSelections?: SortOrder
  }

  export type ModifierCategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    displayNumber?: SortOrder
    image?: SortOrder
    selectionType?: SortOrder
    isRequired?: SortOrder
    minSelections?: SortOrder
    maxSelections?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ModifierCategoryMinOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    displayNumber?: SortOrder
    image?: SortOrder
    selectionType?: SortOrder
    isRequired?: SortOrder
    minSelections?: SortOrder
    maxSelections?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ModifierCategorySumOrderByAggregateInput = {
    displayNumber?: SortOrder
    minSelections?: SortOrder
    maxSelections?: SortOrder
  }

  export type EnumModifierSelectionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ModifierSelectionType | EnumModifierSelectionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ModifierSelectionType[] | ListEnumModifierSelectionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ModifierSelectionType[] | ListEnumModifierSelectionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumModifierSelectionTypeWithAggregatesFilter<$PrismaModel> | $Enums.ModifierSelectionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumModifierSelectionTypeFilter<$PrismaModel>
    _max?: NestedEnumModifierSelectionTypeFilter<$PrismaModel>
  }

  export type ModifierCategoryRelationFilter = {
    is?: ModifierCategoryWhereInput
    isNot?: ModifierCategoryWhereInput
  }

  export type ModifierCountOrderByAggregateInput = {
    id?: SortOrder
    modifierCategoryId?: SortOrder
    companyId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    basePrice?: SortOrder
    pricing?: SortOrder
    cost?: SortOrder
    status?: SortOrder
    displayNumber?: SortOrder
    isDefault?: SortOrder
    image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ModifierAvgOrderByAggregateInput = {
    basePrice?: SortOrder
    cost?: SortOrder
    status?: SortOrder
    displayNumber?: SortOrder
  }

  export type ModifierMaxOrderByAggregateInput = {
    id?: SortOrder
    modifierCategoryId?: SortOrder
    companyId?: SortOrder
    basePrice?: SortOrder
    cost?: SortOrder
    status?: SortOrder
    displayNumber?: SortOrder
    isDefault?: SortOrder
    image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ModifierMinOrderByAggregateInput = {
    id?: SortOrder
    modifierCategoryId?: SortOrder
    companyId?: SortOrder
    basePrice?: SortOrder
    cost?: SortOrder
    status?: SortOrder
    displayNumber?: SortOrder
    isDefault?: SortOrder
    image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type ModifierSumOrderByAggregateInput = {
    basePrice?: SortOrder
    cost?: SortOrder
    status?: SortOrder
    displayNumber?: SortOrder
  }

  export type MenuProductRelationFilter = {
    is?: MenuProductWhereInput
    isNot?: MenuProductWhereInput
  }

  export type ProductModifierCategoryCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    modifierCategoryId?: SortOrder
    minQuantity?: SortOrder
    maxQuantity?: SortOrder
    priceOverride?: SortOrder
    isRequired?: SortOrder
    displayOrder?: SortOrder
    createdAt?: SortOrder
  }

  export type ProductModifierCategoryAvgOrderByAggregateInput = {
    minQuantity?: SortOrder
    maxQuantity?: SortOrder
    priceOverride?: SortOrder
    displayOrder?: SortOrder
  }

  export type ProductModifierCategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    modifierCategoryId?: SortOrder
    minQuantity?: SortOrder
    maxQuantity?: SortOrder
    priceOverride?: SortOrder
    isRequired?: SortOrder
    displayOrder?: SortOrder
    createdAt?: SortOrder
  }

  export type ProductModifierCategoryMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    modifierCategoryId?: SortOrder
    minQuantity?: SortOrder
    maxQuantity?: SortOrder
    priceOverride?: SortOrder
    isRequired?: SortOrder
    displayOrder?: SortOrder
    createdAt?: SortOrder
  }

  export type ProductModifierCategorySumOrderByAggregateInput = {
    minQuantity?: SortOrder
    maxQuantity?: SortOrder
    priceOverride?: SortOrder
    displayOrder?: SortOrder
  }

  export type PriceHistoryListRelationFilter = {
    every?: PriceHistoryWhereInput
    some?: PriceHistoryWhereInput
    none?: PriceHistoryWhereInput
  }

  export type PriceHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PromotionCountOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    promotionType?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    isActive?: SortOrder
    autoRevert?: SortOrder
    platforms?: SortOrder
    minProfitMargin?: SortOrder
    originalPricingSnapshot?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type PromotionAvgOrderByAggregateInput = {
    minProfitMargin?: SortOrder
  }

  export type PromotionMaxOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    promotionType?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    isActive?: SortOrder
    autoRevert?: SortOrder
    minProfitMargin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type PromotionMinOrderByAggregateInput = {
    id?: SortOrder
    companyId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    promotionType?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    isActive?: SortOrder
    autoRevert?: SortOrder
    minProfitMargin?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type PromotionSumOrderByAggregateInput = {
    minProfitMargin?: SortOrder
  }

  export type PromotionRelationFilter = {
    is?: PromotionWhereInput
    isNot?: PromotionWhereInput
  }

  export type PromotionProductCountOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    productId?: SortOrder
    baseDiscountType?: SortOrder
    baseDiscountValue?: SortOrder
    createdAt?: SortOrder
  }

  export type PromotionProductAvgOrderByAggregateInput = {
    baseDiscountValue?: SortOrder
  }

  export type PromotionProductMaxOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    productId?: SortOrder
    baseDiscountType?: SortOrder
    baseDiscountValue?: SortOrder
    createdAt?: SortOrder
  }

  export type PromotionProductMinOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    productId?: SortOrder
    baseDiscountType?: SortOrder
    baseDiscountValue?: SortOrder
    createdAt?: SortOrder
  }

  export type PromotionProductSumOrderByAggregateInput = {
    baseDiscountValue?: SortOrder
  }

  export type ModifierRelationFilter = {
    is?: ModifierWhereInput
    isNot?: ModifierWhereInput
  }

  export type PromotionModifierMarkupCountOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    productId?: SortOrder
    modifierId?: SortOrder
    markupPercentage?: SortOrder
    originalPrice?: SortOrder
    markedUpPrice?: SortOrder
    profitMargin?: SortOrder
    businessReason?: SortOrder
    createdAt?: SortOrder
  }

  export type PromotionModifierMarkupAvgOrderByAggregateInput = {
    markupPercentage?: SortOrder
    originalPrice?: SortOrder
    markedUpPrice?: SortOrder
    profitMargin?: SortOrder
  }

  export type PromotionModifierMarkupMaxOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    productId?: SortOrder
    modifierId?: SortOrder
    markupPercentage?: SortOrder
    originalPrice?: SortOrder
    markedUpPrice?: SortOrder
    profitMargin?: SortOrder
    businessReason?: SortOrder
    createdAt?: SortOrder
  }

  export type PromotionModifierMarkupMinOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    productId?: SortOrder
    modifierId?: SortOrder
    markupPercentage?: SortOrder
    originalPrice?: SortOrder
    markedUpPrice?: SortOrder
    profitMargin?: SortOrder
    businessReason?: SortOrder
    createdAt?: SortOrder
  }

  export type PromotionModifierMarkupSumOrderByAggregateInput = {
    markupPercentage?: SortOrder
    originalPrice?: SortOrder
    markedUpPrice?: SortOrder
    profitMargin?: SortOrder
  }

  export type PromotionNullableRelationFilter = {
    is?: PromotionWhereInput | null
    isNot?: PromotionWhereInput | null
  }

  export type PriceHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    promotionId?: SortOrder
    oldPrice?: SortOrder
    newPrice?: SortOrder
    changeReason?: SortOrder
    platform?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
  }

  export type PriceHistoryAvgOrderByAggregateInput = {
    oldPrice?: SortOrder
    newPrice?: SortOrder
  }

  export type PriceHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    promotionId?: SortOrder
    oldPrice?: SortOrder
    newPrice?: SortOrder
    changeReason?: SortOrder
    platform?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
  }

  export type PriceHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    entityType?: SortOrder
    entityId?: SortOrder
    promotionId?: SortOrder
    oldPrice?: SortOrder
    newPrice?: SortOrder
    changeReason?: SortOrder
    platform?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
  }

  export type PriceHistorySumOrderByAggregateInput = {
    oldPrice?: SortOrder
    newPrice?: SortOrder
  }

  export type BranchCreateNestedManyWithoutCompanyInput = {
    create?: XOR<BranchCreateWithoutCompanyInput, BranchUncheckedCreateWithoutCompanyInput> | BranchCreateWithoutCompanyInput[] | BranchUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: BranchCreateOrConnectWithoutCompanyInput | BranchCreateOrConnectWithoutCompanyInput[]
    createMany?: BranchCreateManyCompanyInputEnvelope
    connect?: BranchWhereUniqueInput | BranchWhereUniqueInput[]
  }

  export type LicenseCreateNestedManyWithoutCompanyInput = {
    create?: XOR<LicenseCreateWithoutCompanyInput, LicenseUncheckedCreateWithoutCompanyInput> | LicenseCreateWithoutCompanyInput[] | LicenseUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: LicenseCreateOrConnectWithoutCompanyInput | LicenseCreateOrConnectWithoutCompanyInput[]
    createMany?: LicenseCreateManyCompanyInputEnvelope
    connect?: LicenseWhereUniqueInput | LicenseWhereUniqueInput[]
  }

  export type MenuCategoryCreateNestedManyWithoutCompanyInput = {
    create?: XOR<MenuCategoryCreateWithoutCompanyInput, MenuCategoryUncheckedCreateWithoutCompanyInput> | MenuCategoryCreateWithoutCompanyInput[] | MenuCategoryUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MenuCategoryCreateOrConnectWithoutCompanyInput | MenuCategoryCreateOrConnectWithoutCompanyInput[]
    createMany?: MenuCategoryCreateManyCompanyInputEnvelope
    connect?: MenuCategoryWhereUniqueInput | MenuCategoryWhereUniqueInput[]
  }

  export type MenuProductCreateNestedManyWithoutCompanyInput = {
    create?: XOR<MenuProductCreateWithoutCompanyInput, MenuProductUncheckedCreateWithoutCompanyInput> | MenuProductCreateWithoutCompanyInput[] | MenuProductUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MenuProductCreateOrConnectWithoutCompanyInput | MenuProductCreateOrConnectWithoutCompanyInput[]
    createMany?: MenuProductCreateManyCompanyInputEnvelope
    connect?: MenuProductWhereUniqueInput | MenuProductWhereUniqueInput[]
  }

  export type ModifierCategoryCreateNestedManyWithoutCompanyInput = {
    create?: XOR<ModifierCategoryCreateWithoutCompanyInput, ModifierCategoryUncheckedCreateWithoutCompanyInput> | ModifierCategoryCreateWithoutCompanyInput[] | ModifierCategoryUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ModifierCategoryCreateOrConnectWithoutCompanyInput | ModifierCategoryCreateOrConnectWithoutCompanyInput[]
    createMany?: ModifierCategoryCreateManyCompanyInputEnvelope
    connect?: ModifierCategoryWhereUniqueInput | ModifierCategoryWhereUniqueInput[]
  }

  export type ModifierCreateNestedManyWithoutCompanyInput = {
    create?: XOR<ModifierCreateWithoutCompanyInput, ModifierUncheckedCreateWithoutCompanyInput> | ModifierCreateWithoutCompanyInput[] | ModifierUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ModifierCreateOrConnectWithoutCompanyInput | ModifierCreateOrConnectWithoutCompanyInput[]
    createMany?: ModifierCreateManyCompanyInputEnvelope
    connect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
  }

  export type PromotionCreateNestedManyWithoutCompanyInput = {
    create?: XOR<PromotionCreateWithoutCompanyInput, PromotionUncheckedCreateWithoutCompanyInput> | PromotionCreateWithoutCompanyInput[] | PromotionUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutCompanyInput | PromotionCreateOrConnectWithoutCompanyInput[]
    createMany?: PromotionCreateManyCompanyInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutCompanyInput = {
    create?: XOR<UserCreateWithoutCompanyInput, UserUncheckedCreateWithoutCompanyInput> | UserCreateWithoutCompanyInput[] | UserUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCompanyInput | UserCreateOrConnectWithoutCompanyInput[]
    createMany?: UserCreateManyCompanyInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type BranchUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<BranchCreateWithoutCompanyInput, BranchUncheckedCreateWithoutCompanyInput> | BranchCreateWithoutCompanyInput[] | BranchUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: BranchCreateOrConnectWithoutCompanyInput | BranchCreateOrConnectWithoutCompanyInput[]
    createMany?: BranchCreateManyCompanyInputEnvelope
    connect?: BranchWhereUniqueInput | BranchWhereUniqueInput[]
  }

  export type LicenseUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<LicenseCreateWithoutCompanyInput, LicenseUncheckedCreateWithoutCompanyInput> | LicenseCreateWithoutCompanyInput[] | LicenseUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: LicenseCreateOrConnectWithoutCompanyInput | LicenseCreateOrConnectWithoutCompanyInput[]
    createMany?: LicenseCreateManyCompanyInputEnvelope
    connect?: LicenseWhereUniqueInput | LicenseWhereUniqueInput[]
  }

  export type MenuCategoryUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<MenuCategoryCreateWithoutCompanyInput, MenuCategoryUncheckedCreateWithoutCompanyInput> | MenuCategoryCreateWithoutCompanyInput[] | MenuCategoryUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MenuCategoryCreateOrConnectWithoutCompanyInput | MenuCategoryCreateOrConnectWithoutCompanyInput[]
    createMany?: MenuCategoryCreateManyCompanyInputEnvelope
    connect?: MenuCategoryWhereUniqueInput | MenuCategoryWhereUniqueInput[]
  }

  export type MenuProductUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<MenuProductCreateWithoutCompanyInput, MenuProductUncheckedCreateWithoutCompanyInput> | MenuProductCreateWithoutCompanyInput[] | MenuProductUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MenuProductCreateOrConnectWithoutCompanyInput | MenuProductCreateOrConnectWithoutCompanyInput[]
    createMany?: MenuProductCreateManyCompanyInputEnvelope
    connect?: MenuProductWhereUniqueInput | MenuProductWhereUniqueInput[]
  }

  export type ModifierCategoryUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<ModifierCategoryCreateWithoutCompanyInput, ModifierCategoryUncheckedCreateWithoutCompanyInput> | ModifierCategoryCreateWithoutCompanyInput[] | ModifierCategoryUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ModifierCategoryCreateOrConnectWithoutCompanyInput | ModifierCategoryCreateOrConnectWithoutCompanyInput[]
    createMany?: ModifierCategoryCreateManyCompanyInputEnvelope
    connect?: ModifierCategoryWhereUniqueInput | ModifierCategoryWhereUniqueInput[]
  }

  export type ModifierUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<ModifierCreateWithoutCompanyInput, ModifierUncheckedCreateWithoutCompanyInput> | ModifierCreateWithoutCompanyInput[] | ModifierUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ModifierCreateOrConnectWithoutCompanyInput | ModifierCreateOrConnectWithoutCompanyInput[]
    createMany?: ModifierCreateManyCompanyInputEnvelope
    connect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
  }

  export type PromotionUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<PromotionCreateWithoutCompanyInput, PromotionUncheckedCreateWithoutCompanyInput> | PromotionCreateWithoutCompanyInput[] | PromotionUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutCompanyInput | PromotionCreateOrConnectWithoutCompanyInput[]
    createMany?: PromotionCreateManyCompanyInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<UserCreateWithoutCompanyInput, UserUncheckedCreateWithoutCompanyInput> | UserCreateWithoutCompanyInput[] | UserUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCompanyInput | UserCreateOrConnectWithoutCompanyInput[]
    createMany?: UserCreateManyCompanyInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type EnumCompanyStatusFieldUpdateOperationsInput = {
    set?: $Enums.CompanyStatus
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type BranchUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<BranchCreateWithoutCompanyInput, BranchUncheckedCreateWithoutCompanyInput> | BranchCreateWithoutCompanyInput[] | BranchUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: BranchCreateOrConnectWithoutCompanyInput | BranchCreateOrConnectWithoutCompanyInput[]
    upsert?: BranchUpsertWithWhereUniqueWithoutCompanyInput | BranchUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: BranchCreateManyCompanyInputEnvelope
    set?: BranchWhereUniqueInput | BranchWhereUniqueInput[]
    disconnect?: BranchWhereUniqueInput | BranchWhereUniqueInput[]
    delete?: BranchWhereUniqueInput | BranchWhereUniqueInput[]
    connect?: BranchWhereUniqueInput | BranchWhereUniqueInput[]
    update?: BranchUpdateWithWhereUniqueWithoutCompanyInput | BranchUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: BranchUpdateManyWithWhereWithoutCompanyInput | BranchUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: BranchScalarWhereInput | BranchScalarWhereInput[]
  }

  export type LicenseUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<LicenseCreateWithoutCompanyInput, LicenseUncheckedCreateWithoutCompanyInput> | LicenseCreateWithoutCompanyInput[] | LicenseUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: LicenseCreateOrConnectWithoutCompanyInput | LicenseCreateOrConnectWithoutCompanyInput[]
    upsert?: LicenseUpsertWithWhereUniqueWithoutCompanyInput | LicenseUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: LicenseCreateManyCompanyInputEnvelope
    set?: LicenseWhereUniqueInput | LicenseWhereUniqueInput[]
    disconnect?: LicenseWhereUniqueInput | LicenseWhereUniqueInput[]
    delete?: LicenseWhereUniqueInput | LicenseWhereUniqueInput[]
    connect?: LicenseWhereUniqueInput | LicenseWhereUniqueInput[]
    update?: LicenseUpdateWithWhereUniqueWithoutCompanyInput | LicenseUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: LicenseUpdateManyWithWhereWithoutCompanyInput | LicenseUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: LicenseScalarWhereInput | LicenseScalarWhereInput[]
  }

  export type MenuCategoryUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<MenuCategoryCreateWithoutCompanyInput, MenuCategoryUncheckedCreateWithoutCompanyInput> | MenuCategoryCreateWithoutCompanyInput[] | MenuCategoryUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MenuCategoryCreateOrConnectWithoutCompanyInput | MenuCategoryCreateOrConnectWithoutCompanyInput[]
    upsert?: MenuCategoryUpsertWithWhereUniqueWithoutCompanyInput | MenuCategoryUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: MenuCategoryCreateManyCompanyInputEnvelope
    set?: MenuCategoryWhereUniqueInput | MenuCategoryWhereUniqueInput[]
    disconnect?: MenuCategoryWhereUniqueInput | MenuCategoryWhereUniqueInput[]
    delete?: MenuCategoryWhereUniqueInput | MenuCategoryWhereUniqueInput[]
    connect?: MenuCategoryWhereUniqueInput | MenuCategoryWhereUniqueInput[]
    update?: MenuCategoryUpdateWithWhereUniqueWithoutCompanyInput | MenuCategoryUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: MenuCategoryUpdateManyWithWhereWithoutCompanyInput | MenuCategoryUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: MenuCategoryScalarWhereInput | MenuCategoryScalarWhereInput[]
  }

  export type MenuProductUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<MenuProductCreateWithoutCompanyInput, MenuProductUncheckedCreateWithoutCompanyInput> | MenuProductCreateWithoutCompanyInput[] | MenuProductUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MenuProductCreateOrConnectWithoutCompanyInput | MenuProductCreateOrConnectWithoutCompanyInput[]
    upsert?: MenuProductUpsertWithWhereUniqueWithoutCompanyInput | MenuProductUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: MenuProductCreateManyCompanyInputEnvelope
    set?: MenuProductWhereUniqueInput | MenuProductWhereUniqueInput[]
    disconnect?: MenuProductWhereUniqueInput | MenuProductWhereUniqueInput[]
    delete?: MenuProductWhereUniqueInput | MenuProductWhereUniqueInput[]
    connect?: MenuProductWhereUniqueInput | MenuProductWhereUniqueInput[]
    update?: MenuProductUpdateWithWhereUniqueWithoutCompanyInput | MenuProductUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: MenuProductUpdateManyWithWhereWithoutCompanyInput | MenuProductUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: MenuProductScalarWhereInput | MenuProductScalarWhereInput[]
  }

  export type ModifierCategoryUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<ModifierCategoryCreateWithoutCompanyInput, ModifierCategoryUncheckedCreateWithoutCompanyInput> | ModifierCategoryCreateWithoutCompanyInput[] | ModifierCategoryUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ModifierCategoryCreateOrConnectWithoutCompanyInput | ModifierCategoryCreateOrConnectWithoutCompanyInput[]
    upsert?: ModifierCategoryUpsertWithWhereUniqueWithoutCompanyInput | ModifierCategoryUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: ModifierCategoryCreateManyCompanyInputEnvelope
    set?: ModifierCategoryWhereUniqueInput | ModifierCategoryWhereUniqueInput[]
    disconnect?: ModifierCategoryWhereUniqueInput | ModifierCategoryWhereUniqueInput[]
    delete?: ModifierCategoryWhereUniqueInput | ModifierCategoryWhereUniqueInput[]
    connect?: ModifierCategoryWhereUniqueInput | ModifierCategoryWhereUniqueInput[]
    update?: ModifierCategoryUpdateWithWhereUniqueWithoutCompanyInput | ModifierCategoryUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: ModifierCategoryUpdateManyWithWhereWithoutCompanyInput | ModifierCategoryUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: ModifierCategoryScalarWhereInput | ModifierCategoryScalarWhereInput[]
  }

  export type ModifierUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<ModifierCreateWithoutCompanyInput, ModifierUncheckedCreateWithoutCompanyInput> | ModifierCreateWithoutCompanyInput[] | ModifierUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ModifierCreateOrConnectWithoutCompanyInput | ModifierCreateOrConnectWithoutCompanyInput[]
    upsert?: ModifierUpsertWithWhereUniqueWithoutCompanyInput | ModifierUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: ModifierCreateManyCompanyInputEnvelope
    set?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    disconnect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    delete?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    connect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    update?: ModifierUpdateWithWhereUniqueWithoutCompanyInput | ModifierUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: ModifierUpdateManyWithWhereWithoutCompanyInput | ModifierUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: ModifierScalarWhereInput | ModifierScalarWhereInput[]
  }

  export type PromotionUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<PromotionCreateWithoutCompanyInput, PromotionUncheckedCreateWithoutCompanyInput> | PromotionCreateWithoutCompanyInput[] | PromotionUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutCompanyInput | PromotionCreateOrConnectWithoutCompanyInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutCompanyInput | PromotionUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: PromotionCreateManyCompanyInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutCompanyInput | PromotionUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutCompanyInput | PromotionUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type UserUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<UserCreateWithoutCompanyInput, UserUncheckedCreateWithoutCompanyInput> | UserCreateWithoutCompanyInput[] | UserUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCompanyInput | UserCreateOrConnectWithoutCompanyInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCompanyInput | UserUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: UserCreateManyCompanyInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCompanyInput | UserUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCompanyInput | UserUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type BranchUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<BranchCreateWithoutCompanyInput, BranchUncheckedCreateWithoutCompanyInput> | BranchCreateWithoutCompanyInput[] | BranchUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: BranchCreateOrConnectWithoutCompanyInput | BranchCreateOrConnectWithoutCompanyInput[]
    upsert?: BranchUpsertWithWhereUniqueWithoutCompanyInput | BranchUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: BranchCreateManyCompanyInputEnvelope
    set?: BranchWhereUniqueInput | BranchWhereUniqueInput[]
    disconnect?: BranchWhereUniqueInput | BranchWhereUniqueInput[]
    delete?: BranchWhereUniqueInput | BranchWhereUniqueInput[]
    connect?: BranchWhereUniqueInput | BranchWhereUniqueInput[]
    update?: BranchUpdateWithWhereUniqueWithoutCompanyInput | BranchUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: BranchUpdateManyWithWhereWithoutCompanyInput | BranchUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: BranchScalarWhereInput | BranchScalarWhereInput[]
  }

  export type LicenseUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<LicenseCreateWithoutCompanyInput, LicenseUncheckedCreateWithoutCompanyInput> | LicenseCreateWithoutCompanyInput[] | LicenseUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: LicenseCreateOrConnectWithoutCompanyInput | LicenseCreateOrConnectWithoutCompanyInput[]
    upsert?: LicenseUpsertWithWhereUniqueWithoutCompanyInput | LicenseUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: LicenseCreateManyCompanyInputEnvelope
    set?: LicenseWhereUniqueInput | LicenseWhereUniqueInput[]
    disconnect?: LicenseWhereUniqueInput | LicenseWhereUniqueInput[]
    delete?: LicenseWhereUniqueInput | LicenseWhereUniqueInput[]
    connect?: LicenseWhereUniqueInput | LicenseWhereUniqueInput[]
    update?: LicenseUpdateWithWhereUniqueWithoutCompanyInput | LicenseUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: LicenseUpdateManyWithWhereWithoutCompanyInput | LicenseUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: LicenseScalarWhereInput | LicenseScalarWhereInput[]
  }

  export type MenuCategoryUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<MenuCategoryCreateWithoutCompanyInput, MenuCategoryUncheckedCreateWithoutCompanyInput> | MenuCategoryCreateWithoutCompanyInput[] | MenuCategoryUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MenuCategoryCreateOrConnectWithoutCompanyInput | MenuCategoryCreateOrConnectWithoutCompanyInput[]
    upsert?: MenuCategoryUpsertWithWhereUniqueWithoutCompanyInput | MenuCategoryUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: MenuCategoryCreateManyCompanyInputEnvelope
    set?: MenuCategoryWhereUniqueInput | MenuCategoryWhereUniqueInput[]
    disconnect?: MenuCategoryWhereUniqueInput | MenuCategoryWhereUniqueInput[]
    delete?: MenuCategoryWhereUniqueInput | MenuCategoryWhereUniqueInput[]
    connect?: MenuCategoryWhereUniqueInput | MenuCategoryWhereUniqueInput[]
    update?: MenuCategoryUpdateWithWhereUniqueWithoutCompanyInput | MenuCategoryUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: MenuCategoryUpdateManyWithWhereWithoutCompanyInput | MenuCategoryUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: MenuCategoryScalarWhereInput | MenuCategoryScalarWhereInput[]
  }

  export type MenuProductUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<MenuProductCreateWithoutCompanyInput, MenuProductUncheckedCreateWithoutCompanyInput> | MenuProductCreateWithoutCompanyInput[] | MenuProductUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: MenuProductCreateOrConnectWithoutCompanyInput | MenuProductCreateOrConnectWithoutCompanyInput[]
    upsert?: MenuProductUpsertWithWhereUniqueWithoutCompanyInput | MenuProductUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: MenuProductCreateManyCompanyInputEnvelope
    set?: MenuProductWhereUniqueInput | MenuProductWhereUniqueInput[]
    disconnect?: MenuProductWhereUniqueInput | MenuProductWhereUniqueInput[]
    delete?: MenuProductWhereUniqueInput | MenuProductWhereUniqueInput[]
    connect?: MenuProductWhereUniqueInput | MenuProductWhereUniqueInput[]
    update?: MenuProductUpdateWithWhereUniqueWithoutCompanyInput | MenuProductUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: MenuProductUpdateManyWithWhereWithoutCompanyInput | MenuProductUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: MenuProductScalarWhereInput | MenuProductScalarWhereInput[]
  }

  export type ModifierCategoryUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<ModifierCategoryCreateWithoutCompanyInput, ModifierCategoryUncheckedCreateWithoutCompanyInput> | ModifierCategoryCreateWithoutCompanyInput[] | ModifierCategoryUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ModifierCategoryCreateOrConnectWithoutCompanyInput | ModifierCategoryCreateOrConnectWithoutCompanyInput[]
    upsert?: ModifierCategoryUpsertWithWhereUniqueWithoutCompanyInput | ModifierCategoryUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: ModifierCategoryCreateManyCompanyInputEnvelope
    set?: ModifierCategoryWhereUniqueInput | ModifierCategoryWhereUniqueInput[]
    disconnect?: ModifierCategoryWhereUniqueInput | ModifierCategoryWhereUniqueInput[]
    delete?: ModifierCategoryWhereUniqueInput | ModifierCategoryWhereUniqueInput[]
    connect?: ModifierCategoryWhereUniqueInput | ModifierCategoryWhereUniqueInput[]
    update?: ModifierCategoryUpdateWithWhereUniqueWithoutCompanyInput | ModifierCategoryUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: ModifierCategoryUpdateManyWithWhereWithoutCompanyInput | ModifierCategoryUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: ModifierCategoryScalarWhereInput | ModifierCategoryScalarWhereInput[]
  }

  export type ModifierUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<ModifierCreateWithoutCompanyInput, ModifierUncheckedCreateWithoutCompanyInput> | ModifierCreateWithoutCompanyInput[] | ModifierUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: ModifierCreateOrConnectWithoutCompanyInput | ModifierCreateOrConnectWithoutCompanyInput[]
    upsert?: ModifierUpsertWithWhereUniqueWithoutCompanyInput | ModifierUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: ModifierCreateManyCompanyInputEnvelope
    set?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    disconnect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    delete?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    connect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    update?: ModifierUpdateWithWhereUniqueWithoutCompanyInput | ModifierUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: ModifierUpdateManyWithWhereWithoutCompanyInput | ModifierUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: ModifierScalarWhereInput | ModifierScalarWhereInput[]
  }

  export type PromotionUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<PromotionCreateWithoutCompanyInput, PromotionUncheckedCreateWithoutCompanyInput> | PromotionCreateWithoutCompanyInput[] | PromotionUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutCompanyInput | PromotionCreateOrConnectWithoutCompanyInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutCompanyInput | PromotionUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: PromotionCreateManyCompanyInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutCompanyInput | PromotionUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutCompanyInput | PromotionUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<UserCreateWithoutCompanyInput, UserUncheckedCreateWithoutCompanyInput> | UserCreateWithoutCompanyInput[] | UserUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: UserCreateOrConnectWithoutCompanyInput | UserCreateOrConnectWithoutCompanyInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutCompanyInput | UserUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: UserCreateManyCompanyInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutCompanyInput | UserUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: UserUpdateManyWithWhereWithoutCompanyInput | UserUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type CompanyCreateNestedOneWithoutLicensesInput = {
    create?: XOR<CompanyCreateWithoutLicensesInput, CompanyUncheckedCreateWithoutLicensesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutLicensesInput
    connect?: CompanyWhereUniqueInput
  }

  export type EnumLicenseStatusFieldUpdateOperationsInput = {
    set?: $Enums.LicenseStatus
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CompanyUpdateOneRequiredWithoutLicensesNestedInput = {
    create?: XOR<CompanyCreateWithoutLicensesInput, CompanyUncheckedCreateWithoutLicensesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutLicensesInput
    upsert?: CompanyUpsertWithoutLicensesInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutLicensesInput, CompanyUpdateWithoutLicensesInput>, CompanyUncheckedUpdateWithoutLicensesInput>
  }

  export type CompanyCreateNestedOneWithoutBranchesInput = {
    create?: XOR<CompanyCreateWithoutBranchesInput, CompanyUncheckedCreateWithoutBranchesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutBranchesInput
    connect?: CompanyWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutBranchInput = {
    create?: XOR<UserCreateWithoutBranchInput, UserUncheckedCreateWithoutBranchInput> | UserCreateWithoutBranchInput[] | UserUncheckedCreateWithoutBranchInput[]
    connectOrCreate?: UserCreateOrConnectWithoutBranchInput | UserCreateOrConnectWithoutBranchInput[]
    createMany?: UserCreateManyBranchInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutBranchInput = {
    create?: XOR<UserCreateWithoutBranchInput, UserUncheckedCreateWithoutBranchInput> | UserCreateWithoutBranchInput[] | UserUncheckedCreateWithoutBranchInput[]
    connectOrCreate?: UserCreateOrConnectWithoutBranchInput | UserCreateOrConnectWithoutBranchInput[]
    createMany?: UserCreateManyBranchInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type CompanyUpdateOneRequiredWithoutBranchesNestedInput = {
    create?: XOR<CompanyCreateWithoutBranchesInput, CompanyUncheckedCreateWithoutBranchesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutBranchesInput
    upsert?: CompanyUpsertWithoutBranchesInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutBranchesInput, CompanyUpdateWithoutBranchesInput>, CompanyUncheckedUpdateWithoutBranchesInput>
  }

  export type UserUpdateManyWithoutBranchNestedInput = {
    create?: XOR<UserCreateWithoutBranchInput, UserUncheckedCreateWithoutBranchInput> | UserCreateWithoutBranchInput[] | UserUncheckedCreateWithoutBranchInput[]
    connectOrCreate?: UserCreateOrConnectWithoutBranchInput | UserCreateOrConnectWithoutBranchInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutBranchInput | UserUpsertWithWhereUniqueWithoutBranchInput[]
    createMany?: UserCreateManyBranchInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutBranchInput | UserUpdateWithWhereUniqueWithoutBranchInput[]
    updateMany?: UserUpdateManyWithWhereWithoutBranchInput | UserUpdateManyWithWhereWithoutBranchInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutBranchNestedInput = {
    create?: XOR<UserCreateWithoutBranchInput, UserUncheckedCreateWithoutBranchInput> | UserCreateWithoutBranchInput[] | UserUncheckedCreateWithoutBranchInput[]
    connectOrCreate?: UserCreateOrConnectWithoutBranchInput | UserCreateOrConnectWithoutBranchInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutBranchInput | UserUpsertWithWhereUniqueWithoutBranchInput[]
    createMany?: UserCreateManyBranchInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutBranchInput | UserUpdateWithWhereUniqueWithoutBranchInput[]
    updateMany?: UserUpdateManyWithWhereWithoutBranchInput | UserUpdateManyWithWhereWithoutBranchInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type UserActivityLogCreateNestedManyWithoutUserInput = {
    create?: XOR<UserActivityLogCreateWithoutUserInput, UserActivityLogUncheckedCreateWithoutUserInput> | UserActivityLogCreateWithoutUserInput[] | UserActivityLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserActivityLogCreateOrConnectWithoutUserInput | UserActivityLogCreateOrConnectWithoutUserInput[]
    createMany?: UserActivityLogCreateManyUserInputEnvelope
    connect?: UserActivityLogWhereUniqueInput | UserActivityLogWhereUniqueInput[]
  }

  export type UserSessionCreateNestedManyWithoutUserInput = {
    create?: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput> | UserSessionCreateWithoutUserInput[] | UserSessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSessionCreateOrConnectWithoutUserInput | UserSessionCreateOrConnectWithoutUserInput[]
    createMany?: UserSessionCreateManyUserInputEnvelope
    connect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
  }

  export type BranchCreateNestedOneWithoutUsersInput = {
    create?: XOR<BranchCreateWithoutUsersInput, BranchUncheckedCreateWithoutUsersInput>
    connectOrCreate?: BranchCreateOrConnectWithoutUsersInput
    connect?: BranchWhereUniqueInput
  }

  export type CompanyCreateNestedOneWithoutUsersInput = {
    create?: XOR<CompanyCreateWithoutUsersInput, CompanyUncheckedCreateWithoutUsersInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutUsersInput
    connect?: CompanyWhereUniqueInput
  }

  export type UserActivityLogUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserActivityLogCreateWithoutUserInput, UserActivityLogUncheckedCreateWithoutUserInput> | UserActivityLogCreateWithoutUserInput[] | UserActivityLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserActivityLogCreateOrConnectWithoutUserInput | UserActivityLogCreateOrConnectWithoutUserInput[]
    createMany?: UserActivityLogCreateManyUserInputEnvelope
    connect?: UserActivityLogWhereUniqueInput | UserActivityLogWhereUniqueInput[]
  }

  export type UserSessionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput> | UserSessionCreateWithoutUserInput[] | UserSessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSessionCreateOrConnectWithoutUserInput | UserSessionCreateOrConnectWithoutUserInput[]
    createMany?: UserSessionCreateManyUserInputEnvelope
    connect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
  }

  export type EnumUserRoleFieldUpdateOperationsInput = {
    set?: $Enums.UserRole
  }

  export type EnumUserStatusFieldUpdateOperationsInput = {
    set?: $Enums.UserStatus
  }

  export type UserActivityLogUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserActivityLogCreateWithoutUserInput, UserActivityLogUncheckedCreateWithoutUserInput> | UserActivityLogCreateWithoutUserInput[] | UserActivityLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserActivityLogCreateOrConnectWithoutUserInput | UserActivityLogCreateOrConnectWithoutUserInput[]
    upsert?: UserActivityLogUpsertWithWhereUniqueWithoutUserInput | UserActivityLogUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserActivityLogCreateManyUserInputEnvelope
    set?: UserActivityLogWhereUniqueInput | UserActivityLogWhereUniqueInput[]
    disconnect?: UserActivityLogWhereUniqueInput | UserActivityLogWhereUniqueInput[]
    delete?: UserActivityLogWhereUniqueInput | UserActivityLogWhereUniqueInput[]
    connect?: UserActivityLogWhereUniqueInput | UserActivityLogWhereUniqueInput[]
    update?: UserActivityLogUpdateWithWhereUniqueWithoutUserInput | UserActivityLogUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserActivityLogUpdateManyWithWhereWithoutUserInput | UserActivityLogUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserActivityLogScalarWhereInput | UserActivityLogScalarWhereInput[]
  }

  export type UserSessionUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput> | UserSessionCreateWithoutUserInput[] | UserSessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSessionCreateOrConnectWithoutUserInput | UserSessionCreateOrConnectWithoutUserInput[]
    upsert?: UserSessionUpsertWithWhereUniqueWithoutUserInput | UserSessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserSessionCreateManyUserInputEnvelope
    set?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    disconnect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    delete?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    connect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    update?: UserSessionUpdateWithWhereUniqueWithoutUserInput | UserSessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserSessionUpdateManyWithWhereWithoutUserInput | UserSessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserSessionScalarWhereInput | UserSessionScalarWhereInput[]
  }

  export type BranchUpdateOneWithoutUsersNestedInput = {
    create?: XOR<BranchCreateWithoutUsersInput, BranchUncheckedCreateWithoutUsersInput>
    connectOrCreate?: BranchCreateOrConnectWithoutUsersInput
    upsert?: BranchUpsertWithoutUsersInput
    disconnect?: BranchWhereInput | boolean
    delete?: BranchWhereInput | boolean
    connect?: BranchWhereUniqueInput
    update?: XOR<XOR<BranchUpdateToOneWithWhereWithoutUsersInput, BranchUpdateWithoutUsersInput>, BranchUncheckedUpdateWithoutUsersInput>
  }

  export type CompanyUpdateOneRequiredWithoutUsersNestedInput = {
    create?: XOR<CompanyCreateWithoutUsersInput, CompanyUncheckedCreateWithoutUsersInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutUsersInput
    upsert?: CompanyUpsertWithoutUsersInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutUsersInput, CompanyUpdateWithoutUsersInput>, CompanyUncheckedUpdateWithoutUsersInput>
  }

  export type UserActivityLogUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserActivityLogCreateWithoutUserInput, UserActivityLogUncheckedCreateWithoutUserInput> | UserActivityLogCreateWithoutUserInput[] | UserActivityLogUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserActivityLogCreateOrConnectWithoutUserInput | UserActivityLogCreateOrConnectWithoutUserInput[]
    upsert?: UserActivityLogUpsertWithWhereUniqueWithoutUserInput | UserActivityLogUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserActivityLogCreateManyUserInputEnvelope
    set?: UserActivityLogWhereUniqueInput | UserActivityLogWhereUniqueInput[]
    disconnect?: UserActivityLogWhereUniqueInput | UserActivityLogWhereUniqueInput[]
    delete?: UserActivityLogWhereUniqueInput | UserActivityLogWhereUniqueInput[]
    connect?: UserActivityLogWhereUniqueInput | UserActivityLogWhereUniqueInput[]
    update?: UserActivityLogUpdateWithWhereUniqueWithoutUserInput | UserActivityLogUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserActivityLogUpdateManyWithWhereWithoutUserInput | UserActivityLogUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserActivityLogScalarWhereInput | UserActivityLogScalarWhereInput[]
  }

  export type UserSessionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput> | UserSessionCreateWithoutUserInput[] | UserSessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSessionCreateOrConnectWithoutUserInput | UserSessionCreateOrConnectWithoutUserInput[]
    upsert?: UserSessionUpsertWithWhereUniqueWithoutUserInput | UserSessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserSessionCreateManyUserInputEnvelope
    set?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    disconnect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    delete?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    connect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    update?: UserSessionUpdateWithWhereUniqueWithoutUserInput | UserSessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserSessionUpdateManyWithWhereWithoutUserInput | UserSessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserSessionScalarWhereInput | UserSessionScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutSessionsInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    upsert?: UserUpsertWithoutSessionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSessionsInput, UserUpdateWithoutSessionsInput>, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserCreateNestedOneWithoutActivityLogsInput = {
    create?: XOR<UserCreateWithoutActivityLogsInput, UserUncheckedCreateWithoutActivityLogsInput>
    connectOrCreate?: UserCreateOrConnectWithoutActivityLogsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutActivityLogsNestedInput = {
    create?: XOR<UserCreateWithoutActivityLogsInput, UserUncheckedCreateWithoutActivityLogsInput>
    connectOrCreate?: UserCreateOrConnectWithoutActivityLogsInput
    upsert?: UserUpsertWithoutActivityLogsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutActivityLogsInput, UserUpdateWithoutActivityLogsInput>, UserUncheckedUpdateWithoutActivityLogsInput>
  }

  export type CompanyCreateNestedOneWithoutMenuCategoriesInput = {
    create?: XOR<CompanyCreateWithoutMenuCategoriesInput, CompanyUncheckedCreateWithoutMenuCategoriesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutMenuCategoriesInput
    connect?: CompanyWhereUniqueInput
  }

  export type MenuProductCreateNestedManyWithoutCategoryInput = {
    create?: XOR<MenuProductCreateWithoutCategoryInput, MenuProductUncheckedCreateWithoutCategoryInput> | MenuProductCreateWithoutCategoryInput[] | MenuProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: MenuProductCreateOrConnectWithoutCategoryInput | MenuProductCreateOrConnectWithoutCategoryInput[]
    createMany?: MenuProductCreateManyCategoryInputEnvelope
    connect?: MenuProductWhereUniqueInput | MenuProductWhereUniqueInput[]
  }

  export type MenuProductUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<MenuProductCreateWithoutCategoryInput, MenuProductUncheckedCreateWithoutCategoryInput> | MenuProductCreateWithoutCategoryInput[] | MenuProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: MenuProductCreateOrConnectWithoutCategoryInput | MenuProductCreateOrConnectWithoutCategoryInput[]
    createMany?: MenuProductCreateManyCategoryInputEnvelope
    connect?: MenuProductWhereUniqueInput | MenuProductWhereUniqueInput[]
  }

  export type CompanyUpdateOneRequiredWithoutMenuCategoriesNestedInput = {
    create?: XOR<CompanyCreateWithoutMenuCategoriesInput, CompanyUncheckedCreateWithoutMenuCategoriesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutMenuCategoriesInput
    upsert?: CompanyUpsertWithoutMenuCategoriesInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutMenuCategoriesInput, CompanyUpdateWithoutMenuCategoriesInput>, CompanyUncheckedUpdateWithoutMenuCategoriesInput>
  }

  export type MenuProductUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<MenuProductCreateWithoutCategoryInput, MenuProductUncheckedCreateWithoutCategoryInput> | MenuProductCreateWithoutCategoryInput[] | MenuProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: MenuProductCreateOrConnectWithoutCategoryInput | MenuProductCreateOrConnectWithoutCategoryInput[]
    upsert?: MenuProductUpsertWithWhereUniqueWithoutCategoryInput | MenuProductUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: MenuProductCreateManyCategoryInputEnvelope
    set?: MenuProductWhereUniqueInput | MenuProductWhereUniqueInput[]
    disconnect?: MenuProductWhereUniqueInput | MenuProductWhereUniqueInput[]
    delete?: MenuProductWhereUniqueInput | MenuProductWhereUniqueInput[]
    connect?: MenuProductWhereUniqueInput | MenuProductWhereUniqueInput[]
    update?: MenuProductUpdateWithWhereUniqueWithoutCategoryInput | MenuProductUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: MenuProductUpdateManyWithWhereWithoutCategoryInput | MenuProductUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: MenuProductScalarWhereInput | MenuProductScalarWhereInput[]
  }

  export type MenuProductUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<MenuProductCreateWithoutCategoryInput, MenuProductUncheckedCreateWithoutCategoryInput> | MenuProductCreateWithoutCategoryInput[] | MenuProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: MenuProductCreateOrConnectWithoutCategoryInput | MenuProductCreateOrConnectWithoutCategoryInput[]
    upsert?: MenuProductUpsertWithWhereUniqueWithoutCategoryInput | MenuProductUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: MenuProductCreateManyCategoryInputEnvelope
    set?: MenuProductWhereUniqueInput | MenuProductWhereUniqueInput[]
    disconnect?: MenuProductWhereUniqueInput | MenuProductWhereUniqueInput[]
    delete?: MenuProductWhereUniqueInput | MenuProductWhereUniqueInput[]
    connect?: MenuProductWhereUniqueInput | MenuProductWhereUniqueInput[]
    update?: MenuProductUpdateWithWhereUniqueWithoutCategoryInput | MenuProductUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: MenuProductUpdateManyWithWhereWithoutCategoryInput | MenuProductUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: MenuProductScalarWhereInput | MenuProductScalarWhereInput[]
  }

  export type MenuProductCreateimagesInput = {
    set: string[]
  }

  export type MenuProductCreatetagsInput = {
    set: string[]
  }

  export type MenuCategoryCreateNestedOneWithoutProductsInput = {
    create?: XOR<MenuCategoryCreateWithoutProductsInput, MenuCategoryUncheckedCreateWithoutProductsInput>
    connectOrCreate?: MenuCategoryCreateOrConnectWithoutProductsInput
    connect?: MenuCategoryWhereUniqueInput
  }

  export type CompanyCreateNestedOneWithoutMenuProductsInput = {
    create?: XOR<CompanyCreateWithoutMenuProductsInput, CompanyUncheckedCreateWithoutMenuProductsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutMenuProductsInput
    connect?: CompanyWhereUniqueInput
  }

  export type ProductModifierCategoryCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductModifierCategoryCreateWithoutProductInput, ProductModifierCategoryUncheckedCreateWithoutProductInput> | ProductModifierCategoryCreateWithoutProductInput[] | ProductModifierCategoryUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductModifierCategoryCreateOrConnectWithoutProductInput | ProductModifierCategoryCreateOrConnectWithoutProductInput[]
    createMany?: ProductModifierCategoryCreateManyProductInputEnvelope
    connect?: ProductModifierCategoryWhereUniqueInput | ProductModifierCategoryWhereUniqueInput[]
  }

  export type PromotionModifierMarkupCreateNestedManyWithoutProductInput = {
    create?: XOR<PromotionModifierMarkupCreateWithoutProductInput, PromotionModifierMarkupUncheckedCreateWithoutProductInput> | PromotionModifierMarkupCreateWithoutProductInput[] | PromotionModifierMarkupUncheckedCreateWithoutProductInput[]
    connectOrCreate?: PromotionModifierMarkupCreateOrConnectWithoutProductInput | PromotionModifierMarkupCreateOrConnectWithoutProductInput[]
    createMany?: PromotionModifierMarkupCreateManyProductInputEnvelope
    connect?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
  }

  export type PromotionProductCreateNestedManyWithoutProductInput = {
    create?: XOR<PromotionProductCreateWithoutProductInput, PromotionProductUncheckedCreateWithoutProductInput> | PromotionProductCreateWithoutProductInput[] | PromotionProductUncheckedCreateWithoutProductInput[]
    connectOrCreate?: PromotionProductCreateOrConnectWithoutProductInput | PromotionProductCreateOrConnectWithoutProductInput[]
    createMany?: PromotionProductCreateManyProductInputEnvelope
    connect?: PromotionProductWhereUniqueInput | PromotionProductWhereUniqueInput[]
  }

  export type ProductImageCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput> | ProductImageCreateWithoutProductInput[] | ProductImageUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductImageCreateOrConnectWithoutProductInput | ProductImageCreateOrConnectWithoutProductInput[]
    createMany?: ProductImageCreateManyProductInputEnvelope
    connect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
  }

  export type ProductModifierCategoryUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductModifierCategoryCreateWithoutProductInput, ProductModifierCategoryUncheckedCreateWithoutProductInput> | ProductModifierCategoryCreateWithoutProductInput[] | ProductModifierCategoryUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductModifierCategoryCreateOrConnectWithoutProductInput | ProductModifierCategoryCreateOrConnectWithoutProductInput[]
    createMany?: ProductModifierCategoryCreateManyProductInputEnvelope
    connect?: ProductModifierCategoryWhereUniqueInput | ProductModifierCategoryWhereUniqueInput[]
  }

  export type PromotionModifierMarkupUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<PromotionModifierMarkupCreateWithoutProductInput, PromotionModifierMarkupUncheckedCreateWithoutProductInput> | PromotionModifierMarkupCreateWithoutProductInput[] | PromotionModifierMarkupUncheckedCreateWithoutProductInput[]
    connectOrCreate?: PromotionModifierMarkupCreateOrConnectWithoutProductInput | PromotionModifierMarkupCreateOrConnectWithoutProductInput[]
    createMany?: PromotionModifierMarkupCreateManyProductInputEnvelope
    connect?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
  }

  export type PromotionProductUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<PromotionProductCreateWithoutProductInput, PromotionProductUncheckedCreateWithoutProductInput> | PromotionProductCreateWithoutProductInput[] | PromotionProductUncheckedCreateWithoutProductInput[]
    connectOrCreate?: PromotionProductCreateOrConnectWithoutProductInput | PromotionProductCreateOrConnectWithoutProductInput[]
    createMany?: PromotionProductCreateManyProductInputEnvelope
    connect?: PromotionProductWhereUniqueInput | PromotionProductWhereUniqueInput[]
  }

  export type ProductImageUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput> | ProductImageCreateWithoutProductInput[] | ProductImageUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductImageCreateOrConnectWithoutProductInput | ProductImageCreateOrConnectWithoutProductInput[]
    createMany?: ProductImageCreateManyProductInputEnvelope
    connect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
  }

  export type MenuProductUpdateimagesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type MenuProductUpdatetagsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type MenuCategoryUpdateOneWithoutProductsNestedInput = {
    create?: XOR<MenuCategoryCreateWithoutProductsInput, MenuCategoryUncheckedCreateWithoutProductsInput>
    connectOrCreate?: MenuCategoryCreateOrConnectWithoutProductsInput
    upsert?: MenuCategoryUpsertWithoutProductsInput
    disconnect?: MenuCategoryWhereInput | boolean
    delete?: MenuCategoryWhereInput | boolean
    connect?: MenuCategoryWhereUniqueInput
    update?: XOR<XOR<MenuCategoryUpdateToOneWithWhereWithoutProductsInput, MenuCategoryUpdateWithoutProductsInput>, MenuCategoryUncheckedUpdateWithoutProductsInput>
  }

  export type CompanyUpdateOneRequiredWithoutMenuProductsNestedInput = {
    create?: XOR<CompanyCreateWithoutMenuProductsInput, CompanyUncheckedCreateWithoutMenuProductsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutMenuProductsInput
    upsert?: CompanyUpsertWithoutMenuProductsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutMenuProductsInput, CompanyUpdateWithoutMenuProductsInput>, CompanyUncheckedUpdateWithoutMenuProductsInput>
  }

  export type ProductModifierCategoryUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductModifierCategoryCreateWithoutProductInput, ProductModifierCategoryUncheckedCreateWithoutProductInput> | ProductModifierCategoryCreateWithoutProductInput[] | ProductModifierCategoryUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductModifierCategoryCreateOrConnectWithoutProductInput | ProductModifierCategoryCreateOrConnectWithoutProductInput[]
    upsert?: ProductModifierCategoryUpsertWithWhereUniqueWithoutProductInput | ProductModifierCategoryUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductModifierCategoryCreateManyProductInputEnvelope
    set?: ProductModifierCategoryWhereUniqueInput | ProductModifierCategoryWhereUniqueInput[]
    disconnect?: ProductModifierCategoryWhereUniqueInput | ProductModifierCategoryWhereUniqueInput[]
    delete?: ProductModifierCategoryWhereUniqueInput | ProductModifierCategoryWhereUniqueInput[]
    connect?: ProductModifierCategoryWhereUniqueInput | ProductModifierCategoryWhereUniqueInput[]
    update?: ProductModifierCategoryUpdateWithWhereUniqueWithoutProductInput | ProductModifierCategoryUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductModifierCategoryUpdateManyWithWhereWithoutProductInput | ProductModifierCategoryUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductModifierCategoryScalarWhereInput | ProductModifierCategoryScalarWhereInput[]
  }

  export type PromotionModifierMarkupUpdateManyWithoutProductNestedInput = {
    create?: XOR<PromotionModifierMarkupCreateWithoutProductInput, PromotionModifierMarkupUncheckedCreateWithoutProductInput> | PromotionModifierMarkupCreateWithoutProductInput[] | PromotionModifierMarkupUncheckedCreateWithoutProductInput[]
    connectOrCreate?: PromotionModifierMarkupCreateOrConnectWithoutProductInput | PromotionModifierMarkupCreateOrConnectWithoutProductInput[]
    upsert?: PromotionModifierMarkupUpsertWithWhereUniqueWithoutProductInput | PromotionModifierMarkupUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: PromotionModifierMarkupCreateManyProductInputEnvelope
    set?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    disconnect?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    delete?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    connect?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    update?: PromotionModifierMarkupUpdateWithWhereUniqueWithoutProductInput | PromotionModifierMarkupUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: PromotionModifierMarkupUpdateManyWithWhereWithoutProductInput | PromotionModifierMarkupUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: PromotionModifierMarkupScalarWhereInput | PromotionModifierMarkupScalarWhereInput[]
  }

  export type PromotionProductUpdateManyWithoutProductNestedInput = {
    create?: XOR<PromotionProductCreateWithoutProductInput, PromotionProductUncheckedCreateWithoutProductInput> | PromotionProductCreateWithoutProductInput[] | PromotionProductUncheckedCreateWithoutProductInput[]
    connectOrCreate?: PromotionProductCreateOrConnectWithoutProductInput | PromotionProductCreateOrConnectWithoutProductInput[]
    upsert?: PromotionProductUpsertWithWhereUniqueWithoutProductInput | PromotionProductUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: PromotionProductCreateManyProductInputEnvelope
    set?: PromotionProductWhereUniqueInput | PromotionProductWhereUniqueInput[]
    disconnect?: PromotionProductWhereUniqueInput | PromotionProductWhereUniqueInput[]
    delete?: PromotionProductWhereUniqueInput | PromotionProductWhereUniqueInput[]
    connect?: PromotionProductWhereUniqueInput | PromotionProductWhereUniqueInput[]
    update?: PromotionProductUpdateWithWhereUniqueWithoutProductInput | PromotionProductUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: PromotionProductUpdateManyWithWhereWithoutProductInput | PromotionProductUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: PromotionProductScalarWhereInput | PromotionProductScalarWhereInput[]
  }

  export type ProductImageUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput> | ProductImageCreateWithoutProductInput[] | ProductImageUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductImageCreateOrConnectWithoutProductInput | ProductImageCreateOrConnectWithoutProductInput[]
    upsert?: ProductImageUpsertWithWhereUniqueWithoutProductInput | ProductImageUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductImageCreateManyProductInputEnvelope
    set?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    disconnect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    delete?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    connect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    update?: ProductImageUpdateWithWhereUniqueWithoutProductInput | ProductImageUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductImageUpdateManyWithWhereWithoutProductInput | ProductImageUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductImageScalarWhereInput | ProductImageScalarWhereInput[]
  }

  export type ProductModifierCategoryUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductModifierCategoryCreateWithoutProductInput, ProductModifierCategoryUncheckedCreateWithoutProductInput> | ProductModifierCategoryCreateWithoutProductInput[] | ProductModifierCategoryUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductModifierCategoryCreateOrConnectWithoutProductInput | ProductModifierCategoryCreateOrConnectWithoutProductInput[]
    upsert?: ProductModifierCategoryUpsertWithWhereUniqueWithoutProductInput | ProductModifierCategoryUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductModifierCategoryCreateManyProductInputEnvelope
    set?: ProductModifierCategoryWhereUniqueInput | ProductModifierCategoryWhereUniqueInput[]
    disconnect?: ProductModifierCategoryWhereUniqueInput | ProductModifierCategoryWhereUniqueInput[]
    delete?: ProductModifierCategoryWhereUniqueInput | ProductModifierCategoryWhereUniqueInput[]
    connect?: ProductModifierCategoryWhereUniqueInput | ProductModifierCategoryWhereUniqueInput[]
    update?: ProductModifierCategoryUpdateWithWhereUniqueWithoutProductInput | ProductModifierCategoryUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductModifierCategoryUpdateManyWithWhereWithoutProductInput | ProductModifierCategoryUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductModifierCategoryScalarWhereInput | ProductModifierCategoryScalarWhereInput[]
  }

  export type PromotionModifierMarkupUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<PromotionModifierMarkupCreateWithoutProductInput, PromotionModifierMarkupUncheckedCreateWithoutProductInput> | PromotionModifierMarkupCreateWithoutProductInput[] | PromotionModifierMarkupUncheckedCreateWithoutProductInput[]
    connectOrCreate?: PromotionModifierMarkupCreateOrConnectWithoutProductInput | PromotionModifierMarkupCreateOrConnectWithoutProductInput[]
    upsert?: PromotionModifierMarkupUpsertWithWhereUniqueWithoutProductInput | PromotionModifierMarkupUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: PromotionModifierMarkupCreateManyProductInputEnvelope
    set?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    disconnect?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    delete?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    connect?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    update?: PromotionModifierMarkupUpdateWithWhereUniqueWithoutProductInput | PromotionModifierMarkupUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: PromotionModifierMarkupUpdateManyWithWhereWithoutProductInput | PromotionModifierMarkupUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: PromotionModifierMarkupScalarWhereInput | PromotionModifierMarkupScalarWhereInput[]
  }

  export type PromotionProductUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<PromotionProductCreateWithoutProductInput, PromotionProductUncheckedCreateWithoutProductInput> | PromotionProductCreateWithoutProductInput[] | PromotionProductUncheckedCreateWithoutProductInput[]
    connectOrCreate?: PromotionProductCreateOrConnectWithoutProductInput | PromotionProductCreateOrConnectWithoutProductInput[]
    upsert?: PromotionProductUpsertWithWhereUniqueWithoutProductInput | PromotionProductUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: PromotionProductCreateManyProductInputEnvelope
    set?: PromotionProductWhereUniqueInput | PromotionProductWhereUniqueInput[]
    disconnect?: PromotionProductWhereUniqueInput | PromotionProductWhereUniqueInput[]
    delete?: PromotionProductWhereUniqueInput | PromotionProductWhereUniqueInput[]
    connect?: PromotionProductWhereUniqueInput | PromotionProductWhereUniqueInput[]
    update?: PromotionProductUpdateWithWhereUniqueWithoutProductInput | PromotionProductUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: PromotionProductUpdateManyWithWhereWithoutProductInput | PromotionProductUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: PromotionProductScalarWhereInput | PromotionProductScalarWhereInput[]
  }

  export type ProductImageUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput> | ProductImageCreateWithoutProductInput[] | ProductImageUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductImageCreateOrConnectWithoutProductInput | ProductImageCreateOrConnectWithoutProductInput[]
    upsert?: ProductImageUpsertWithWhereUniqueWithoutProductInput | ProductImageUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductImageCreateManyProductInputEnvelope
    set?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    disconnect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    delete?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    connect?: ProductImageWhereUniqueInput | ProductImageWhereUniqueInput[]
    update?: ProductImageUpdateWithWhereUniqueWithoutProductInput | ProductImageUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductImageUpdateManyWithWhereWithoutProductInput | ProductImageUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductImageScalarWhereInput | ProductImageScalarWhereInput[]
  }

  export type MenuProductCreateNestedOneWithoutProductImagesInput = {
    create?: XOR<MenuProductCreateWithoutProductImagesInput, MenuProductUncheckedCreateWithoutProductImagesInput>
    connectOrCreate?: MenuProductCreateOrConnectWithoutProductImagesInput
    connect?: MenuProductWhereUniqueInput
  }

  export type MenuProductUpdateOneWithoutProductImagesNestedInput = {
    create?: XOR<MenuProductCreateWithoutProductImagesInput, MenuProductUncheckedCreateWithoutProductImagesInput>
    connectOrCreate?: MenuProductCreateOrConnectWithoutProductImagesInput
    upsert?: MenuProductUpsertWithoutProductImagesInput
    disconnect?: MenuProductWhereInput | boolean
    delete?: MenuProductWhereInput | boolean
    connect?: MenuProductWhereUniqueInput
    update?: XOR<XOR<MenuProductUpdateToOneWithWhereWithoutProductImagesInput, MenuProductUpdateWithoutProductImagesInput>, MenuProductUncheckedUpdateWithoutProductImagesInput>
  }

  export type CompanyCreateNestedOneWithoutModifierCategoriesInput = {
    create?: XOR<CompanyCreateWithoutModifierCategoriesInput, CompanyUncheckedCreateWithoutModifierCategoriesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutModifierCategoriesInput
    connect?: CompanyWhereUniqueInput
  }

  export type ModifierCreateNestedManyWithoutModifierCategoryInput = {
    create?: XOR<ModifierCreateWithoutModifierCategoryInput, ModifierUncheckedCreateWithoutModifierCategoryInput> | ModifierCreateWithoutModifierCategoryInput[] | ModifierUncheckedCreateWithoutModifierCategoryInput[]
    connectOrCreate?: ModifierCreateOrConnectWithoutModifierCategoryInput | ModifierCreateOrConnectWithoutModifierCategoryInput[]
    createMany?: ModifierCreateManyModifierCategoryInputEnvelope
    connect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
  }

  export type ProductModifierCategoryCreateNestedManyWithoutModifierCategoryInput = {
    create?: XOR<ProductModifierCategoryCreateWithoutModifierCategoryInput, ProductModifierCategoryUncheckedCreateWithoutModifierCategoryInput> | ProductModifierCategoryCreateWithoutModifierCategoryInput[] | ProductModifierCategoryUncheckedCreateWithoutModifierCategoryInput[]
    connectOrCreate?: ProductModifierCategoryCreateOrConnectWithoutModifierCategoryInput | ProductModifierCategoryCreateOrConnectWithoutModifierCategoryInput[]
    createMany?: ProductModifierCategoryCreateManyModifierCategoryInputEnvelope
    connect?: ProductModifierCategoryWhereUniqueInput | ProductModifierCategoryWhereUniqueInput[]
  }

  export type ModifierUncheckedCreateNestedManyWithoutModifierCategoryInput = {
    create?: XOR<ModifierCreateWithoutModifierCategoryInput, ModifierUncheckedCreateWithoutModifierCategoryInput> | ModifierCreateWithoutModifierCategoryInput[] | ModifierUncheckedCreateWithoutModifierCategoryInput[]
    connectOrCreate?: ModifierCreateOrConnectWithoutModifierCategoryInput | ModifierCreateOrConnectWithoutModifierCategoryInput[]
    createMany?: ModifierCreateManyModifierCategoryInputEnvelope
    connect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
  }

  export type ProductModifierCategoryUncheckedCreateNestedManyWithoutModifierCategoryInput = {
    create?: XOR<ProductModifierCategoryCreateWithoutModifierCategoryInput, ProductModifierCategoryUncheckedCreateWithoutModifierCategoryInput> | ProductModifierCategoryCreateWithoutModifierCategoryInput[] | ProductModifierCategoryUncheckedCreateWithoutModifierCategoryInput[]
    connectOrCreate?: ProductModifierCategoryCreateOrConnectWithoutModifierCategoryInput | ProductModifierCategoryCreateOrConnectWithoutModifierCategoryInput[]
    createMany?: ProductModifierCategoryCreateManyModifierCategoryInputEnvelope
    connect?: ProductModifierCategoryWhereUniqueInput | ProductModifierCategoryWhereUniqueInput[]
  }

  export type EnumModifierSelectionTypeFieldUpdateOperationsInput = {
    set?: $Enums.ModifierSelectionType
  }

  export type CompanyUpdateOneRequiredWithoutModifierCategoriesNestedInput = {
    create?: XOR<CompanyCreateWithoutModifierCategoriesInput, CompanyUncheckedCreateWithoutModifierCategoriesInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutModifierCategoriesInput
    upsert?: CompanyUpsertWithoutModifierCategoriesInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutModifierCategoriesInput, CompanyUpdateWithoutModifierCategoriesInput>, CompanyUncheckedUpdateWithoutModifierCategoriesInput>
  }

  export type ModifierUpdateManyWithoutModifierCategoryNestedInput = {
    create?: XOR<ModifierCreateWithoutModifierCategoryInput, ModifierUncheckedCreateWithoutModifierCategoryInput> | ModifierCreateWithoutModifierCategoryInput[] | ModifierUncheckedCreateWithoutModifierCategoryInput[]
    connectOrCreate?: ModifierCreateOrConnectWithoutModifierCategoryInput | ModifierCreateOrConnectWithoutModifierCategoryInput[]
    upsert?: ModifierUpsertWithWhereUniqueWithoutModifierCategoryInput | ModifierUpsertWithWhereUniqueWithoutModifierCategoryInput[]
    createMany?: ModifierCreateManyModifierCategoryInputEnvelope
    set?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    disconnect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    delete?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    connect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    update?: ModifierUpdateWithWhereUniqueWithoutModifierCategoryInput | ModifierUpdateWithWhereUniqueWithoutModifierCategoryInput[]
    updateMany?: ModifierUpdateManyWithWhereWithoutModifierCategoryInput | ModifierUpdateManyWithWhereWithoutModifierCategoryInput[]
    deleteMany?: ModifierScalarWhereInput | ModifierScalarWhereInput[]
  }

  export type ProductModifierCategoryUpdateManyWithoutModifierCategoryNestedInput = {
    create?: XOR<ProductModifierCategoryCreateWithoutModifierCategoryInput, ProductModifierCategoryUncheckedCreateWithoutModifierCategoryInput> | ProductModifierCategoryCreateWithoutModifierCategoryInput[] | ProductModifierCategoryUncheckedCreateWithoutModifierCategoryInput[]
    connectOrCreate?: ProductModifierCategoryCreateOrConnectWithoutModifierCategoryInput | ProductModifierCategoryCreateOrConnectWithoutModifierCategoryInput[]
    upsert?: ProductModifierCategoryUpsertWithWhereUniqueWithoutModifierCategoryInput | ProductModifierCategoryUpsertWithWhereUniqueWithoutModifierCategoryInput[]
    createMany?: ProductModifierCategoryCreateManyModifierCategoryInputEnvelope
    set?: ProductModifierCategoryWhereUniqueInput | ProductModifierCategoryWhereUniqueInput[]
    disconnect?: ProductModifierCategoryWhereUniqueInput | ProductModifierCategoryWhereUniqueInput[]
    delete?: ProductModifierCategoryWhereUniqueInput | ProductModifierCategoryWhereUniqueInput[]
    connect?: ProductModifierCategoryWhereUniqueInput | ProductModifierCategoryWhereUniqueInput[]
    update?: ProductModifierCategoryUpdateWithWhereUniqueWithoutModifierCategoryInput | ProductModifierCategoryUpdateWithWhereUniqueWithoutModifierCategoryInput[]
    updateMany?: ProductModifierCategoryUpdateManyWithWhereWithoutModifierCategoryInput | ProductModifierCategoryUpdateManyWithWhereWithoutModifierCategoryInput[]
    deleteMany?: ProductModifierCategoryScalarWhereInput | ProductModifierCategoryScalarWhereInput[]
  }

  export type ModifierUncheckedUpdateManyWithoutModifierCategoryNestedInput = {
    create?: XOR<ModifierCreateWithoutModifierCategoryInput, ModifierUncheckedCreateWithoutModifierCategoryInput> | ModifierCreateWithoutModifierCategoryInput[] | ModifierUncheckedCreateWithoutModifierCategoryInput[]
    connectOrCreate?: ModifierCreateOrConnectWithoutModifierCategoryInput | ModifierCreateOrConnectWithoutModifierCategoryInput[]
    upsert?: ModifierUpsertWithWhereUniqueWithoutModifierCategoryInput | ModifierUpsertWithWhereUniqueWithoutModifierCategoryInput[]
    createMany?: ModifierCreateManyModifierCategoryInputEnvelope
    set?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    disconnect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    delete?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    connect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    update?: ModifierUpdateWithWhereUniqueWithoutModifierCategoryInput | ModifierUpdateWithWhereUniqueWithoutModifierCategoryInput[]
    updateMany?: ModifierUpdateManyWithWhereWithoutModifierCategoryInput | ModifierUpdateManyWithWhereWithoutModifierCategoryInput[]
    deleteMany?: ModifierScalarWhereInput | ModifierScalarWhereInput[]
  }

  export type ProductModifierCategoryUncheckedUpdateManyWithoutModifierCategoryNestedInput = {
    create?: XOR<ProductModifierCategoryCreateWithoutModifierCategoryInput, ProductModifierCategoryUncheckedCreateWithoutModifierCategoryInput> | ProductModifierCategoryCreateWithoutModifierCategoryInput[] | ProductModifierCategoryUncheckedCreateWithoutModifierCategoryInput[]
    connectOrCreate?: ProductModifierCategoryCreateOrConnectWithoutModifierCategoryInput | ProductModifierCategoryCreateOrConnectWithoutModifierCategoryInput[]
    upsert?: ProductModifierCategoryUpsertWithWhereUniqueWithoutModifierCategoryInput | ProductModifierCategoryUpsertWithWhereUniqueWithoutModifierCategoryInput[]
    createMany?: ProductModifierCategoryCreateManyModifierCategoryInputEnvelope
    set?: ProductModifierCategoryWhereUniqueInput | ProductModifierCategoryWhereUniqueInput[]
    disconnect?: ProductModifierCategoryWhereUniqueInput | ProductModifierCategoryWhereUniqueInput[]
    delete?: ProductModifierCategoryWhereUniqueInput | ProductModifierCategoryWhereUniqueInput[]
    connect?: ProductModifierCategoryWhereUniqueInput | ProductModifierCategoryWhereUniqueInput[]
    update?: ProductModifierCategoryUpdateWithWhereUniqueWithoutModifierCategoryInput | ProductModifierCategoryUpdateWithWhereUniqueWithoutModifierCategoryInput[]
    updateMany?: ProductModifierCategoryUpdateManyWithWhereWithoutModifierCategoryInput | ProductModifierCategoryUpdateManyWithWhereWithoutModifierCategoryInput[]
    deleteMany?: ProductModifierCategoryScalarWhereInput | ProductModifierCategoryScalarWhereInput[]
  }

  export type CompanyCreateNestedOneWithoutModifiersInput = {
    create?: XOR<CompanyCreateWithoutModifiersInput, CompanyUncheckedCreateWithoutModifiersInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutModifiersInput
    connect?: CompanyWhereUniqueInput
  }

  export type ModifierCategoryCreateNestedOneWithoutModifiersInput = {
    create?: XOR<ModifierCategoryCreateWithoutModifiersInput, ModifierCategoryUncheckedCreateWithoutModifiersInput>
    connectOrCreate?: ModifierCategoryCreateOrConnectWithoutModifiersInput
    connect?: ModifierCategoryWhereUniqueInput
  }

  export type PromotionModifierMarkupCreateNestedManyWithoutModifierInput = {
    create?: XOR<PromotionModifierMarkupCreateWithoutModifierInput, PromotionModifierMarkupUncheckedCreateWithoutModifierInput> | PromotionModifierMarkupCreateWithoutModifierInput[] | PromotionModifierMarkupUncheckedCreateWithoutModifierInput[]
    connectOrCreate?: PromotionModifierMarkupCreateOrConnectWithoutModifierInput | PromotionModifierMarkupCreateOrConnectWithoutModifierInput[]
    createMany?: PromotionModifierMarkupCreateManyModifierInputEnvelope
    connect?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
  }

  export type PromotionModifierMarkupUncheckedCreateNestedManyWithoutModifierInput = {
    create?: XOR<PromotionModifierMarkupCreateWithoutModifierInput, PromotionModifierMarkupUncheckedCreateWithoutModifierInput> | PromotionModifierMarkupCreateWithoutModifierInput[] | PromotionModifierMarkupUncheckedCreateWithoutModifierInput[]
    connectOrCreate?: PromotionModifierMarkupCreateOrConnectWithoutModifierInput | PromotionModifierMarkupCreateOrConnectWithoutModifierInput[]
    createMany?: PromotionModifierMarkupCreateManyModifierInputEnvelope
    connect?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
  }

  export type CompanyUpdateOneRequiredWithoutModifiersNestedInput = {
    create?: XOR<CompanyCreateWithoutModifiersInput, CompanyUncheckedCreateWithoutModifiersInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutModifiersInput
    upsert?: CompanyUpsertWithoutModifiersInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutModifiersInput, CompanyUpdateWithoutModifiersInput>, CompanyUncheckedUpdateWithoutModifiersInput>
  }

  export type ModifierCategoryUpdateOneRequiredWithoutModifiersNestedInput = {
    create?: XOR<ModifierCategoryCreateWithoutModifiersInput, ModifierCategoryUncheckedCreateWithoutModifiersInput>
    connectOrCreate?: ModifierCategoryCreateOrConnectWithoutModifiersInput
    upsert?: ModifierCategoryUpsertWithoutModifiersInput
    connect?: ModifierCategoryWhereUniqueInput
    update?: XOR<XOR<ModifierCategoryUpdateToOneWithWhereWithoutModifiersInput, ModifierCategoryUpdateWithoutModifiersInput>, ModifierCategoryUncheckedUpdateWithoutModifiersInput>
  }

  export type PromotionModifierMarkupUpdateManyWithoutModifierNestedInput = {
    create?: XOR<PromotionModifierMarkupCreateWithoutModifierInput, PromotionModifierMarkupUncheckedCreateWithoutModifierInput> | PromotionModifierMarkupCreateWithoutModifierInput[] | PromotionModifierMarkupUncheckedCreateWithoutModifierInput[]
    connectOrCreate?: PromotionModifierMarkupCreateOrConnectWithoutModifierInput | PromotionModifierMarkupCreateOrConnectWithoutModifierInput[]
    upsert?: PromotionModifierMarkupUpsertWithWhereUniqueWithoutModifierInput | PromotionModifierMarkupUpsertWithWhereUniqueWithoutModifierInput[]
    createMany?: PromotionModifierMarkupCreateManyModifierInputEnvelope
    set?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    disconnect?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    delete?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    connect?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    update?: PromotionModifierMarkupUpdateWithWhereUniqueWithoutModifierInput | PromotionModifierMarkupUpdateWithWhereUniqueWithoutModifierInput[]
    updateMany?: PromotionModifierMarkupUpdateManyWithWhereWithoutModifierInput | PromotionModifierMarkupUpdateManyWithWhereWithoutModifierInput[]
    deleteMany?: PromotionModifierMarkupScalarWhereInput | PromotionModifierMarkupScalarWhereInput[]
  }

  export type PromotionModifierMarkupUncheckedUpdateManyWithoutModifierNestedInput = {
    create?: XOR<PromotionModifierMarkupCreateWithoutModifierInput, PromotionModifierMarkupUncheckedCreateWithoutModifierInput> | PromotionModifierMarkupCreateWithoutModifierInput[] | PromotionModifierMarkupUncheckedCreateWithoutModifierInput[]
    connectOrCreate?: PromotionModifierMarkupCreateOrConnectWithoutModifierInput | PromotionModifierMarkupCreateOrConnectWithoutModifierInput[]
    upsert?: PromotionModifierMarkupUpsertWithWhereUniqueWithoutModifierInput | PromotionModifierMarkupUpsertWithWhereUniqueWithoutModifierInput[]
    createMany?: PromotionModifierMarkupCreateManyModifierInputEnvelope
    set?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    disconnect?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    delete?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    connect?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    update?: PromotionModifierMarkupUpdateWithWhereUniqueWithoutModifierInput | PromotionModifierMarkupUpdateWithWhereUniqueWithoutModifierInput[]
    updateMany?: PromotionModifierMarkupUpdateManyWithWhereWithoutModifierInput | PromotionModifierMarkupUpdateManyWithWhereWithoutModifierInput[]
    deleteMany?: PromotionModifierMarkupScalarWhereInput | PromotionModifierMarkupScalarWhereInput[]
  }

  export type ModifierCategoryCreateNestedOneWithoutProductCategoriesInput = {
    create?: XOR<ModifierCategoryCreateWithoutProductCategoriesInput, ModifierCategoryUncheckedCreateWithoutProductCategoriesInput>
    connectOrCreate?: ModifierCategoryCreateOrConnectWithoutProductCategoriesInput
    connect?: ModifierCategoryWhereUniqueInput
  }

  export type MenuProductCreateNestedOneWithoutModifierCategoriesInput = {
    create?: XOR<MenuProductCreateWithoutModifierCategoriesInput, MenuProductUncheckedCreateWithoutModifierCategoriesInput>
    connectOrCreate?: MenuProductCreateOrConnectWithoutModifierCategoriesInput
    connect?: MenuProductWhereUniqueInput
  }

  export type ModifierCategoryUpdateOneRequiredWithoutProductCategoriesNestedInput = {
    create?: XOR<ModifierCategoryCreateWithoutProductCategoriesInput, ModifierCategoryUncheckedCreateWithoutProductCategoriesInput>
    connectOrCreate?: ModifierCategoryCreateOrConnectWithoutProductCategoriesInput
    upsert?: ModifierCategoryUpsertWithoutProductCategoriesInput
    connect?: ModifierCategoryWhereUniqueInput
    update?: XOR<XOR<ModifierCategoryUpdateToOneWithWhereWithoutProductCategoriesInput, ModifierCategoryUpdateWithoutProductCategoriesInput>, ModifierCategoryUncheckedUpdateWithoutProductCategoriesInput>
  }

  export type MenuProductUpdateOneRequiredWithoutModifierCategoriesNestedInput = {
    create?: XOR<MenuProductCreateWithoutModifierCategoriesInput, MenuProductUncheckedCreateWithoutModifierCategoriesInput>
    connectOrCreate?: MenuProductCreateOrConnectWithoutModifierCategoriesInput
    upsert?: MenuProductUpsertWithoutModifierCategoriesInput
    connect?: MenuProductWhereUniqueInput
    update?: XOR<XOR<MenuProductUpdateToOneWithWhereWithoutModifierCategoriesInput, MenuProductUpdateWithoutModifierCategoriesInput>, MenuProductUncheckedUpdateWithoutModifierCategoriesInput>
  }

  export type PriceHistoryCreateNestedManyWithoutPromotionInput = {
    create?: XOR<PriceHistoryCreateWithoutPromotionInput, PriceHistoryUncheckedCreateWithoutPromotionInput> | PriceHistoryCreateWithoutPromotionInput[] | PriceHistoryUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PriceHistoryCreateOrConnectWithoutPromotionInput | PriceHistoryCreateOrConnectWithoutPromotionInput[]
    createMany?: PriceHistoryCreateManyPromotionInputEnvelope
    connect?: PriceHistoryWhereUniqueInput | PriceHistoryWhereUniqueInput[]
  }

  export type PromotionModifierMarkupCreateNestedManyWithoutPromotionInput = {
    create?: XOR<PromotionModifierMarkupCreateWithoutPromotionInput, PromotionModifierMarkupUncheckedCreateWithoutPromotionInput> | PromotionModifierMarkupCreateWithoutPromotionInput[] | PromotionModifierMarkupUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PromotionModifierMarkupCreateOrConnectWithoutPromotionInput | PromotionModifierMarkupCreateOrConnectWithoutPromotionInput[]
    createMany?: PromotionModifierMarkupCreateManyPromotionInputEnvelope
    connect?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
  }

  export type PromotionProductCreateNestedManyWithoutPromotionInput = {
    create?: XOR<PromotionProductCreateWithoutPromotionInput, PromotionProductUncheckedCreateWithoutPromotionInput> | PromotionProductCreateWithoutPromotionInput[] | PromotionProductUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PromotionProductCreateOrConnectWithoutPromotionInput | PromotionProductCreateOrConnectWithoutPromotionInput[]
    createMany?: PromotionProductCreateManyPromotionInputEnvelope
    connect?: PromotionProductWhereUniqueInput | PromotionProductWhereUniqueInput[]
  }

  export type CompanyCreateNestedOneWithoutPromotionsInput = {
    create?: XOR<CompanyCreateWithoutPromotionsInput, CompanyUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutPromotionsInput
    connect?: CompanyWhereUniqueInput
  }

  export type PriceHistoryUncheckedCreateNestedManyWithoutPromotionInput = {
    create?: XOR<PriceHistoryCreateWithoutPromotionInput, PriceHistoryUncheckedCreateWithoutPromotionInput> | PriceHistoryCreateWithoutPromotionInput[] | PriceHistoryUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PriceHistoryCreateOrConnectWithoutPromotionInput | PriceHistoryCreateOrConnectWithoutPromotionInput[]
    createMany?: PriceHistoryCreateManyPromotionInputEnvelope
    connect?: PriceHistoryWhereUniqueInput | PriceHistoryWhereUniqueInput[]
  }

  export type PromotionModifierMarkupUncheckedCreateNestedManyWithoutPromotionInput = {
    create?: XOR<PromotionModifierMarkupCreateWithoutPromotionInput, PromotionModifierMarkupUncheckedCreateWithoutPromotionInput> | PromotionModifierMarkupCreateWithoutPromotionInput[] | PromotionModifierMarkupUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PromotionModifierMarkupCreateOrConnectWithoutPromotionInput | PromotionModifierMarkupCreateOrConnectWithoutPromotionInput[]
    createMany?: PromotionModifierMarkupCreateManyPromotionInputEnvelope
    connect?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
  }

  export type PromotionProductUncheckedCreateNestedManyWithoutPromotionInput = {
    create?: XOR<PromotionProductCreateWithoutPromotionInput, PromotionProductUncheckedCreateWithoutPromotionInput> | PromotionProductCreateWithoutPromotionInput[] | PromotionProductUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PromotionProductCreateOrConnectWithoutPromotionInput | PromotionProductCreateOrConnectWithoutPromotionInput[]
    createMany?: PromotionProductCreateManyPromotionInputEnvelope
    connect?: PromotionProductWhereUniqueInput | PromotionProductWhereUniqueInput[]
  }

  export type PriceHistoryUpdateManyWithoutPromotionNestedInput = {
    create?: XOR<PriceHistoryCreateWithoutPromotionInput, PriceHistoryUncheckedCreateWithoutPromotionInput> | PriceHistoryCreateWithoutPromotionInput[] | PriceHistoryUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PriceHistoryCreateOrConnectWithoutPromotionInput | PriceHistoryCreateOrConnectWithoutPromotionInput[]
    upsert?: PriceHistoryUpsertWithWhereUniqueWithoutPromotionInput | PriceHistoryUpsertWithWhereUniqueWithoutPromotionInput[]
    createMany?: PriceHistoryCreateManyPromotionInputEnvelope
    set?: PriceHistoryWhereUniqueInput | PriceHistoryWhereUniqueInput[]
    disconnect?: PriceHistoryWhereUniqueInput | PriceHistoryWhereUniqueInput[]
    delete?: PriceHistoryWhereUniqueInput | PriceHistoryWhereUniqueInput[]
    connect?: PriceHistoryWhereUniqueInput | PriceHistoryWhereUniqueInput[]
    update?: PriceHistoryUpdateWithWhereUniqueWithoutPromotionInput | PriceHistoryUpdateWithWhereUniqueWithoutPromotionInput[]
    updateMany?: PriceHistoryUpdateManyWithWhereWithoutPromotionInput | PriceHistoryUpdateManyWithWhereWithoutPromotionInput[]
    deleteMany?: PriceHistoryScalarWhereInput | PriceHistoryScalarWhereInput[]
  }

  export type PromotionModifierMarkupUpdateManyWithoutPromotionNestedInput = {
    create?: XOR<PromotionModifierMarkupCreateWithoutPromotionInput, PromotionModifierMarkupUncheckedCreateWithoutPromotionInput> | PromotionModifierMarkupCreateWithoutPromotionInput[] | PromotionModifierMarkupUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PromotionModifierMarkupCreateOrConnectWithoutPromotionInput | PromotionModifierMarkupCreateOrConnectWithoutPromotionInput[]
    upsert?: PromotionModifierMarkupUpsertWithWhereUniqueWithoutPromotionInput | PromotionModifierMarkupUpsertWithWhereUniqueWithoutPromotionInput[]
    createMany?: PromotionModifierMarkupCreateManyPromotionInputEnvelope
    set?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    disconnect?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    delete?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    connect?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    update?: PromotionModifierMarkupUpdateWithWhereUniqueWithoutPromotionInput | PromotionModifierMarkupUpdateWithWhereUniqueWithoutPromotionInput[]
    updateMany?: PromotionModifierMarkupUpdateManyWithWhereWithoutPromotionInput | PromotionModifierMarkupUpdateManyWithWhereWithoutPromotionInput[]
    deleteMany?: PromotionModifierMarkupScalarWhereInput | PromotionModifierMarkupScalarWhereInput[]
  }

  export type PromotionProductUpdateManyWithoutPromotionNestedInput = {
    create?: XOR<PromotionProductCreateWithoutPromotionInput, PromotionProductUncheckedCreateWithoutPromotionInput> | PromotionProductCreateWithoutPromotionInput[] | PromotionProductUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PromotionProductCreateOrConnectWithoutPromotionInput | PromotionProductCreateOrConnectWithoutPromotionInput[]
    upsert?: PromotionProductUpsertWithWhereUniqueWithoutPromotionInput | PromotionProductUpsertWithWhereUniqueWithoutPromotionInput[]
    createMany?: PromotionProductCreateManyPromotionInputEnvelope
    set?: PromotionProductWhereUniqueInput | PromotionProductWhereUniqueInput[]
    disconnect?: PromotionProductWhereUniqueInput | PromotionProductWhereUniqueInput[]
    delete?: PromotionProductWhereUniqueInput | PromotionProductWhereUniqueInput[]
    connect?: PromotionProductWhereUniqueInput | PromotionProductWhereUniqueInput[]
    update?: PromotionProductUpdateWithWhereUniqueWithoutPromotionInput | PromotionProductUpdateWithWhereUniqueWithoutPromotionInput[]
    updateMany?: PromotionProductUpdateManyWithWhereWithoutPromotionInput | PromotionProductUpdateManyWithWhereWithoutPromotionInput[]
    deleteMany?: PromotionProductScalarWhereInput | PromotionProductScalarWhereInput[]
  }

  export type CompanyUpdateOneRequiredWithoutPromotionsNestedInput = {
    create?: XOR<CompanyCreateWithoutPromotionsInput, CompanyUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutPromotionsInput
    upsert?: CompanyUpsertWithoutPromotionsInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutPromotionsInput, CompanyUpdateWithoutPromotionsInput>, CompanyUncheckedUpdateWithoutPromotionsInput>
  }

  export type PriceHistoryUncheckedUpdateManyWithoutPromotionNestedInput = {
    create?: XOR<PriceHistoryCreateWithoutPromotionInput, PriceHistoryUncheckedCreateWithoutPromotionInput> | PriceHistoryCreateWithoutPromotionInput[] | PriceHistoryUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PriceHistoryCreateOrConnectWithoutPromotionInput | PriceHistoryCreateOrConnectWithoutPromotionInput[]
    upsert?: PriceHistoryUpsertWithWhereUniqueWithoutPromotionInput | PriceHistoryUpsertWithWhereUniqueWithoutPromotionInput[]
    createMany?: PriceHistoryCreateManyPromotionInputEnvelope
    set?: PriceHistoryWhereUniqueInput | PriceHistoryWhereUniqueInput[]
    disconnect?: PriceHistoryWhereUniqueInput | PriceHistoryWhereUniqueInput[]
    delete?: PriceHistoryWhereUniqueInput | PriceHistoryWhereUniqueInput[]
    connect?: PriceHistoryWhereUniqueInput | PriceHistoryWhereUniqueInput[]
    update?: PriceHistoryUpdateWithWhereUniqueWithoutPromotionInput | PriceHistoryUpdateWithWhereUniqueWithoutPromotionInput[]
    updateMany?: PriceHistoryUpdateManyWithWhereWithoutPromotionInput | PriceHistoryUpdateManyWithWhereWithoutPromotionInput[]
    deleteMany?: PriceHistoryScalarWhereInput | PriceHistoryScalarWhereInput[]
  }

  export type PromotionModifierMarkupUncheckedUpdateManyWithoutPromotionNestedInput = {
    create?: XOR<PromotionModifierMarkupCreateWithoutPromotionInput, PromotionModifierMarkupUncheckedCreateWithoutPromotionInput> | PromotionModifierMarkupCreateWithoutPromotionInput[] | PromotionModifierMarkupUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PromotionModifierMarkupCreateOrConnectWithoutPromotionInput | PromotionModifierMarkupCreateOrConnectWithoutPromotionInput[]
    upsert?: PromotionModifierMarkupUpsertWithWhereUniqueWithoutPromotionInput | PromotionModifierMarkupUpsertWithWhereUniqueWithoutPromotionInput[]
    createMany?: PromotionModifierMarkupCreateManyPromotionInputEnvelope
    set?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    disconnect?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    delete?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    connect?: PromotionModifierMarkupWhereUniqueInput | PromotionModifierMarkupWhereUniqueInput[]
    update?: PromotionModifierMarkupUpdateWithWhereUniqueWithoutPromotionInput | PromotionModifierMarkupUpdateWithWhereUniqueWithoutPromotionInput[]
    updateMany?: PromotionModifierMarkupUpdateManyWithWhereWithoutPromotionInput | PromotionModifierMarkupUpdateManyWithWhereWithoutPromotionInput[]
    deleteMany?: PromotionModifierMarkupScalarWhereInput | PromotionModifierMarkupScalarWhereInput[]
  }

  export type PromotionProductUncheckedUpdateManyWithoutPromotionNestedInput = {
    create?: XOR<PromotionProductCreateWithoutPromotionInput, PromotionProductUncheckedCreateWithoutPromotionInput> | PromotionProductCreateWithoutPromotionInput[] | PromotionProductUncheckedCreateWithoutPromotionInput[]
    connectOrCreate?: PromotionProductCreateOrConnectWithoutPromotionInput | PromotionProductCreateOrConnectWithoutPromotionInput[]
    upsert?: PromotionProductUpsertWithWhereUniqueWithoutPromotionInput | PromotionProductUpsertWithWhereUniqueWithoutPromotionInput[]
    createMany?: PromotionProductCreateManyPromotionInputEnvelope
    set?: PromotionProductWhereUniqueInput | PromotionProductWhereUniqueInput[]
    disconnect?: PromotionProductWhereUniqueInput | PromotionProductWhereUniqueInput[]
    delete?: PromotionProductWhereUniqueInput | PromotionProductWhereUniqueInput[]
    connect?: PromotionProductWhereUniqueInput | PromotionProductWhereUniqueInput[]
    update?: PromotionProductUpdateWithWhereUniqueWithoutPromotionInput | PromotionProductUpdateWithWhereUniqueWithoutPromotionInput[]
    updateMany?: PromotionProductUpdateManyWithWhereWithoutPromotionInput | PromotionProductUpdateManyWithWhereWithoutPromotionInput[]
    deleteMany?: PromotionProductScalarWhereInput | PromotionProductScalarWhereInput[]
  }

  export type MenuProductCreateNestedOneWithoutPromotionProductsInput = {
    create?: XOR<MenuProductCreateWithoutPromotionProductsInput, MenuProductUncheckedCreateWithoutPromotionProductsInput>
    connectOrCreate?: MenuProductCreateOrConnectWithoutPromotionProductsInput
    connect?: MenuProductWhereUniqueInput
  }

  export type PromotionCreateNestedOneWithoutPromotionProductsInput = {
    create?: XOR<PromotionCreateWithoutPromotionProductsInput, PromotionUncheckedCreateWithoutPromotionProductsInput>
    connectOrCreate?: PromotionCreateOrConnectWithoutPromotionProductsInput
    connect?: PromotionWhereUniqueInput
  }

  export type MenuProductUpdateOneRequiredWithoutPromotionProductsNestedInput = {
    create?: XOR<MenuProductCreateWithoutPromotionProductsInput, MenuProductUncheckedCreateWithoutPromotionProductsInput>
    connectOrCreate?: MenuProductCreateOrConnectWithoutPromotionProductsInput
    upsert?: MenuProductUpsertWithoutPromotionProductsInput
    connect?: MenuProductWhereUniqueInput
    update?: XOR<XOR<MenuProductUpdateToOneWithWhereWithoutPromotionProductsInput, MenuProductUpdateWithoutPromotionProductsInput>, MenuProductUncheckedUpdateWithoutPromotionProductsInput>
  }

  export type PromotionUpdateOneRequiredWithoutPromotionProductsNestedInput = {
    create?: XOR<PromotionCreateWithoutPromotionProductsInput, PromotionUncheckedCreateWithoutPromotionProductsInput>
    connectOrCreate?: PromotionCreateOrConnectWithoutPromotionProductsInput
    upsert?: PromotionUpsertWithoutPromotionProductsInput
    connect?: PromotionWhereUniqueInput
    update?: XOR<XOR<PromotionUpdateToOneWithWhereWithoutPromotionProductsInput, PromotionUpdateWithoutPromotionProductsInput>, PromotionUncheckedUpdateWithoutPromotionProductsInput>
  }

  export type ModifierCreateNestedOneWithoutPromotionMarkupsInput = {
    create?: XOR<ModifierCreateWithoutPromotionMarkupsInput, ModifierUncheckedCreateWithoutPromotionMarkupsInput>
    connectOrCreate?: ModifierCreateOrConnectWithoutPromotionMarkupsInput
    connect?: ModifierWhereUniqueInput
  }

  export type MenuProductCreateNestedOneWithoutPromotionModifierMarkupsInput = {
    create?: XOR<MenuProductCreateWithoutPromotionModifierMarkupsInput, MenuProductUncheckedCreateWithoutPromotionModifierMarkupsInput>
    connectOrCreate?: MenuProductCreateOrConnectWithoutPromotionModifierMarkupsInput
    connect?: MenuProductWhereUniqueInput
  }

  export type PromotionCreateNestedOneWithoutModifierMarkupsInput = {
    create?: XOR<PromotionCreateWithoutModifierMarkupsInput, PromotionUncheckedCreateWithoutModifierMarkupsInput>
    connectOrCreate?: PromotionCreateOrConnectWithoutModifierMarkupsInput
    connect?: PromotionWhereUniqueInput
  }

  export type ModifierUpdateOneRequiredWithoutPromotionMarkupsNestedInput = {
    create?: XOR<ModifierCreateWithoutPromotionMarkupsInput, ModifierUncheckedCreateWithoutPromotionMarkupsInput>
    connectOrCreate?: ModifierCreateOrConnectWithoutPromotionMarkupsInput
    upsert?: ModifierUpsertWithoutPromotionMarkupsInput
    connect?: ModifierWhereUniqueInput
    update?: XOR<XOR<ModifierUpdateToOneWithWhereWithoutPromotionMarkupsInput, ModifierUpdateWithoutPromotionMarkupsInput>, ModifierUncheckedUpdateWithoutPromotionMarkupsInput>
  }

  export type MenuProductUpdateOneRequiredWithoutPromotionModifierMarkupsNestedInput = {
    create?: XOR<MenuProductCreateWithoutPromotionModifierMarkupsInput, MenuProductUncheckedCreateWithoutPromotionModifierMarkupsInput>
    connectOrCreate?: MenuProductCreateOrConnectWithoutPromotionModifierMarkupsInput
    upsert?: MenuProductUpsertWithoutPromotionModifierMarkupsInput
    connect?: MenuProductWhereUniqueInput
    update?: XOR<XOR<MenuProductUpdateToOneWithWhereWithoutPromotionModifierMarkupsInput, MenuProductUpdateWithoutPromotionModifierMarkupsInput>, MenuProductUncheckedUpdateWithoutPromotionModifierMarkupsInput>
  }

  export type PromotionUpdateOneRequiredWithoutModifierMarkupsNestedInput = {
    create?: XOR<PromotionCreateWithoutModifierMarkupsInput, PromotionUncheckedCreateWithoutModifierMarkupsInput>
    connectOrCreate?: PromotionCreateOrConnectWithoutModifierMarkupsInput
    upsert?: PromotionUpsertWithoutModifierMarkupsInput
    connect?: PromotionWhereUniqueInput
    update?: XOR<XOR<PromotionUpdateToOneWithWhereWithoutModifierMarkupsInput, PromotionUpdateWithoutModifierMarkupsInput>, PromotionUncheckedUpdateWithoutModifierMarkupsInput>
  }

  export type PromotionCreateNestedOneWithoutPriceHistoriesInput = {
    create?: XOR<PromotionCreateWithoutPriceHistoriesInput, PromotionUncheckedCreateWithoutPriceHistoriesInput>
    connectOrCreate?: PromotionCreateOrConnectWithoutPriceHistoriesInput
    connect?: PromotionWhereUniqueInput
  }

  export type PromotionUpdateOneWithoutPriceHistoriesNestedInput = {
    create?: XOR<PromotionCreateWithoutPriceHistoriesInput, PromotionUncheckedCreateWithoutPriceHistoriesInput>
    connectOrCreate?: PromotionCreateOrConnectWithoutPriceHistoriesInput
    upsert?: PromotionUpsertWithoutPriceHistoriesInput
    disconnect?: PromotionWhereInput | boolean
    delete?: PromotionWhereInput | boolean
    connect?: PromotionWhereUniqueInput
    update?: XOR<XOR<PromotionUpdateToOneWithWhereWithoutPriceHistoriesInput, PromotionUpdateWithoutPriceHistoriesInput>, PromotionUncheckedUpdateWithoutPriceHistoriesInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedEnumCompanyStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanyStatus | EnumCompanyStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CompanyStatus[] | ListEnumCompanyStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CompanyStatus[] | ListEnumCompanyStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCompanyStatusFilter<$PrismaModel> | $Enums.CompanyStatus
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumCompanyStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CompanyStatus | EnumCompanyStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CompanyStatus[] | ListEnumCompanyStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CompanyStatus[] | ListEnumCompanyStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCompanyStatusWithAggregatesFilter<$PrismaModel> | $Enums.CompanyStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCompanyStatusFilter<$PrismaModel>
    _max?: NestedEnumCompanyStatusFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumLicenseStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.LicenseStatus | EnumLicenseStatusFieldRefInput<$PrismaModel>
    in?: $Enums.LicenseStatus[] | ListEnumLicenseStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.LicenseStatus[] | ListEnumLicenseStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumLicenseStatusFilter<$PrismaModel> | $Enums.LicenseStatus
  }

  export type NestedEnumLicenseStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.LicenseStatus | EnumLicenseStatusFieldRefInput<$PrismaModel>
    in?: $Enums.LicenseStatus[] | ListEnumLicenseStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.LicenseStatus[] | ListEnumLicenseStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumLicenseStatusWithAggregatesFilter<$PrismaModel> | $Enums.LicenseStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLicenseStatusFilter<$PrismaModel>
    _max?: NestedEnumLicenseStatusFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type NestedEnumUserStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusFilter<$PrismaModel> | $Enums.UserStatus
  }

  export type NestedEnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type NestedEnumUserStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusWithAggregatesFilter<$PrismaModel> | $Enums.UserStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserStatusFilter<$PrismaModel>
    _max?: NestedEnumUserStatusFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumModifierSelectionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ModifierSelectionType | EnumModifierSelectionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ModifierSelectionType[] | ListEnumModifierSelectionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ModifierSelectionType[] | ListEnumModifierSelectionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumModifierSelectionTypeFilter<$PrismaModel> | $Enums.ModifierSelectionType
  }

  export type NestedEnumModifierSelectionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ModifierSelectionType | EnumModifierSelectionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ModifierSelectionType[] | ListEnumModifierSelectionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ModifierSelectionType[] | ListEnumModifierSelectionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumModifierSelectionTypeWithAggregatesFilter<$PrismaModel> | $Enums.ModifierSelectionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumModifierSelectionTypeFilter<$PrismaModel>
    _max?: NestedEnumModifierSelectionTypeFilter<$PrismaModel>
  }

  export type BranchCreateWithoutCompanyInput = {
    id?: string
    name: string
    phone?: string | null
    email?: string | null
    address?: string | null
    city?: string | null
    country?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    isDefault?: boolean
    isActive?: boolean
    allowsOnlineOrders?: boolean
    allowsDelivery?: boolean
    allowsPickup?: boolean
    timezone?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    nameAr: string
    openTime?: string | null
    closeTime?: string | null
    users?: UserCreateNestedManyWithoutBranchInput
  }

  export type BranchUncheckedCreateWithoutCompanyInput = {
    id?: string
    name: string
    phone?: string | null
    email?: string | null
    address?: string | null
    city?: string | null
    country?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    isDefault?: boolean
    isActive?: boolean
    allowsOnlineOrders?: boolean
    allowsDelivery?: boolean
    allowsPickup?: boolean
    timezone?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    nameAr: string
    openTime?: string | null
    closeTime?: string | null
    users?: UserUncheckedCreateNestedManyWithoutBranchInput
  }

  export type BranchCreateOrConnectWithoutCompanyInput = {
    where: BranchWhereUniqueInput
    create: XOR<BranchCreateWithoutCompanyInput, BranchUncheckedCreateWithoutCompanyInput>
  }

  export type BranchCreateManyCompanyInputEnvelope = {
    data: BranchCreateManyCompanyInput | BranchCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type LicenseCreateWithoutCompanyInput = {
    id?: string
    status?: $Enums.LicenseStatus
    startDate?: Date | string
    expiresAt: Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    daysRemaining?: number
    lastChecked?: Date | string | null
    renewedAt?: Date | string | null
    totalDays?: number
  }

  export type LicenseUncheckedCreateWithoutCompanyInput = {
    id?: string
    status?: $Enums.LicenseStatus
    startDate?: Date | string
    expiresAt: Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    daysRemaining?: number
    lastChecked?: Date | string | null
    renewedAt?: Date | string | null
    totalDays?: number
  }

  export type LicenseCreateOrConnectWithoutCompanyInput = {
    where: LicenseWhereUniqueInput
    create: XOR<LicenseCreateWithoutCompanyInput, LicenseUncheckedCreateWithoutCompanyInput>
  }

  export type LicenseCreateManyCompanyInputEnvelope = {
    data: LicenseCreateManyCompanyInput | LicenseCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type MenuCategoryCreateWithoutCompanyInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    displayNumber?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    products?: MenuProductCreateNestedManyWithoutCategoryInput
  }

  export type MenuCategoryUncheckedCreateWithoutCompanyInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    displayNumber?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    products?: MenuProductUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type MenuCategoryCreateOrConnectWithoutCompanyInput = {
    where: MenuCategoryWhereUniqueInput
    create: XOR<MenuCategoryCreateWithoutCompanyInput, MenuCategoryUncheckedCreateWithoutCompanyInput>
  }

  export type MenuCategoryCreateManyCompanyInputEnvelope = {
    data: MenuCategoryCreateManyCompanyInput | MenuCategoryCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type MenuProductCreateWithoutCompanyInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    images?: MenuProductCreateimagesInput | string[]
    slug?: string | null
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    priority?: number
    preparationTime?: number
    pricingMethod?: number
    sellingMethod?: number
    tags?: MenuProductCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    category?: MenuCategoryCreateNestedOneWithoutProductsInput
    modifierCategories?: ProductModifierCategoryCreateNestedManyWithoutProductInput
    promotionModifierMarkups?: PromotionModifierMarkupCreateNestedManyWithoutProductInput
    promotionProducts?: PromotionProductCreateNestedManyWithoutProductInput
    productImages?: ProductImageCreateNestedManyWithoutProductInput
  }

  export type MenuProductUncheckedCreateWithoutCompanyInput = {
    id?: string
    categoryId?: string | null
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    images?: MenuProductCreateimagesInput | string[]
    slug?: string | null
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    priority?: number
    preparationTime?: number
    pricingMethod?: number
    sellingMethod?: number
    tags?: MenuProductCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    modifierCategories?: ProductModifierCategoryUncheckedCreateNestedManyWithoutProductInput
    promotionModifierMarkups?: PromotionModifierMarkupUncheckedCreateNestedManyWithoutProductInput
    promotionProducts?: PromotionProductUncheckedCreateNestedManyWithoutProductInput
    productImages?: ProductImageUncheckedCreateNestedManyWithoutProductInput
  }

  export type MenuProductCreateOrConnectWithoutCompanyInput = {
    where: MenuProductWhereUniqueInput
    create: XOR<MenuProductCreateWithoutCompanyInput, MenuProductUncheckedCreateWithoutCompanyInput>
  }

  export type MenuProductCreateManyCompanyInputEnvelope = {
    data: MenuProductCreateManyCompanyInput | MenuProductCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type ModifierCategoryCreateWithoutCompanyInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: number
    image?: string | null
    selectionType?: $Enums.ModifierSelectionType
    isRequired?: boolean
    minSelections?: number
    maxSelections?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    modifiers?: ModifierCreateNestedManyWithoutModifierCategoryInput
    productCategories?: ProductModifierCategoryCreateNestedManyWithoutModifierCategoryInput
  }

  export type ModifierCategoryUncheckedCreateWithoutCompanyInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: number
    image?: string | null
    selectionType?: $Enums.ModifierSelectionType
    isRequired?: boolean
    minSelections?: number
    maxSelections?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    modifiers?: ModifierUncheckedCreateNestedManyWithoutModifierCategoryInput
    productCategories?: ProductModifierCategoryUncheckedCreateNestedManyWithoutModifierCategoryInput
  }

  export type ModifierCategoryCreateOrConnectWithoutCompanyInput = {
    where: ModifierCategoryWhereUniqueInput
    create: XOR<ModifierCategoryCreateWithoutCompanyInput, ModifierCategoryUncheckedCreateWithoutCompanyInput>
  }

  export type ModifierCategoryCreateManyCompanyInputEnvelope = {
    data: ModifierCategoryCreateManyCompanyInput | ModifierCategoryCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type ModifierCreateWithoutCompanyInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    displayNumber?: number
    isDefault?: boolean
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    modifierCategory: ModifierCategoryCreateNestedOneWithoutModifiersInput
    promotionMarkups?: PromotionModifierMarkupCreateNestedManyWithoutModifierInput
  }

  export type ModifierUncheckedCreateWithoutCompanyInput = {
    id?: string
    modifierCategoryId: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    displayNumber?: number
    isDefault?: boolean
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    promotionMarkups?: PromotionModifierMarkupUncheckedCreateNestedManyWithoutModifierInput
  }

  export type ModifierCreateOrConnectWithoutCompanyInput = {
    where: ModifierWhereUniqueInput
    create: XOR<ModifierCreateWithoutCompanyInput, ModifierUncheckedCreateWithoutCompanyInput>
  }

  export type ModifierCreateManyCompanyInputEnvelope = {
    data: ModifierCreateManyCompanyInput | ModifierCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type PromotionCreateWithoutCompanyInput = {
    id?: string
    name: string
    description?: string | null
    promotionType?: string
    startDate: Date | string
    endDate: Date | string
    isActive?: boolean
    autoRevert?: boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    priceHistories?: PriceHistoryCreateNestedManyWithoutPromotionInput
    modifierMarkups?: PromotionModifierMarkupCreateNestedManyWithoutPromotionInput
    promotionProducts?: PromotionProductCreateNestedManyWithoutPromotionInput
  }

  export type PromotionUncheckedCreateWithoutCompanyInput = {
    id?: string
    name: string
    description?: string | null
    promotionType?: string
    startDate: Date | string
    endDate: Date | string
    isActive?: boolean
    autoRevert?: boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    priceHistories?: PriceHistoryUncheckedCreateNestedManyWithoutPromotionInput
    modifierMarkups?: PromotionModifierMarkupUncheckedCreateNestedManyWithoutPromotionInput
    promotionProducts?: PromotionProductUncheckedCreateNestedManyWithoutPromotionInput
  }

  export type PromotionCreateOrConnectWithoutCompanyInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutCompanyInput, PromotionUncheckedCreateWithoutCompanyInput>
  }

  export type PromotionCreateManyCompanyInputEnvelope = {
    data: PromotionCreateManyCompanyInput | PromotionCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutCompanyInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    avatarUrl?: string | null
    passwordHash: string
    pin?: string | null
    emailVerifiedAt?: Date | string | null
    role: $Enums.UserRole
    status?: $Enums.UserStatus
    language?: string
    timezone?: string
    lastLoginAt?: Date | string | null
    lastLoginIp?: string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    mustChangePassword?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    firstName?: string | null
    lastName?: string | null
    username?: string | null
    activityLogs?: UserActivityLogCreateNestedManyWithoutUserInput
    sessions?: UserSessionCreateNestedManyWithoutUserInput
    branch?: BranchCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutCompanyInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    avatarUrl?: string | null
    passwordHash: string
    pin?: string | null
    emailVerifiedAt?: Date | string | null
    role: $Enums.UserRole
    status?: $Enums.UserStatus
    branchId?: string | null
    language?: string
    timezone?: string
    lastLoginAt?: Date | string | null
    lastLoginIp?: string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    mustChangePassword?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    firstName?: string | null
    lastName?: string | null
    username?: string | null
    activityLogs?: UserActivityLogUncheckedCreateNestedManyWithoutUserInput
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutCompanyInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutCompanyInput, UserUncheckedCreateWithoutCompanyInput>
  }

  export type UserCreateManyCompanyInputEnvelope = {
    data: UserCreateManyCompanyInput | UserCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type BranchUpsertWithWhereUniqueWithoutCompanyInput = {
    where: BranchWhereUniqueInput
    update: XOR<BranchUpdateWithoutCompanyInput, BranchUncheckedUpdateWithoutCompanyInput>
    create: XOR<BranchCreateWithoutCompanyInput, BranchUncheckedCreateWithoutCompanyInput>
  }

  export type BranchUpdateWithWhereUniqueWithoutCompanyInput = {
    where: BranchWhereUniqueInput
    data: XOR<BranchUpdateWithoutCompanyInput, BranchUncheckedUpdateWithoutCompanyInput>
  }

  export type BranchUpdateManyWithWhereWithoutCompanyInput = {
    where: BranchScalarWhereInput
    data: XOR<BranchUpdateManyMutationInput, BranchUncheckedUpdateManyWithoutCompanyInput>
  }

  export type BranchScalarWhereInput = {
    AND?: BranchScalarWhereInput | BranchScalarWhereInput[]
    OR?: BranchScalarWhereInput[]
    NOT?: BranchScalarWhereInput | BranchScalarWhereInput[]
    id?: StringFilter<"Branch"> | string
    companyId?: StringFilter<"Branch"> | string
    name?: StringFilter<"Branch"> | string
    phone?: StringNullableFilter<"Branch"> | string | null
    email?: StringNullableFilter<"Branch"> | string | null
    address?: StringNullableFilter<"Branch"> | string | null
    city?: StringNullableFilter<"Branch"> | string | null
    country?: StringNullableFilter<"Branch"> | string | null
    latitude?: DecimalNullableFilter<"Branch"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"Branch"> | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFilter<"Branch"> | boolean
    isActive?: BoolFilter<"Branch"> | boolean
    allowsOnlineOrders?: BoolFilter<"Branch"> | boolean
    allowsDelivery?: BoolFilter<"Branch"> | boolean
    allowsPickup?: BoolFilter<"Branch"> | boolean
    timezone?: StringFilter<"Branch"> | string
    createdAt?: DateTimeFilter<"Branch"> | Date | string
    updatedAt?: DateTimeFilter<"Branch"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Branch"> | Date | string | null
    createdBy?: StringNullableFilter<"Branch"> | string | null
    updatedBy?: StringNullableFilter<"Branch"> | string | null
    nameAr?: StringFilter<"Branch"> | string
    openTime?: StringNullableFilter<"Branch"> | string | null
    closeTime?: StringNullableFilter<"Branch"> | string | null
  }

  export type LicenseUpsertWithWhereUniqueWithoutCompanyInput = {
    where: LicenseWhereUniqueInput
    update: XOR<LicenseUpdateWithoutCompanyInput, LicenseUncheckedUpdateWithoutCompanyInput>
    create: XOR<LicenseCreateWithoutCompanyInput, LicenseUncheckedCreateWithoutCompanyInput>
  }

  export type LicenseUpdateWithWhereUniqueWithoutCompanyInput = {
    where: LicenseWhereUniqueInput
    data: XOR<LicenseUpdateWithoutCompanyInput, LicenseUncheckedUpdateWithoutCompanyInput>
  }

  export type LicenseUpdateManyWithWhereWithoutCompanyInput = {
    where: LicenseScalarWhereInput
    data: XOR<LicenseUpdateManyMutationInput, LicenseUncheckedUpdateManyWithoutCompanyInput>
  }

  export type LicenseScalarWhereInput = {
    AND?: LicenseScalarWhereInput | LicenseScalarWhereInput[]
    OR?: LicenseScalarWhereInput[]
    NOT?: LicenseScalarWhereInput | LicenseScalarWhereInput[]
    id?: StringFilter<"License"> | string
    companyId?: StringFilter<"License"> | string
    status?: EnumLicenseStatusFilter<"License"> | $Enums.LicenseStatus
    startDate?: DateTimeFilter<"License"> | Date | string
    expiresAt?: DateTimeFilter<"License"> | Date | string
    features?: JsonNullableFilter<"License">
    createdAt?: DateTimeFilter<"License"> | Date | string
    updatedAt?: DateTimeFilter<"License"> | Date | string
    createdBy?: StringNullableFilter<"License"> | string | null
    updatedBy?: StringNullableFilter<"License"> | string | null
    daysRemaining?: IntFilter<"License"> | number
    lastChecked?: DateTimeNullableFilter<"License"> | Date | string | null
    renewedAt?: DateTimeNullableFilter<"License"> | Date | string | null
    totalDays?: IntFilter<"License"> | number
  }

  export type MenuCategoryUpsertWithWhereUniqueWithoutCompanyInput = {
    where: MenuCategoryWhereUniqueInput
    update: XOR<MenuCategoryUpdateWithoutCompanyInput, MenuCategoryUncheckedUpdateWithoutCompanyInput>
    create: XOR<MenuCategoryCreateWithoutCompanyInput, MenuCategoryUncheckedCreateWithoutCompanyInput>
  }

  export type MenuCategoryUpdateWithWhereUniqueWithoutCompanyInput = {
    where: MenuCategoryWhereUniqueInput
    data: XOR<MenuCategoryUpdateWithoutCompanyInput, MenuCategoryUncheckedUpdateWithoutCompanyInput>
  }

  export type MenuCategoryUpdateManyWithWhereWithoutCompanyInput = {
    where: MenuCategoryScalarWhereInput
    data: XOR<MenuCategoryUpdateManyMutationInput, MenuCategoryUncheckedUpdateManyWithoutCompanyInput>
  }

  export type MenuCategoryScalarWhereInput = {
    AND?: MenuCategoryScalarWhereInput | MenuCategoryScalarWhereInput[]
    OR?: MenuCategoryScalarWhereInput[]
    NOT?: MenuCategoryScalarWhereInput | MenuCategoryScalarWhereInput[]
    id?: StringFilter<"MenuCategory"> | string
    companyId?: StringFilter<"MenuCategory"> | string
    name?: JsonFilter<"MenuCategory">
    description?: JsonNullableFilter<"MenuCategory">
    image?: StringNullableFilter<"MenuCategory"> | string | null
    displayNumber?: IntFilter<"MenuCategory"> | number
    isActive?: BoolFilter<"MenuCategory"> | boolean
    createdAt?: DateTimeFilter<"MenuCategory"> | Date | string
    updatedAt?: DateTimeFilter<"MenuCategory"> | Date | string
    deletedAt?: DateTimeNullableFilter<"MenuCategory"> | Date | string | null
    createdBy?: StringNullableFilter<"MenuCategory"> | string | null
    updatedBy?: StringNullableFilter<"MenuCategory"> | string | null
  }

  export type MenuProductUpsertWithWhereUniqueWithoutCompanyInput = {
    where: MenuProductWhereUniqueInput
    update: XOR<MenuProductUpdateWithoutCompanyInput, MenuProductUncheckedUpdateWithoutCompanyInput>
    create: XOR<MenuProductCreateWithoutCompanyInput, MenuProductUncheckedCreateWithoutCompanyInput>
  }

  export type MenuProductUpdateWithWhereUniqueWithoutCompanyInput = {
    where: MenuProductWhereUniqueInput
    data: XOR<MenuProductUpdateWithoutCompanyInput, MenuProductUncheckedUpdateWithoutCompanyInput>
  }

  export type MenuProductUpdateManyWithWhereWithoutCompanyInput = {
    where: MenuProductScalarWhereInput
    data: XOR<MenuProductUpdateManyMutationInput, MenuProductUncheckedUpdateManyWithoutCompanyInput>
  }

  export type MenuProductScalarWhereInput = {
    AND?: MenuProductScalarWhereInput | MenuProductScalarWhereInput[]
    OR?: MenuProductScalarWhereInput[]
    NOT?: MenuProductScalarWhereInput | MenuProductScalarWhereInput[]
    id?: StringFilter<"MenuProduct"> | string
    companyId?: StringFilter<"MenuProduct"> | string
    categoryId?: StringNullableFilter<"MenuProduct"> | string | null
    name?: JsonFilter<"MenuProduct">
    description?: JsonNullableFilter<"MenuProduct">
    image?: StringNullableFilter<"MenuProduct"> | string | null
    images?: StringNullableListFilter<"MenuProduct">
    slug?: StringNullableFilter<"MenuProduct"> | string | null
    basePrice?: DecimalFilter<"MenuProduct"> | Decimal | DecimalJsLike | number | string
    pricing?: JsonFilter<"MenuProduct">
    cost?: DecimalFilter<"MenuProduct"> | Decimal | DecimalJsLike | number | string
    status?: IntFilter<"MenuProduct"> | number
    priority?: IntFilter<"MenuProduct"> | number
    preparationTime?: IntFilter<"MenuProduct"> | number
    pricingMethod?: IntFilter<"MenuProduct"> | number
    sellingMethod?: IntFilter<"MenuProduct"> | number
    tags?: StringNullableListFilter<"MenuProduct">
    createdAt?: DateTimeFilter<"MenuProduct"> | Date | string
    updatedAt?: DateTimeFilter<"MenuProduct"> | Date | string
    deletedAt?: DateTimeNullableFilter<"MenuProduct"> | Date | string | null
    createdBy?: StringNullableFilter<"MenuProduct"> | string | null
    updatedBy?: StringNullableFilter<"MenuProduct"> | string | null
  }

  export type ModifierCategoryUpsertWithWhereUniqueWithoutCompanyInput = {
    where: ModifierCategoryWhereUniqueInput
    update: XOR<ModifierCategoryUpdateWithoutCompanyInput, ModifierCategoryUncheckedUpdateWithoutCompanyInput>
    create: XOR<ModifierCategoryCreateWithoutCompanyInput, ModifierCategoryUncheckedCreateWithoutCompanyInput>
  }

  export type ModifierCategoryUpdateWithWhereUniqueWithoutCompanyInput = {
    where: ModifierCategoryWhereUniqueInput
    data: XOR<ModifierCategoryUpdateWithoutCompanyInput, ModifierCategoryUncheckedUpdateWithoutCompanyInput>
  }

  export type ModifierCategoryUpdateManyWithWhereWithoutCompanyInput = {
    where: ModifierCategoryScalarWhereInput
    data: XOR<ModifierCategoryUpdateManyMutationInput, ModifierCategoryUncheckedUpdateManyWithoutCompanyInput>
  }

  export type ModifierCategoryScalarWhereInput = {
    AND?: ModifierCategoryScalarWhereInput | ModifierCategoryScalarWhereInput[]
    OR?: ModifierCategoryScalarWhereInput[]
    NOT?: ModifierCategoryScalarWhereInput | ModifierCategoryScalarWhereInput[]
    id?: StringFilter<"ModifierCategory"> | string
    companyId?: StringFilter<"ModifierCategory"> | string
    name?: JsonFilter<"ModifierCategory">
    description?: JsonNullableFilter<"ModifierCategory">
    displayNumber?: IntFilter<"ModifierCategory"> | number
    image?: StringNullableFilter<"ModifierCategory"> | string | null
    selectionType?: EnumModifierSelectionTypeFilter<"ModifierCategory"> | $Enums.ModifierSelectionType
    isRequired?: BoolFilter<"ModifierCategory"> | boolean
    minSelections?: IntFilter<"ModifierCategory"> | number
    maxSelections?: IntFilter<"ModifierCategory"> | number
    createdAt?: DateTimeFilter<"ModifierCategory"> | Date | string
    updatedAt?: DateTimeFilter<"ModifierCategory"> | Date | string
    deletedAt?: DateTimeNullableFilter<"ModifierCategory"> | Date | string | null
  }

  export type ModifierUpsertWithWhereUniqueWithoutCompanyInput = {
    where: ModifierWhereUniqueInput
    update: XOR<ModifierUpdateWithoutCompanyInput, ModifierUncheckedUpdateWithoutCompanyInput>
    create: XOR<ModifierCreateWithoutCompanyInput, ModifierUncheckedCreateWithoutCompanyInput>
  }

  export type ModifierUpdateWithWhereUniqueWithoutCompanyInput = {
    where: ModifierWhereUniqueInput
    data: XOR<ModifierUpdateWithoutCompanyInput, ModifierUncheckedUpdateWithoutCompanyInput>
  }

  export type ModifierUpdateManyWithWhereWithoutCompanyInput = {
    where: ModifierScalarWhereInput
    data: XOR<ModifierUpdateManyMutationInput, ModifierUncheckedUpdateManyWithoutCompanyInput>
  }

  export type ModifierScalarWhereInput = {
    AND?: ModifierScalarWhereInput | ModifierScalarWhereInput[]
    OR?: ModifierScalarWhereInput[]
    NOT?: ModifierScalarWhereInput | ModifierScalarWhereInput[]
    id?: StringFilter<"Modifier"> | string
    modifierCategoryId?: StringFilter<"Modifier"> | string
    companyId?: StringFilter<"Modifier"> | string
    name?: JsonFilter<"Modifier">
    description?: JsonNullableFilter<"Modifier">
    basePrice?: DecimalFilter<"Modifier"> | Decimal | DecimalJsLike | number | string
    pricing?: JsonFilter<"Modifier">
    cost?: DecimalFilter<"Modifier"> | Decimal | DecimalJsLike | number | string
    status?: IntFilter<"Modifier"> | number
    displayNumber?: IntFilter<"Modifier"> | number
    isDefault?: BoolFilter<"Modifier"> | boolean
    image?: StringNullableFilter<"Modifier"> | string | null
    createdAt?: DateTimeFilter<"Modifier"> | Date | string
    updatedAt?: DateTimeFilter<"Modifier"> | Date | string
    deletedAt?: DateTimeNullableFilter<"Modifier"> | Date | string | null
  }

  export type PromotionUpsertWithWhereUniqueWithoutCompanyInput = {
    where: PromotionWhereUniqueInput
    update: XOR<PromotionUpdateWithoutCompanyInput, PromotionUncheckedUpdateWithoutCompanyInput>
    create: XOR<PromotionCreateWithoutCompanyInput, PromotionUncheckedCreateWithoutCompanyInput>
  }

  export type PromotionUpdateWithWhereUniqueWithoutCompanyInput = {
    where: PromotionWhereUniqueInput
    data: XOR<PromotionUpdateWithoutCompanyInput, PromotionUncheckedUpdateWithoutCompanyInput>
  }

  export type PromotionUpdateManyWithWhereWithoutCompanyInput = {
    where: PromotionScalarWhereInput
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyWithoutCompanyInput>
  }

  export type PromotionScalarWhereInput = {
    AND?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
    OR?: PromotionScalarWhereInput[]
    NOT?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
    id?: StringFilter<"Promotion"> | string
    companyId?: StringFilter<"Promotion"> | string
    name?: StringFilter<"Promotion"> | string
    description?: StringNullableFilter<"Promotion"> | string | null
    promotionType?: StringFilter<"Promotion"> | string
    startDate?: DateTimeFilter<"Promotion"> | Date | string
    endDate?: DateTimeFilter<"Promotion"> | Date | string
    isActive?: BoolFilter<"Promotion"> | boolean
    autoRevert?: BoolFilter<"Promotion"> | boolean
    platforms?: JsonFilter<"Promotion">
    minProfitMargin?: DecimalFilter<"Promotion"> | Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: JsonNullableFilter<"Promotion">
    createdAt?: DateTimeFilter<"Promotion"> | Date | string
    updatedAt?: DateTimeFilter<"Promotion"> | Date | string
    createdBy?: StringNullableFilter<"Promotion"> | string | null
  }

  export type UserUpsertWithWhereUniqueWithoutCompanyInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutCompanyInput, UserUncheckedUpdateWithoutCompanyInput>
    create: XOR<UserCreateWithoutCompanyInput, UserUncheckedCreateWithoutCompanyInput>
  }

  export type UserUpdateWithWhereUniqueWithoutCompanyInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutCompanyInput, UserUncheckedUpdateWithoutCompanyInput>
  }

  export type UserUpdateManyWithWhereWithoutCompanyInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutCompanyInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    phone?: StringNullableFilter<"User"> | string | null
    avatarUrl?: StringNullableFilter<"User"> | string | null
    passwordHash?: StringFilter<"User"> | string
    pin?: StringNullableFilter<"User"> | string | null
    emailVerifiedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    status?: EnumUserStatusFilter<"User"> | $Enums.UserStatus
    companyId?: StringFilter<"User"> | string
    branchId?: StringNullableFilter<"User"> | string | null
    language?: StringFilter<"User"> | string
    timezone?: StringFilter<"User"> | string
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    lastLoginIp?: StringNullableFilter<"User"> | string | null
    failedLoginAttempts?: IntFilter<"User"> | number
    lockedUntil?: DateTimeNullableFilter<"User"> | Date | string | null
    mustChangePassword?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    createdBy?: StringNullableFilter<"User"> | string | null
    updatedBy?: StringNullableFilter<"User"> | string | null
    firstName?: StringNullableFilter<"User"> | string | null
    lastName?: StringNullableFilter<"User"> | string | null
    username?: StringNullableFilter<"User"> | string | null
  }

  export type CompanyCreateWithoutLicensesInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    businessType?: string | null
    timezone?: string
    defaultCurrency?: string
    status?: $Enums.CompanyStatus
    subscriptionPlan?: string | null
    subscriptionExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    branches?: BranchCreateNestedManyWithoutCompanyInput
    menuCategories?: MenuCategoryCreateNestedManyWithoutCompanyInput
    menuProducts?: MenuProductCreateNestedManyWithoutCompanyInput
    modifierCategories?: ModifierCategoryCreateNestedManyWithoutCompanyInput
    modifiers?: ModifierCreateNestedManyWithoutCompanyInput
    promotions?: PromotionCreateNestedManyWithoutCompanyInput
    users?: UserCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutLicensesInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    businessType?: string | null
    timezone?: string
    defaultCurrency?: string
    status?: $Enums.CompanyStatus
    subscriptionPlan?: string | null
    subscriptionExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    branches?: BranchUncheckedCreateNestedManyWithoutCompanyInput
    menuCategories?: MenuCategoryUncheckedCreateNestedManyWithoutCompanyInput
    menuProducts?: MenuProductUncheckedCreateNestedManyWithoutCompanyInput
    modifierCategories?: ModifierCategoryUncheckedCreateNestedManyWithoutCompanyInput
    modifiers?: ModifierUncheckedCreateNestedManyWithoutCompanyInput
    promotions?: PromotionUncheckedCreateNestedManyWithoutCompanyInput
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutLicensesInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutLicensesInput, CompanyUncheckedCreateWithoutLicensesInput>
  }

  export type CompanyUpsertWithoutLicensesInput = {
    update: XOR<CompanyUpdateWithoutLicensesInput, CompanyUncheckedUpdateWithoutLicensesInput>
    create: XOR<CompanyCreateWithoutLicensesInput, CompanyUncheckedCreateWithoutLicensesInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutLicensesInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutLicensesInput, CompanyUncheckedUpdateWithoutLicensesInput>
  }

  export type CompanyUpdateWithoutLicensesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    defaultCurrency?: StringFieldUpdateOperationsInput | string
    status?: EnumCompanyStatusFieldUpdateOperationsInput | $Enums.CompanyStatus
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    branches?: BranchUpdateManyWithoutCompanyNestedInput
    menuCategories?: MenuCategoryUpdateManyWithoutCompanyNestedInput
    menuProducts?: MenuProductUpdateManyWithoutCompanyNestedInput
    modifierCategories?: ModifierCategoryUpdateManyWithoutCompanyNestedInput
    modifiers?: ModifierUpdateManyWithoutCompanyNestedInput
    promotions?: PromotionUpdateManyWithoutCompanyNestedInput
    users?: UserUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutLicensesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    defaultCurrency?: StringFieldUpdateOperationsInput | string
    status?: EnumCompanyStatusFieldUpdateOperationsInput | $Enums.CompanyStatus
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    branches?: BranchUncheckedUpdateManyWithoutCompanyNestedInput
    menuCategories?: MenuCategoryUncheckedUpdateManyWithoutCompanyNestedInput
    menuProducts?: MenuProductUncheckedUpdateManyWithoutCompanyNestedInput
    modifierCategories?: ModifierCategoryUncheckedUpdateManyWithoutCompanyNestedInput
    modifiers?: ModifierUncheckedUpdateManyWithoutCompanyNestedInput
    promotions?: PromotionUncheckedUpdateManyWithoutCompanyNestedInput
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyCreateWithoutBranchesInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    businessType?: string | null
    timezone?: string
    defaultCurrency?: string
    status?: $Enums.CompanyStatus
    subscriptionPlan?: string | null
    subscriptionExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    licenses?: LicenseCreateNestedManyWithoutCompanyInput
    menuCategories?: MenuCategoryCreateNestedManyWithoutCompanyInput
    menuProducts?: MenuProductCreateNestedManyWithoutCompanyInput
    modifierCategories?: ModifierCategoryCreateNestedManyWithoutCompanyInput
    modifiers?: ModifierCreateNestedManyWithoutCompanyInput
    promotions?: PromotionCreateNestedManyWithoutCompanyInput
    users?: UserCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutBranchesInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    businessType?: string | null
    timezone?: string
    defaultCurrency?: string
    status?: $Enums.CompanyStatus
    subscriptionPlan?: string | null
    subscriptionExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    licenses?: LicenseUncheckedCreateNestedManyWithoutCompanyInput
    menuCategories?: MenuCategoryUncheckedCreateNestedManyWithoutCompanyInput
    menuProducts?: MenuProductUncheckedCreateNestedManyWithoutCompanyInput
    modifierCategories?: ModifierCategoryUncheckedCreateNestedManyWithoutCompanyInput
    modifiers?: ModifierUncheckedCreateNestedManyWithoutCompanyInput
    promotions?: PromotionUncheckedCreateNestedManyWithoutCompanyInput
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutBranchesInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutBranchesInput, CompanyUncheckedCreateWithoutBranchesInput>
  }

  export type UserCreateWithoutBranchInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    avatarUrl?: string | null
    passwordHash: string
    pin?: string | null
    emailVerifiedAt?: Date | string | null
    role: $Enums.UserRole
    status?: $Enums.UserStatus
    language?: string
    timezone?: string
    lastLoginAt?: Date | string | null
    lastLoginIp?: string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    mustChangePassword?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    firstName?: string | null
    lastName?: string | null
    username?: string | null
    activityLogs?: UserActivityLogCreateNestedManyWithoutUserInput
    sessions?: UserSessionCreateNestedManyWithoutUserInput
    company: CompanyCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutBranchInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    avatarUrl?: string | null
    passwordHash: string
    pin?: string | null
    emailVerifiedAt?: Date | string | null
    role: $Enums.UserRole
    status?: $Enums.UserStatus
    companyId: string
    language?: string
    timezone?: string
    lastLoginAt?: Date | string | null
    lastLoginIp?: string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    mustChangePassword?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    firstName?: string | null
    lastName?: string | null
    username?: string | null
    activityLogs?: UserActivityLogUncheckedCreateNestedManyWithoutUserInput
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutBranchInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBranchInput, UserUncheckedCreateWithoutBranchInput>
  }

  export type UserCreateManyBranchInputEnvelope = {
    data: UserCreateManyBranchInput | UserCreateManyBranchInput[]
    skipDuplicates?: boolean
  }

  export type CompanyUpsertWithoutBranchesInput = {
    update: XOR<CompanyUpdateWithoutBranchesInput, CompanyUncheckedUpdateWithoutBranchesInput>
    create: XOR<CompanyCreateWithoutBranchesInput, CompanyUncheckedCreateWithoutBranchesInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutBranchesInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutBranchesInput, CompanyUncheckedUpdateWithoutBranchesInput>
  }

  export type CompanyUpdateWithoutBranchesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    defaultCurrency?: StringFieldUpdateOperationsInput | string
    status?: EnumCompanyStatusFieldUpdateOperationsInput | $Enums.CompanyStatus
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    licenses?: LicenseUpdateManyWithoutCompanyNestedInput
    menuCategories?: MenuCategoryUpdateManyWithoutCompanyNestedInput
    menuProducts?: MenuProductUpdateManyWithoutCompanyNestedInput
    modifierCategories?: ModifierCategoryUpdateManyWithoutCompanyNestedInput
    modifiers?: ModifierUpdateManyWithoutCompanyNestedInput
    promotions?: PromotionUpdateManyWithoutCompanyNestedInput
    users?: UserUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutBranchesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    defaultCurrency?: StringFieldUpdateOperationsInput | string
    status?: EnumCompanyStatusFieldUpdateOperationsInput | $Enums.CompanyStatus
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    licenses?: LicenseUncheckedUpdateManyWithoutCompanyNestedInput
    menuCategories?: MenuCategoryUncheckedUpdateManyWithoutCompanyNestedInput
    menuProducts?: MenuProductUncheckedUpdateManyWithoutCompanyNestedInput
    modifierCategories?: ModifierCategoryUncheckedUpdateManyWithoutCompanyNestedInput
    modifiers?: ModifierUncheckedUpdateManyWithoutCompanyNestedInput
    promotions?: PromotionUncheckedUpdateManyWithoutCompanyNestedInput
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutBranchInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutBranchInput, UserUncheckedUpdateWithoutBranchInput>
    create: XOR<UserCreateWithoutBranchInput, UserUncheckedCreateWithoutBranchInput>
  }

  export type UserUpdateWithWhereUniqueWithoutBranchInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutBranchInput, UserUncheckedUpdateWithoutBranchInput>
  }

  export type UserUpdateManyWithWhereWithoutBranchInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutBranchInput>
  }

  export type UserActivityLogCreateWithoutUserInput = {
    id?: string
    action: string
    resourceType?: string | null
    resourceId?: string | null
    description?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    success?: boolean
    errorMessage?: string | null
    timestamp?: Date | string
  }

  export type UserActivityLogUncheckedCreateWithoutUserInput = {
    id?: string
    action: string
    resourceType?: string | null
    resourceId?: string | null
    description?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    success?: boolean
    errorMessage?: string | null
    timestamp?: Date | string
  }

  export type UserActivityLogCreateOrConnectWithoutUserInput = {
    where: UserActivityLogWhereUniqueInput
    create: XOR<UserActivityLogCreateWithoutUserInput, UserActivityLogUncheckedCreateWithoutUserInput>
  }

  export type UserActivityLogCreateManyUserInputEnvelope = {
    data: UserActivityLogCreateManyUserInput | UserActivityLogCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserSessionCreateWithoutUserInput = {
    id?: string
    tokenHash: string
    refreshTokenHash?: string | null
    expiresAt: Date | string
    refreshExpiresAt?: Date | string | null
    ipAddress?: string | null
    userAgent?: string | null
    deviceType?: string | null
    isActive?: boolean
    revokedAt?: Date | string | null
    createdAt?: Date | string
    lastUsedAt?: Date | string
  }

  export type UserSessionUncheckedCreateWithoutUserInput = {
    id?: string
    tokenHash: string
    refreshTokenHash?: string | null
    expiresAt: Date | string
    refreshExpiresAt?: Date | string | null
    ipAddress?: string | null
    userAgent?: string | null
    deviceType?: string | null
    isActive?: boolean
    revokedAt?: Date | string | null
    createdAt?: Date | string
    lastUsedAt?: Date | string
  }

  export type UserSessionCreateOrConnectWithoutUserInput = {
    where: UserSessionWhereUniqueInput
    create: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput>
  }

  export type UserSessionCreateManyUserInputEnvelope = {
    data: UserSessionCreateManyUserInput | UserSessionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type BranchCreateWithoutUsersInput = {
    id?: string
    name: string
    phone?: string | null
    email?: string | null
    address?: string | null
    city?: string | null
    country?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    isDefault?: boolean
    isActive?: boolean
    allowsOnlineOrders?: boolean
    allowsDelivery?: boolean
    allowsPickup?: boolean
    timezone?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    nameAr: string
    openTime?: string | null
    closeTime?: string | null
    company: CompanyCreateNestedOneWithoutBranchesInput
  }

  export type BranchUncheckedCreateWithoutUsersInput = {
    id?: string
    companyId: string
    name: string
    phone?: string | null
    email?: string | null
    address?: string | null
    city?: string | null
    country?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    isDefault?: boolean
    isActive?: boolean
    allowsOnlineOrders?: boolean
    allowsDelivery?: boolean
    allowsPickup?: boolean
    timezone?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    nameAr: string
    openTime?: string | null
    closeTime?: string | null
  }

  export type BranchCreateOrConnectWithoutUsersInput = {
    where: BranchWhereUniqueInput
    create: XOR<BranchCreateWithoutUsersInput, BranchUncheckedCreateWithoutUsersInput>
  }

  export type CompanyCreateWithoutUsersInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    businessType?: string | null
    timezone?: string
    defaultCurrency?: string
    status?: $Enums.CompanyStatus
    subscriptionPlan?: string | null
    subscriptionExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    branches?: BranchCreateNestedManyWithoutCompanyInput
    licenses?: LicenseCreateNestedManyWithoutCompanyInput
    menuCategories?: MenuCategoryCreateNestedManyWithoutCompanyInput
    menuProducts?: MenuProductCreateNestedManyWithoutCompanyInput
    modifierCategories?: ModifierCategoryCreateNestedManyWithoutCompanyInput
    modifiers?: ModifierCreateNestedManyWithoutCompanyInput
    promotions?: PromotionCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutUsersInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    businessType?: string | null
    timezone?: string
    defaultCurrency?: string
    status?: $Enums.CompanyStatus
    subscriptionPlan?: string | null
    subscriptionExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    branches?: BranchUncheckedCreateNestedManyWithoutCompanyInput
    licenses?: LicenseUncheckedCreateNestedManyWithoutCompanyInput
    menuCategories?: MenuCategoryUncheckedCreateNestedManyWithoutCompanyInput
    menuProducts?: MenuProductUncheckedCreateNestedManyWithoutCompanyInput
    modifierCategories?: ModifierCategoryUncheckedCreateNestedManyWithoutCompanyInput
    modifiers?: ModifierUncheckedCreateNestedManyWithoutCompanyInput
    promotions?: PromotionUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutUsersInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutUsersInput, CompanyUncheckedCreateWithoutUsersInput>
  }

  export type UserActivityLogUpsertWithWhereUniqueWithoutUserInput = {
    where: UserActivityLogWhereUniqueInput
    update: XOR<UserActivityLogUpdateWithoutUserInput, UserActivityLogUncheckedUpdateWithoutUserInput>
    create: XOR<UserActivityLogCreateWithoutUserInput, UserActivityLogUncheckedCreateWithoutUserInput>
  }

  export type UserActivityLogUpdateWithWhereUniqueWithoutUserInput = {
    where: UserActivityLogWhereUniqueInput
    data: XOR<UserActivityLogUpdateWithoutUserInput, UserActivityLogUncheckedUpdateWithoutUserInput>
  }

  export type UserActivityLogUpdateManyWithWhereWithoutUserInput = {
    where: UserActivityLogScalarWhereInput
    data: XOR<UserActivityLogUpdateManyMutationInput, UserActivityLogUncheckedUpdateManyWithoutUserInput>
  }

  export type UserActivityLogScalarWhereInput = {
    AND?: UserActivityLogScalarWhereInput | UserActivityLogScalarWhereInput[]
    OR?: UserActivityLogScalarWhereInput[]
    NOT?: UserActivityLogScalarWhereInput | UserActivityLogScalarWhereInput[]
    id?: StringFilter<"UserActivityLog"> | string
    userId?: StringFilter<"UserActivityLog"> | string
    action?: StringFilter<"UserActivityLog"> | string
    resourceType?: StringNullableFilter<"UserActivityLog"> | string | null
    resourceId?: StringNullableFilter<"UserActivityLog"> | string | null
    description?: StringNullableFilter<"UserActivityLog"> | string | null
    ipAddress?: StringNullableFilter<"UserActivityLog"> | string | null
    userAgent?: StringNullableFilter<"UserActivityLog"> | string | null
    success?: BoolFilter<"UserActivityLog"> | boolean
    errorMessage?: StringNullableFilter<"UserActivityLog"> | string | null
    timestamp?: DateTimeFilter<"UserActivityLog"> | Date | string
  }

  export type UserSessionUpsertWithWhereUniqueWithoutUserInput = {
    where: UserSessionWhereUniqueInput
    update: XOR<UserSessionUpdateWithoutUserInput, UserSessionUncheckedUpdateWithoutUserInput>
    create: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput>
  }

  export type UserSessionUpdateWithWhereUniqueWithoutUserInput = {
    where: UserSessionWhereUniqueInput
    data: XOR<UserSessionUpdateWithoutUserInput, UserSessionUncheckedUpdateWithoutUserInput>
  }

  export type UserSessionUpdateManyWithWhereWithoutUserInput = {
    where: UserSessionScalarWhereInput
    data: XOR<UserSessionUpdateManyMutationInput, UserSessionUncheckedUpdateManyWithoutUserInput>
  }

  export type UserSessionScalarWhereInput = {
    AND?: UserSessionScalarWhereInput | UserSessionScalarWhereInput[]
    OR?: UserSessionScalarWhereInput[]
    NOT?: UserSessionScalarWhereInput | UserSessionScalarWhereInput[]
    id?: StringFilter<"UserSession"> | string
    userId?: StringFilter<"UserSession"> | string
    tokenHash?: StringFilter<"UserSession"> | string
    refreshTokenHash?: StringNullableFilter<"UserSession"> | string | null
    expiresAt?: DateTimeFilter<"UserSession"> | Date | string
    refreshExpiresAt?: DateTimeNullableFilter<"UserSession"> | Date | string | null
    ipAddress?: StringNullableFilter<"UserSession"> | string | null
    userAgent?: StringNullableFilter<"UserSession"> | string | null
    deviceType?: StringNullableFilter<"UserSession"> | string | null
    isActive?: BoolFilter<"UserSession"> | boolean
    revokedAt?: DateTimeNullableFilter<"UserSession"> | Date | string | null
    createdAt?: DateTimeFilter<"UserSession"> | Date | string
    lastUsedAt?: DateTimeFilter<"UserSession"> | Date | string
  }

  export type BranchUpsertWithoutUsersInput = {
    update: XOR<BranchUpdateWithoutUsersInput, BranchUncheckedUpdateWithoutUsersInput>
    create: XOR<BranchCreateWithoutUsersInput, BranchUncheckedCreateWithoutUsersInput>
    where?: BranchWhereInput
  }

  export type BranchUpdateToOneWithWhereWithoutUsersInput = {
    where?: BranchWhereInput
    data: XOR<BranchUpdateWithoutUsersInput, BranchUncheckedUpdateWithoutUsersInput>
  }

  export type BranchUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowsOnlineOrders?: BoolFieldUpdateOperationsInput | boolean
    allowsDelivery?: BoolFieldUpdateOperationsInput | boolean
    allowsPickup?: BoolFieldUpdateOperationsInput | boolean
    timezone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    nameAr?: StringFieldUpdateOperationsInput | string
    openTime?: NullableStringFieldUpdateOperationsInput | string | null
    closeTime?: NullableStringFieldUpdateOperationsInput | string | null
    company?: CompanyUpdateOneRequiredWithoutBranchesNestedInput
  }

  export type BranchUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowsOnlineOrders?: BoolFieldUpdateOperationsInput | boolean
    allowsDelivery?: BoolFieldUpdateOperationsInput | boolean
    allowsPickup?: BoolFieldUpdateOperationsInput | boolean
    timezone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    nameAr?: StringFieldUpdateOperationsInput | string
    openTime?: NullableStringFieldUpdateOperationsInput | string | null
    closeTime?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyUpsertWithoutUsersInput = {
    update: XOR<CompanyUpdateWithoutUsersInput, CompanyUncheckedUpdateWithoutUsersInput>
    create: XOR<CompanyCreateWithoutUsersInput, CompanyUncheckedCreateWithoutUsersInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutUsersInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutUsersInput, CompanyUncheckedUpdateWithoutUsersInput>
  }

  export type CompanyUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    defaultCurrency?: StringFieldUpdateOperationsInput | string
    status?: EnumCompanyStatusFieldUpdateOperationsInput | $Enums.CompanyStatus
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    branches?: BranchUpdateManyWithoutCompanyNestedInput
    licenses?: LicenseUpdateManyWithoutCompanyNestedInput
    menuCategories?: MenuCategoryUpdateManyWithoutCompanyNestedInput
    menuProducts?: MenuProductUpdateManyWithoutCompanyNestedInput
    modifierCategories?: ModifierCategoryUpdateManyWithoutCompanyNestedInput
    modifiers?: ModifierUpdateManyWithoutCompanyNestedInput
    promotions?: PromotionUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    defaultCurrency?: StringFieldUpdateOperationsInput | string
    status?: EnumCompanyStatusFieldUpdateOperationsInput | $Enums.CompanyStatus
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    branches?: BranchUncheckedUpdateManyWithoutCompanyNestedInput
    licenses?: LicenseUncheckedUpdateManyWithoutCompanyNestedInput
    menuCategories?: MenuCategoryUncheckedUpdateManyWithoutCompanyNestedInput
    menuProducts?: MenuProductUncheckedUpdateManyWithoutCompanyNestedInput
    modifierCategories?: ModifierCategoryUncheckedUpdateManyWithoutCompanyNestedInput
    modifiers?: ModifierUncheckedUpdateManyWithoutCompanyNestedInput
    promotions?: PromotionUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type UserCreateWithoutSessionsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    avatarUrl?: string | null
    passwordHash: string
    pin?: string | null
    emailVerifiedAt?: Date | string | null
    role: $Enums.UserRole
    status?: $Enums.UserStatus
    language?: string
    timezone?: string
    lastLoginAt?: Date | string | null
    lastLoginIp?: string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    mustChangePassword?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    firstName?: string | null
    lastName?: string | null
    username?: string | null
    activityLogs?: UserActivityLogCreateNestedManyWithoutUserInput
    branch?: BranchCreateNestedOneWithoutUsersInput
    company: CompanyCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutSessionsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    avatarUrl?: string | null
    passwordHash: string
    pin?: string | null
    emailVerifiedAt?: Date | string | null
    role: $Enums.UserRole
    status?: $Enums.UserStatus
    companyId: string
    branchId?: string | null
    language?: string
    timezone?: string
    lastLoginAt?: Date | string | null
    lastLoginIp?: string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    mustChangePassword?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    firstName?: string | null
    lastName?: string | null
    username?: string | null
    activityLogs?: UserActivityLogUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSessionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
  }

  export type UserUpsertWithoutSessionsInput = {
    update: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSessionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    passwordHash?: StringFieldUpdateOperationsInput | string
    pin?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginIp?: NullableStringFieldUpdateOperationsInput | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    activityLogs?: UserActivityLogUpdateManyWithoutUserNestedInput
    branch?: BranchUpdateOneWithoutUsersNestedInput
    company?: CompanyUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    passwordHash?: StringFieldUpdateOperationsInput | string
    pin?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    companyId?: StringFieldUpdateOperationsInput | string
    branchId?: NullableStringFieldUpdateOperationsInput | string | null
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginIp?: NullableStringFieldUpdateOperationsInput | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    activityLogs?: UserActivityLogUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutActivityLogsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    avatarUrl?: string | null
    passwordHash: string
    pin?: string | null
    emailVerifiedAt?: Date | string | null
    role: $Enums.UserRole
    status?: $Enums.UserStatus
    language?: string
    timezone?: string
    lastLoginAt?: Date | string | null
    lastLoginIp?: string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    mustChangePassword?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    firstName?: string | null
    lastName?: string | null
    username?: string | null
    sessions?: UserSessionCreateNestedManyWithoutUserInput
    branch?: BranchCreateNestedOneWithoutUsersInput
    company: CompanyCreateNestedOneWithoutUsersInput
  }

  export type UserUncheckedCreateWithoutActivityLogsInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    avatarUrl?: string | null
    passwordHash: string
    pin?: string | null
    emailVerifiedAt?: Date | string | null
    role: $Enums.UserRole
    status?: $Enums.UserStatus
    companyId: string
    branchId?: string | null
    language?: string
    timezone?: string
    lastLoginAt?: Date | string | null
    lastLoginIp?: string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    mustChangePassword?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    firstName?: string | null
    lastName?: string | null
    username?: string | null
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutActivityLogsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutActivityLogsInput, UserUncheckedCreateWithoutActivityLogsInput>
  }

  export type UserUpsertWithoutActivityLogsInput = {
    update: XOR<UserUpdateWithoutActivityLogsInput, UserUncheckedUpdateWithoutActivityLogsInput>
    create: XOR<UserCreateWithoutActivityLogsInput, UserUncheckedCreateWithoutActivityLogsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutActivityLogsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutActivityLogsInput, UserUncheckedUpdateWithoutActivityLogsInput>
  }

  export type UserUpdateWithoutActivityLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    passwordHash?: StringFieldUpdateOperationsInput | string
    pin?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginIp?: NullableStringFieldUpdateOperationsInput | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
    branch?: BranchUpdateOneWithoutUsersNestedInput
    company?: CompanyUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutActivityLogsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    passwordHash?: StringFieldUpdateOperationsInput | string
    pin?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    companyId?: StringFieldUpdateOperationsInput | string
    branchId?: NullableStringFieldUpdateOperationsInput | string | null
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginIp?: NullableStringFieldUpdateOperationsInput | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CompanyCreateWithoutMenuCategoriesInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    businessType?: string | null
    timezone?: string
    defaultCurrency?: string
    status?: $Enums.CompanyStatus
    subscriptionPlan?: string | null
    subscriptionExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    branches?: BranchCreateNestedManyWithoutCompanyInput
    licenses?: LicenseCreateNestedManyWithoutCompanyInput
    menuProducts?: MenuProductCreateNestedManyWithoutCompanyInput
    modifierCategories?: ModifierCategoryCreateNestedManyWithoutCompanyInput
    modifiers?: ModifierCreateNestedManyWithoutCompanyInput
    promotions?: PromotionCreateNestedManyWithoutCompanyInput
    users?: UserCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutMenuCategoriesInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    businessType?: string | null
    timezone?: string
    defaultCurrency?: string
    status?: $Enums.CompanyStatus
    subscriptionPlan?: string | null
    subscriptionExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    branches?: BranchUncheckedCreateNestedManyWithoutCompanyInput
    licenses?: LicenseUncheckedCreateNestedManyWithoutCompanyInput
    menuProducts?: MenuProductUncheckedCreateNestedManyWithoutCompanyInput
    modifierCategories?: ModifierCategoryUncheckedCreateNestedManyWithoutCompanyInput
    modifiers?: ModifierUncheckedCreateNestedManyWithoutCompanyInput
    promotions?: PromotionUncheckedCreateNestedManyWithoutCompanyInput
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutMenuCategoriesInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutMenuCategoriesInput, CompanyUncheckedCreateWithoutMenuCategoriesInput>
  }

  export type MenuProductCreateWithoutCategoryInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    images?: MenuProductCreateimagesInput | string[]
    slug?: string | null
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    priority?: number
    preparationTime?: number
    pricingMethod?: number
    sellingMethod?: number
    tags?: MenuProductCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    company: CompanyCreateNestedOneWithoutMenuProductsInput
    modifierCategories?: ProductModifierCategoryCreateNestedManyWithoutProductInput
    promotionModifierMarkups?: PromotionModifierMarkupCreateNestedManyWithoutProductInput
    promotionProducts?: PromotionProductCreateNestedManyWithoutProductInput
    productImages?: ProductImageCreateNestedManyWithoutProductInput
  }

  export type MenuProductUncheckedCreateWithoutCategoryInput = {
    id?: string
    companyId: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    images?: MenuProductCreateimagesInput | string[]
    slug?: string | null
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    priority?: number
    preparationTime?: number
    pricingMethod?: number
    sellingMethod?: number
    tags?: MenuProductCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    modifierCategories?: ProductModifierCategoryUncheckedCreateNestedManyWithoutProductInput
    promotionModifierMarkups?: PromotionModifierMarkupUncheckedCreateNestedManyWithoutProductInput
    promotionProducts?: PromotionProductUncheckedCreateNestedManyWithoutProductInput
    productImages?: ProductImageUncheckedCreateNestedManyWithoutProductInput
  }

  export type MenuProductCreateOrConnectWithoutCategoryInput = {
    where: MenuProductWhereUniqueInput
    create: XOR<MenuProductCreateWithoutCategoryInput, MenuProductUncheckedCreateWithoutCategoryInput>
  }

  export type MenuProductCreateManyCategoryInputEnvelope = {
    data: MenuProductCreateManyCategoryInput | MenuProductCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type CompanyUpsertWithoutMenuCategoriesInput = {
    update: XOR<CompanyUpdateWithoutMenuCategoriesInput, CompanyUncheckedUpdateWithoutMenuCategoriesInput>
    create: XOR<CompanyCreateWithoutMenuCategoriesInput, CompanyUncheckedCreateWithoutMenuCategoriesInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutMenuCategoriesInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutMenuCategoriesInput, CompanyUncheckedUpdateWithoutMenuCategoriesInput>
  }

  export type CompanyUpdateWithoutMenuCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    defaultCurrency?: StringFieldUpdateOperationsInput | string
    status?: EnumCompanyStatusFieldUpdateOperationsInput | $Enums.CompanyStatus
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    branches?: BranchUpdateManyWithoutCompanyNestedInput
    licenses?: LicenseUpdateManyWithoutCompanyNestedInput
    menuProducts?: MenuProductUpdateManyWithoutCompanyNestedInput
    modifierCategories?: ModifierCategoryUpdateManyWithoutCompanyNestedInput
    modifiers?: ModifierUpdateManyWithoutCompanyNestedInput
    promotions?: PromotionUpdateManyWithoutCompanyNestedInput
    users?: UserUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutMenuCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    defaultCurrency?: StringFieldUpdateOperationsInput | string
    status?: EnumCompanyStatusFieldUpdateOperationsInput | $Enums.CompanyStatus
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    branches?: BranchUncheckedUpdateManyWithoutCompanyNestedInput
    licenses?: LicenseUncheckedUpdateManyWithoutCompanyNestedInput
    menuProducts?: MenuProductUncheckedUpdateManyWithoutCompanyNestedInput
    modifierCategories?: ModifierCategoryUncheckedUpdateManyWithoutCompanyNestedInput
    modifiers?: ModifierUncheckedUpdateManyWithoutCompanyNestedInput
    promotions?: PromotionUncheckedUpdateManyWithoutCompanyNestedInput
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type MenuProductUpsertWithWhereUniqueWithoutCategoryInput = {
    where: MenuProductWhereUniqueInput
    update: XOR<MenuProductUpdateWithoutCategoryInput, MenuProductUncheckedUpdateWithoutCategoryInput>
    create: XOR<MenuProductCreateWithoutCategoryInput, MenuProductUncheckedCreateWithoutCategoryInput>
  }

  export type MenuProductUpdateWithWhereUniqueWithoutCategoryInput = {
    where: MenuProductWhereUniqueInput
    data: XOR<MenuProductUpdateWithoutCategoryInput, MenuProductUncheckedUpdateWithoutCategoryInput>
  }

  export type MenuProductUpdateManyWithWhereWithoutCategoryInput = {
    where: MenuProductScalarWhereInput
    data: XOR<MenuProductUpdateManyMutationInput, MenuProductUncheckedUpdateManyWithoutCategoryInput>
  }

  export type MenuCategoryCreateWithoutProductsInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    displayNumber?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    company: CompanyCreateNestedOneWithoutMenuCategoriesInput
  }

  export type MenuCategoryUncheckedCreateWithoutProductsInput = {
    id?: string
    companyId: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    displayNumber?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type MenuCategoryCreateOrConnectWithoutProductsInput = {
    where: MenuCategoryWhereUniqueInput
    create: XOR<MenuCategoryCreateWithoutProductsInput, MenuCategoryUncheckedCreateWithoutProductsInput>
  }

  export type CompanyCreateWithoutMenuProductsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    businessType?: string | null
    timezone?: string
    defaultCurrency?: string
    status?: $Enums.CompanyStatus
    subscriptionPlan?: string | null
    subscriptionExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    branches?: BranchCreateNestedManyWithoutCompanyInput
    licenses?: LicenseCreateNestedManyWithoutCompanyInput
    menuCategories?: MenuCategoryCreateNestedManyWithoutCompanyInput
    modifierCategories?: ModifierCategoryCreateNestedManyWithoutCompanyInput
    modifiers?: ModifierCreateNestedManyWithoutCompanyInput
    promotions?: PromotionCreateNestedManyWithoutCompanyInput
    users?: UserCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutMenuProductsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    businessType?: string | null
    timezone?: string
    defaultCurrency?: string
    status?: $Enums.CompanyStatus
    subscriptionPlan?: string | null
    subscriptionExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    branches?: BranchUncheckedCreateNestedManyWithoutCompanyInput
    licenses?: LicenseUncheckedCreateNestedManyWithoutCompanyInput
    menuCategories?: MenuCategoryUncheckedCreateNestedManyWithoutCompanyInput
    modifierCategories?: ModifierCategoryUncheckedCreateNestedManyWithoutCompanyInput
    modifiers?: ModifierUncheckedCreateNestedManyWithoutCompanyInput
    promotions?: PromotionUncheckedCreateNestedManyWithoutCompanyInput
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutMenuProductsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutMenuProductsInput, CompanyUncheckedCreateWithoutMenuProductsInput>
  }

  export type ProductModifierCategoryCreateWithoutProductInput = {
    id?: string
    minQuantity?: number
    maxQuantity?: number
    priceOverride?: Decimal | DecimalJsLike | number | string | null
    isRequired?: boolean
    displayOrder?: number
    createdAt?: Date | string
    modifierCategory: ModifierCategoryCreateNestedOneWithoutProductCategoriesInput
  }

  export type ProductModifierCategoryUncheckedCreateWithoutProductInput = {
    id?: string
    modifierCategoryId: string
    minQuantity?: number
    maxQuantity?: number
    priceOverride?: Decimal | DecimalJsLike | number | string | null
    isRequired?: boolean
    displayOrder?: number
    createdAt?: Date | string
  }

  export type ProductModifierCategoryCreateOrConnectWithoutProductInput = {
    where: ProductModifierCategoryWhereUniqueInput
    create: XOR<ProductModifierCategoryCreateWithoutProductInput, ProductModifierCategoryUncheckedCreateWithoutProductInput>
  }

  export type ProductModifierCategoryCreateManyProductInputEnvelope = {
    data: ProductModifierCategoryCreateManyProductInput | ProductModifierCategoryCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type PromotionModifierMarkupCreateWithoutProductInput = {
    id?: string
    markupPercentage: Decimal | DecimalJsLike | number | string
    originalPrice: Decimal | DecimalJsLike | number | string
    markedUpPrice: Decimal | DecimalJsLike | number | string
    profitMargin?: Decimal | DecimalJsLike | number | string | null
    businessReason?: string | null
    createdAt?: Date | string
    modifier: ModifierCreateNestedOneWithoutPromotionMarkupsInput
    promotion: PromotionCreateNestedOneWithoutModifierMarkupsInput
  }

  export type PromotionModifierMarkupUncheckedCreateWithoutProductInput = {
    id?: string
    promotionId: string
    modifierId: string
    markupPercentage: Decimal | DecimalJsLike | number | string
    originalPrice: Decimal | DecimalJsLike | number | string
    markedUpPrice: Decimal | DecimalJsLike | number | string
    profitMargin?: Decimal | DecimalJsLike | number | string | null
    businessReason?: string | null
    createdAt?: Date | string
  }

  export type PromotionModifierMarkupCreateOrConnectWithoutProductInput = {
    where: PromotionModifierMarkupWhereUniqueInput
    create: XOR<PromotionModifierMarkupCreateWithoutProductInput, PromotionModifierMarkupUncheckedCreateWithoutProductInput>
  }

  export type PromotionModifierMarkupCreateManyProductInputEnvelope = {
    data: PromotionModifierMarkupCreateManyProductInput | PromotionModifierMarkupCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type PromotionProductCreateWithoutProductInput = {
    id?: string
    baseDiscountType?: string
    baseDiscountValue: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    promotion: PromotionCreateNestedOneWithoutPromotionProductsInput
  }

  export type PromotionProductUncheckedCreateWithoutProductInput = {
    id?: string
    promotionId: string
    baseDiscountType?: string
    baseDiscountValue: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
  }

  export type PromotionProductCreateOrConnectWithoutProductInput = {
    where: PromotionProductWhereUniqueInput
    create: XOR<PromotionProductCreateWithoutProductInput, PromotionProductUncheckedCreateWithoutProductInput>
  }

  export type PromotionProductCreateManyProductInputEnvelope = {
    data: PromotionProductCreateManyProductInput | PromotionProductCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProductImageCreateWithoutProductInput = {
    id?: string
    filename: string
    originalName: string
    url: string
    size: number
    width: number
    height: number
    mimeType: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductImageUncheckedCreateWithoutProductInput = {
    id?: string
    filename: string
    originalName: string
    url: string
    size: number
    width: number
    height: number
    mimeType: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductImageCreateOrConnectWithoutProductInput = {
    where: ProductImageWhereUniqueInput
    create: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput>
  }

  export type ProductImageCreateManyProductInputEnvelope = {
    data: ProductImageCreateManyProductInput | ProductImageCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type MenuCategoryUpsertWithoutProductsInput = {
    update: XOR<MenuCategoryUpdateWithoutProductsInput, MenuCategoryUncheckedUpdateWithoutProductsInput>
    create: XOR<MenuCategoryCreateWithoutProductsInput, MenuCategoryUncheckedCreateWithoutProductsInput>
    where?: MenuCategoryWhereInput
  }

  export type MenuCategoryUpdateToOneWithWhereWithoutProductsInput = {
    where?: MenuCategoryWhereInput
    data: XOR<MenuCategoryUpdateWithoutProductsInput, MenuCategoryUncheckedUpdateWithoutProductsInput>
  }

  export type MenuCategoryUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    displayNumber?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    company?: CompanyUpdateOneRequiredWithoutMenuCategoriesNestedInput
  }

  export type MenuCategoryUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    displayNumber?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyUpsertWithoutMenuProductsInput = {
    update: XOR<CompanyUpdateWithoutMenuProductsInput, CompanyUncheckedUpdateWithoutMenuProductsInput>
    create: XOR<CompanyCreateWithoutMenuProductsInput, CompanyUncheckedCreateWithoutMenuProductsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutMenuProductsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutMenuProductsInput, CompanyUncheckedUpdateWithoutMenuProductsInput>
  }

  export type CompanyUpdateWithoutMenuProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    defaultCurrency?: StringFieldUpdateOperationsInput | string
    status?: EnumCompanyStatusFieldUpdateOperationsInput | $Enums.CompanyStatus
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    branches?: BranchUpdateManyWithoutCompanyNestedInput
    licenses?: LicenseUpdateManyWithoutCompanyNestedInput
    menuCategories?: MenuCategoryUpdateManyWithoutCompanyNestedInput
    modifierCategories?: ModifierCategoryUpdateManyWithoutCompanyNestedInput
    modifiers?: ModifierUpdateManyWithoutCompanyNestedInput
    promotions?: PromotionUpdateManyWithoutCompanyNestedInput
    users?: UserUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutMenuProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    defaultCurrency?: StringFieldUpdateOperationsInput | string
    status?: EnumCompanyStatusFieldUpdateOperationsInput | $Enums.CompanyStatus
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    branches?: BranchUncheckedUpdateManyWithoutCompanyNestedInput
    licenses?: LicenseUncheckedUpdateManyWithoutCompanyNestedInput
    menuCategories?: MenuCategoryUncheckedUpdateManyWithoutCompanyNestedInput
    modifierCategories?: ModifierCategoryUncheckedUpdateManyWithoutCompanyNestedInput
    modifiers?: ModifierUncheckedUpdateManyWithoutCompanyNestedInput
    promotions?: PromotionUncheckedUpdateManyWithoutCompanyNestedInput
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type ProductModifierCategoryUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductModifierCategoryWhereUniqueInput
    update: XOR<ProductModifierCategoryUpdateWithoutProductInput, ProductModifierCategoryUncheckedUpdateWithoutProductInput>
    create: XOR<ProductModifierCategoryCreateWithoutProductInput, ProductModifierCategoryUncheckedCreateWithoutProductInput>
  }

  export type ProductModifierCategoryUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductModifierCategoryWhereUniqueInput
    data: XOR<ProductModifierCategoryUpdateWithoutProductInput, ProductModifierCategoryUncheckedUpdateWithoutProductInput>
  }

  export type ProductModifierCategoryUpdateManyWithWhereWithoutProductInput = {
    where: ProductModifierCategoryScalarWhereInput
    data: XOR<ProductModifierCategoryUpdateManyMutationInput, ProductModifierCategoryUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductModifierCategoryScalarWhereInput = {
    AND?: ProductModifierCategoryScalarWhereInput | ProductModifierCategoryScalarWhereInput[]
    OR?: ProductModifierCategoryScalarWhereInput[]
    NOT?: ProductModifierCategoryScalarWhereInput | ProductModifierCategoryScalarWhereInput[]
    id?: StringFilter<"ProductModifierCategory"> | string
    productId?: StringFilter<"ProductModifierCategory"> | string
    modifierCategoryId?: StringFilter<"ProductModifierCategory"> | string
    minQuantity?: IntFilter<"ProductModifierCategory"> | number
    maxQuantity?: IntFilter<"ProductModifierCategory"> | number
    priceOverride?: DecimalNullableFilter<"ProductModifierCategory"> | Decimal | DecimalJsLike | number | string | null
    isRequired?: BoolFilter<"ProductModifierCategory"> | boolean
    displayOrder?: IntFilter<"ProductModifierCategory"> | number
    createdAt?: DateTimeFilter<"ProductModifierCategory"> | Date | string
  }

  export type PromotionModifierMarkupUpsertWithWhereUniqueWithoutProductInput = {
    where: PromotionModifierMarkupWhereUniqueInput
    update: XOR<PromotionModifierMarkupUpdateWithoutProductInput, PromotionModifierMarkupUncheckedUpdateWithoutProductInput>
    create: XOR<PromotionModifierMarkupCreateWithoutProductInput, PromotionModifierMarkupUncheckedCreateWithoutProductInput>
  }

  export type PromotionModifierMarkupUpdateWithWhereUniqueWithoutProductInput = {
    where: PromotionModifierMarkupWhereUniqueInput
    data: XOR<PromotionModifierMarkupUpdateWithoutProductInput, PromotionModifierMarkupUncheckedUpdateWithoutProductInput>
  }

  export type PromotionModifierMarkupUpdateManyWithWhereWithoutProductInput = {
    where: PromotionModifierMarkupScalarWhereInput
    data: XOR<PromotionModifierMarkupUpdateManyMutationInput, PromotionModifierMarkupUncheckedUpdateManyWithoutProductInput>
  }

  export type PromotionModifierMarkupScalarWhereInput = {
    AND?: PromotionModifierMarkupScalarWhereInput | PromotionModifierMarkupScalarWhereInput[]
    OR?: PromotionModifierMarkupScalarWhereInput[]
    NOT?: PromotionModifierMarkupScalarWhereInput | PromotionModifierMarkupScalarWhereInput[]
    id?: StringFilter<"PromotionModifierMarkup"> | string
    promotionId?: StringFilter<"PromotionModifierMarkup"> | string
    productId?: StringFilter<"PromotionModifierMarkup"> | string
    modifierId?: StringFilter<"PromotionModifierMarkup"> | string
    markupPercentage?: DecimalFilter<"PromotionModifierMarkup"> | Decimal | DecimalJsLike | number | string
    originalPrice?: DecimalFilter<"PromotionModifierMarkup"> | Decimal | DecimalJsLike | number | string
    markedUpPrice?: DecimalFilter<"PromotionModifierMarkup"> | Decimal | DecimalJsLike | number | string
    profitMargin?: DecimalNullableFilter<"PromotionModifierMarkup"> | Decimal | DecimalJsLike | number | string | null
    businessReason?: StringNullableFilter<"PromotionModifierMarkup"> | string | null
    createdAt?: DateTimeFilter<"PromotionModifierMarkup"> | Date | string
  }

  export type PromotionProductUpsertWithWhereUniqueWithoutProductInput = {
    where: PromotionProductWhereUniqueInput
    update: XOR<PromotionProductUpdateWithoutProductInput, PromotionProductUncheckedUpdateWithoutProductInput>
    create: XOR<PromotionProductCreateWithoutProductInput, PromotionProductUncheckedCreateWithoutProductInput>
  }

  export type PromotionProductUpdateWithWhereUniqueWithoutProductInput = {
    where: PromotionProductWhereUniqueInput
    data: XOR<PromotionProductUpdateWithoutProductInput, PromotionProductUncheckedUpdateWithoutProductInput>
  }

  export type PromotionProductUpdateManyWithWhereWithoutProductInput = {
    where: PromotionProductScalarWhereInput
    data: XOR<PromotionProductUpdateManyMutationInput, PromotionProductUncheckedUpdateManyWithoutProductInput>
  }

  export type PromotionProductScalarWhereInput = {
    AND?: PromotionProductScalarWhereInput | PromotionProductScalarWhereInput[]
    OR?: PromotionProductScalarWhereInput[]
    NOT?: PromotionProductScalarWhereInput | PromotionProductScalarWhereInput[]
    id?: StringFilter<"PromotionProduct"> | string
    promotionId?: StringFilter<"PromotionProduct"> | string
    productId?: StringFilter<"PromotionProduct"> | string
    baseDiscountType?: StringFilter<"PromotionProduct"> | string
    baseDiscountValue?: DecimalFilter<"PromotionProduct"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"PromotionProduct"> | Date | string
  }

  export type ProductImageUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductImageWhereUniqueInput
    update: XOR<ProductImageUpdateWithoutProductInput, ProductImageUncheckedUpdateWithoutProductInput>
    create: XOR<ProductImageCreateWithoutProductInput, ProductImageUncheckedCreateWithoutProductInput>
  }

  export type ProductImageUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductImageWhereUniqueInput
    data: XOR<ProductImageUpdateWithoutProductInput, ProductImageUncheckedUpdateWithoutProductInput>
  }

  export type ProductImageUpdateManyWithWhereWithoutProductInput = {
    where: ProductImageScalarWhereInput
    data: XOR<ProductImageUpdateManyMutationInput, ProductImageUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductImageScalarWhereInput = {
    AND?: ProductImageScalarWhereInput | ProductImageScalarWhereInput[]
    OR?: ProductImageScalarWhereInput[]
    NOT?: ProductImageScalarWhereInput | ProductImageScalarWhereInput[]
    id?: StringFilter<"ProductImage"> | string
    productId?: StringNullableFilter<"ProductImage"> | string | null
    filename?: StringFilter<"ProductImage"> | string
    originalName?: StringFilter<"ProductImage"> | string
    url?: StringFilter<"ProductImage"> | string
    size?: IntFilter<"ProductImage"> | number
    width?: IntFilter<"ProductImage"> | number
    height?: IntFilter<"ProductImage"> | number
    mimeType?: StringFilter<"ProductImage"> | string
    createdAt?: DateTimeFilter<"ProductImage"> | Date | string
    updatedAt?: DateTimeFilter<"ProductImage"> | Date | string
  }

  export type MenuProductCreateWithoutProductImagesInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    images?: MenuProductCreateimagesInput | string[]
    slug?: string | null
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    priority?: number
    preparationTime?: number
    pricingMethod?: number
    sellingMethod?: number
    tags?: MenuProductCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    category?: MenuCategoryCreateNestedOneWithoutProductsInput
    company: CompanyCreateNestedOneWithoutMenuProductsInput
    modifierCategories?: ProductModifierCategoryCreateNestedManyWithoutProductInput
    promotionModifierMarkups?: PromotionModifierMarkupCreateNestedManyWithoutProductInput
    promotionProducts?: PromotionProductCreateNestedManyWithoutProductInput
  }

  export type MenuProductUncheckedCreateWithoutProductImagesInput = {
    id?: string
    companyId: string
    categoryId?: string | null
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    images?: MenuProductCreateimagesInput | string[]
    slug?: string | null
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    priority?: number
    preparationTime?: number
    pricingMethod?: number
    sellingMethod?: number
    tags?: MenuProductCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    modifierCategories?: ProductModifierCategoryUncheckedCreateNestedManyWithoutProductInput
    promotionModifierMarkups?: PromotionModifierMarkupUncheckedCreateNestedManyWithoutProductInput
    promotionProducts?: PromotionProductUncheckedCreateNestedManyWithoutProductInput
  }

  export type MenuProductCreateOrConnectWithoutProductImagesInput = {
    where: MenuProductWhereUniqueInput
    create: XOR<MenuProductCreateWithoutProductImagesInput, MenuProductUncheckedCreateWithoutProductImagesInput>
  }

  export type MenuProductUpsertWithoutProductImagesInput = {
    update: XOR<MenuProductUpdateWithoutProductImagesInput, MenuProductUncheckedUpdateWithoutProductImagesInput>
    create: XOR<MenuProductCreateWithoutProductImagesInput, MenuProductUncheckedCreateWithoutProductImagesInput>
    where?: MenuProductWhereInput
  }

  export type MenuProductUpdateToOneWithWhereWithoutProductImagesInput = {
    where?: MenuProductWhereInput
    data: XOR<MenuProductUpdateWithoutProductImagesInput, MenuProductUncheckedUpdateWithoutProductImagesInput>
  }

  export type MenuProductUpdateWithoutProductImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MenuProductUpdateimagesInput | string[]
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    priority?: IntFieldUpdateOperationsInput | number
    preparationTime?: IntFieldUpdateOperationsInput | number
    pricingMethod?: IntFieldUpdateOperationsInput | number
    sellingMethod?: IntFieldUpdateOperationsInput | number
    tags?: MenuProductUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    category?: MenuCategoryUpdateOneWithoutProductsNestedInput
    company?: CompanyUpdateOneRequiredWithoutMenuProductsNestedInput
    modifierCategories?: ProductModifierCategoryUpdateManyWithoutProductNestedInput
    promotionModifierMarkups?: PromotionModifierMarkupUpdateManyWithoutProductNestedInput
    promotionProducts?: PromotionProductUpdateManyWithoutProductNestedInput
  }

  export type MenuProductUncheckedUpdateWithoutProductImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MenuProductUpdateimagesInput | string[]
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    priority?: IntFieldUpdateOperationsInput | number
    preparationTime?: IntFieldUpdateOperationsInput | number
    pricingMethod?: IntFieldUpdateOperationsInput | number
    sellingMethod?: IntFieldUpdateOperationsInput | number
    tags?: MenuProductUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    modifierCategories?: ProductModifierCategoryUncheckedUpdateManyWithoutProductNestedInput
    promotionModifierMarkups?: PromotionModifierMarkupUncheckedUpdateManyWithoutProductNestedInput
    promotionProducts?: PromotionProductUncheckedUpdateManyWithoutProductNestedInput
  }

  export type CompanyCreateWithoutModifierCategoriesInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    businessType?: string | null
    timezone?: string
    defaultCurrency?: string
    status?: $Enums.CompanyStatus
    subscriptionPlan?: string | null
    subscriptionExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    branches?: BranchCreateNestedManyWithoutCompanyInput
    licenses?: LicenseCreateNestedManyWithoutCompanyInput
    menuCategories?: MenuCategoryCreateNestedManyWithoutCompanyInput
    menuProducts?: MenuProductCreateNestedManyWithoutCompanyInput
    modifiers?: ModifierCreateNestedManyWithoutCompanyInput
    promotions?: PromotionCreateNestedManyWithoutCompanyInput
    users?: UserCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutModifierCategoriesInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    businessType?: string | null
    timezone?: string
    defaultCurrency?: string
    status?: $Enums.CompanyStatus
    subscriptionPlan?: string | null
    subscriptionExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    branches?: BranchUncheckedCreateNestedManyWithoutCompanyInput
    licenses?: LicenseUncheckedCreateNestedManyWithoutCompanyInput
    menuCategories?: MenuCategoryUncheckedCreateNestedManyWithoutCompanyInput
    menuProducts?: MenuProductUncheckedCreateNestedManyWithoutCompanyInput
    modifiers?: ModifierUncheckedCreateNestedManyWithoutCompanyInput
    promotions?: PromotionUncheckedCreateNestedManyWithoutCompanyInput
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutModifierCategoriesInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutModifierCategoriesInput, CompanyUncheckedCreateWithoutModifierCategoriesInput>
  }

  export type ModifierCreateWithoutModifierCategoryInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    displayNumber?: number
    isDefault?: boolean
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    company: CompanyCreateNestedOneWithoutModifiersInput
    promotionMarkups?: PromotionModifierMarkupCreateNestedManyWithoutModifierInput
  }

  export type ModifierUncheckedCreateWithoutModifierCategoryInput = {
    id?: string
    companyId: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    displayNumber?: number
    isDefault?: boolean
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    promotionMarkups?: PromotionModifierMarkupUncheckedCreateNestedManyWithoutModifierInput
  }

  export type ModifierCreateOrConnectWithoutModifierCategoryInput = {
    where: ModifierWhereUniqueInput
    create: XOR<ModifierCreateWithoutModifierCategoryInput, ModifierUncheckedCreateWithoutModifierCategoryInput>
  }

  export type ModifierCreateManyModifierCategoryInputEnvelope = {
    data: ModifierCreateManyModifierCategoryInput | ModifierCreateManyModifierCategoryInput[]
    skipDuplicates?: boolean
  }

  export type ProductModifierCategoryCreateWithoutModifierCategoryInput = {
    id?: string
    minQuantity?: number
    maxQuantity?: number
    priceOverride?: Decimal | DecimalJsLike | number | string | null
    isRequired?: boolean
    displayOrder?: number
    createdAt?: Date | string
    product: MenuProductCreateNestedOneWithoutModifierCategoriesInput
  }

  export type ProductModifierCategoryUncheckedCreateWithoutModifierCategoryInput = {
    id?: string
    productId: string
    minQuantity?: number
    maxQuantity?: number
    priceOverride?: Decimal | DecimalJsLike | number | string | null
    isRequired?: boolean
    displayOrder?: number
    createdAt?: Date | string
  }

  export type ProductModifierCategoryCreateOrConnectWithoutModifierCategoryInput = {
    where: ProductModifierCategoryWhereUniqueInput
    create: XOR<ProductModifierCategoryCreateWithoutModifierCategoryInput, ProductModifierCategoryUncheckedCreateWithoutModifierCategoryInput>
  }

  export type ProductModifierCategoryCreateManyModifierCategoryInputEnvelope = {
    data: ProductModifierCategoryCreateManyModifierCategoryInput | ProductModifierCategoryCreateManyModifierCategoryInput[]
    skipDuplicates?: boolean
  }

  export type CompanyUpsertWithoutModifierCategoriesInput = {
    update: XOR<CompanyUpdateWithoutModifierCategoriesInput, CompanyUncheckedUpdateWithoutModifierCategoriesInput>
    create: XOR<CompanyCreateWithoutModifierCategoriesInput, CompanyUncheckedCreateWithoutModifierCategoriesInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutModifierCategoriesInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutModifierCategoriesInput, CompanyUncheckedUpdateWithoutModifierCategoriesInput>
  }

  export type CompanyUpdateWithoutModifierCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    defaultCurrency?: StringFieldUpdateOperationsInput | string
    status?: EnumCompanyStatusFieldUpdateOperationsInput | $Enums.CompanyStatus
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    branches?: BranchUpdateManyWithoutCompanyNestedInput
    licenses?: LicenseUpdateManyWithoutCompanyNestedInput
    menuCategories?: MenuCategoryUpdateManyWithoutCompanyNestedInput
    menuProducts?: MenuProductUpdateManyWithoutCompanyNestedInput
    modifiers?: ModifierUpdateManyWithoutCompanyNestedInput
    promotions?: PromotionUpdateManyWithoutCompanyNestedInput
    users?: UserUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutModifierCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    defaultCurrency?: StringFieldUpdateOperationsInput | string
    status?: EnumCompanyStatusFieldUpdateOperationsInput | $Enums.CompanyStatus
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    branches?: BranchUncheckedUpdateManyWithoutCompanyNestedInput
    licenses?: LicenseUncheckedUpdateManyWithoutCompanyNestedInput
    menuCategories?: MenuCategoryUncheckedUpdateManyWithoutCompanyNestedInput
    menuProducts?: MenuProductUncheckedUpdateManyWithoutCompanyNestedInput
    modifiers?: ModifierUncheckedUpdateManyWithoutCompanyNestedInput
    promotions?: PromotionUncheckedUpdateManyWithoutCompanyNestedInput
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type ModifierUpsertWithWhereUniqueWithoutModifierCategoryInput = {
    where: ModifierWhereUniqueInput
    update: XOR<ModifierUpdateWithoutModifierCategoryInput, ModifierUncheckedUpdateWithoutModifierCategoryInput>
    create: XOR<ModifierCreateWithoutModifierCategoryInput, ModifierUncheckedCreateWithoutModifierCategoryInput>
  }

  export type ModifierUpdateWithWhereUniqueWithoutModifierCategoryInput = {
    where: ModifierWhereUniqueInput
    data: XOR<ModifierUpdateWithoutModifierCategoryInput, ModifierUncheckedUpdateWithoutModifierCategoryInput>
  }

  export type ModifierUpdateManyWithWhereWithoutModifierCategoryInput = {
    where: ModifierScalarWhereInput
    data: XOR<ModifierUpdateManyMutationInput, ModifierUncheckedUpdateManyWithoutModifierCategoryInput>
  }

  export type ProductModifierCategoryUpsertWithWhereUniqueWithoutModifierCategoryInput = {
    where: ProductModifierCategoryWhereUniqueInput
    update: XOR<ProductModifierCategoryUpdateWithoutModifierCategoryInput, ProductModifierCategoryUncheckedUpdateWithoutModifierCategoryInput>
    create: XOR<ProductModifierCategoryCreateWithoutModifierCategoryInput, ProductModifierCategoryUncheckedCreateWithoutModifierCategoryInput>
  }

  export type ProductModifierCategoryUpdateWithWhereUniqueWithoutModifierCategoryInput = {
    where: ProductModifierCategoryWhereUniqueInput
    data: XOR<ProductModifierCategoryUpdateWithoutModifierCategoryInput, ProductModifierCategoryUncheckedUpdateWithoutModifierCategoryInput>
  }

  export type ProductModifierCategoryUpdateManyWithWhereWithoutModifierCategoryInput = {
    where: ProductModifierCategoryScalarWhereInput
    data: XOR<ProductModifierCategoryUpdateManyMutationInput, ProductModifierCategoryUncheckedUpdateManyWithoutModifierCategoryInput>
  }

  export type CompanyCreateWithoutModifiersInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    businessType?: string | null
    timezone?: string
    defaultCurrency?: string
    status?: $Enums.CompanyStatus
    subscriptionPlan?: string | null
    subscriptionExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    branches?: BranchCreateNestedManyWithoutCompanyInput
    licenses?: LicenseCreateNestedManyWithoutCompanyInput
    menuCategories?: MenuCategoryCreateNestedManyWithoutCompanyInput
    menuProducts?: MenuProductCreateNestedManyWithoutCompanyInput
    modifierCategories?: ModifierCategoryCreateNestedManyWithoutCompanyInput
    promotions?: PromotionCreateNestedManyWithoutCompanyInput
    users?: UserCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutModifiersInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    businessType?: string | null
    timezone?: string
    defaultCurrency?: string
    status?: $Enums.CompanyStatus
    subscriptionPlan?: string | null
    subscriptionExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    branches?: BranchUncheckedCreateNestedManyWithoutCompanyInput
    licenses?: LicenseUncheckedCreateNestedManyWithoutCompanyInput
    menuCategories?: MenuCategoryUncheckedCreateNestedManyWithoutCompanyInput
    menuProducts?: MenuProductUncheckedCreateNestedManyWithoutCompanyInput
    modifierCategories?: ModifierCategoryUncheckedCreateNestedManyWithoutCompanyInput
    promotions?: PromotionUncheckedCreateNestedManyWithoutCompanyInput
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutModifiersInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutModifiersInput, CompanyUncheckedCreateWithoutModifiersInput>
  }

  export type ModifierCategoryCreateWithoutModifiersInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: number
    image?: string | null
    selectionType?: $Enums.ModifierSelectionType
    isRequired?: boolean
    minSelections?: number
    maxSelections?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    company: CompanyCreateNestedOneWithoutModifierCategoriesInput
    productCategories?: ProductModifierCategoryCreateNestedManyWithoutModifierCategoryInput
  }

  export type ModifierCategoryUncheckedCreateWithoutModifiersInput = {
    id?: string
    companyId: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: number
    image?: string | null
    selectionType?: $Enums.ModifierSelectionType
    isRequired?: boolean
    minSelections?: number
    maxSelections?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    productCategories?: ProductModifierCategoryUncheckedCreateNestedManyWithoutModifierCategoryInput
  }

  export type ModifierCategoryCreateOrConnectWithoutModifiersInput = {
    where: ModifierCategoryWhereUniqueInput
    create: XOR<ModifierCategoryCreateWithoutModifiersInput, ModifierCategoryUncheckedCreateWithoutModifiersInput>
  }

  export type PromotionModifierMarkupCreateWithoutModifierInput = {
    id?: string
    markupPercentage: Decimal | DecimalJsLike | number | string
    originalPrice: Decimal | DecimalJsLike | number | string
    markedUpPrice: Decimal | DecimalJsLike | number | string
    profitMargin?: Decimal | DecimalJsLike | number | string | null
    businessReason?: string | null
    createdAt?: Date | string
    product: MenuProductCreateNestedOneWithoutPromotionModifierMarkupsInput
    promotion: PromotionCreateNestedOneWithoutModifierMarkupsInput
  }

  export type PromotionModifierMarkupUncheckedCreateWithoutModifierInput = {
    id?: string
    promotionId: string
    productId: string
    markupPercentage: Decimal | DecimalJsLike | number | string
    originalPrice: Decimal | DecimalJsLike | number | string
    markedUpPrice: Decimal | DecimalJsLike | number | string
    profitMargin?: Decimal | DecimalJsLike | number | string | null
    businessReason?: string | null
    createdAt?: Date | string
  }

  export type PromotionModifierMarkupCreateOrConnectWithoutModifierInput = {
    where: PromotionModifierMarkupWhereUniqueInput
    create: XOR<PromotionModifierMarkupCreateWithoutModifierInput, PromotionModifierMarkupUncheckedCreateWithoutModifierInput>
  }

  export type PromotionModifierMarkupCreateManyModifierInputEnvelope = {
    data: PromotionModifierMarkupCreateManyModifierInput | PromotionModifierMarkupCreateManyModifierInput[]
    skipDuplicates?: boolean
  }

  export type CompanyUpsertWithoutModifiersInput = {
    update: XOR<CompanyUpdateWithoutModifiersInput, CompanyUncheckedUpdateWithoutModifiersInput>
    create: XOR<CompanyCreateWithoutModifiersInput, CompanyUncheckedCreateWithoutModifiersInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutModifiersInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutModifiersInput, CompanyUncheckedUpdateWithoutModifiersInput>
  }

  export type CompanyUpdateWithoutModifiersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    defaultCurrency?: StringFieldUpdateOperationsInput | string
    status?: EnumCompanyStatusFieldUpdateOperationsInput | $Enums.CompanyStatus
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    branches?: BranchUpdateManyWithoutCompanyNestedInput
    licenses?: LicenseUpdateManyWithoutCompanyNestedInput
    menuCategories?: MenuCategoryUpdateManyWithoutCompanyNestedInput
    menuProducts?: MenuProductUpdateManyWithoutCompanyNestedInput
    modifierCategories?: ModifierCategoryUpdateManyWithoutCompanyNestedInput
    promotions?: PromotionUpdateManyWithoutCompanyNestedInput
    users?: UserUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutModifiersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    defaultCurrency?: StringFieldUpdateOperationsInput | string
    status?: EnumCompanyStatusFieldUpdateOperationsInput | $Enums.CompanyStatus
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    branches?: BranchUncheckedUpdateManyWithoutCompanyNestedInput
    licenses?: LicenseUncheckedUpdateManyWithoutCompanyNestedInput
    menuCategories?: MenuCategoryUncheckedUpdateManyWithoutCompanyNestedInput
    menuProducts?: MenuProductUncheckedUpdateManyWithoutCompanyNestedInput
    modifierCategories?: ModifierCategoryUncheckedUpdateManyWithoutCompanyNestedInput
    promotions?: PromotionUncheckedUpdateManyWithoutCompanyNestedInput
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type ModifierCategoryUpsertWithoutModifiersInput = {
    update: XOR<ModifierCategoryUpdateWithoutModifiersInput, ModifierCategoryUncheckedUpdateWithoutModifiersInput>
    create: XOR<ModifierCategoryCreateWithoutModifiersInput, ModifierCategoryUncheckedCreateWithoutModifiersInput>
    where?: ModifierCategoryWhereInput
  }

  export type ModifierCategoryUpdateToOneWithWhereWithoutModifiersInput = {
    where?: ModifierCategoryWhereInput
    data: XOR<ModifierCategoryUpdateWithoutModifiersInput, ModifierCategoryUncheckedUpdateWithoutModifiersInput>
  }

  export type ModifierCategoryUpdateWithoutModifiersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: IntFieldUpdateOperationsInput | number
    image?: NullableStringFieldUpdateOperationsInput | string | null
    selectionType?: EnumModifierSelectionTypeFieldUpdateOperationsInput | $Enums.ModifierSelectionType
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    minSelections?: IntFieldUpdateOperationsInput | number
    maxSelections?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutModifierCategoriesNestedInput
    productCategories?: ProductModifierCategoryUpdateManyWithoutModifierCategoryNestedInput
  }

  export type ModifierCategoryUncheckedUpdateWithoutModifiersInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: IntFieldUpdateOperationsInput | number
    image?: NullableStringFieldUpdateOperationsInput | string | null
    selectionType?: EnumModifierSelectionTypeFieldUpdateOperationsInput | $Enums.ModifierSelectionType
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    minSelections?: IntFieldUpdateOperationsInput | number
    maxSelections?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productCategories?: ProductModifierCategoryUncheckedUpdateManyWithoutModifierCategoryNestedInput
  }

  export type PromotionModifierMarkupUpsertWithWhereUniqueWithoutModifierInput = {
    where: PromotionModifierMarkupWhereUniqueInput
    update: XOR<PromotionModifierMarkupUpdateWithoutModifierInput, PromotionModifierMarkupUncheckedUpdateWithoutModifierInput>
    create: XOR<PromotionModifierMarkupCreateWithoutModifierInput, PromotionModifierMarkupUncheckedCreateWithoutModifierInput>
  }

  export type PromotionModifierMarkupUpdateWithWhereUniqueWithoutModifierInput = {
    where: PromotionModifierMarkupWhereUniqueInput
    data: XOR<PromotionModifierMarkupUpdateWithoutModifierInput, PromotionModifierMarkupUncheckedUpdateWithoutModifierInput>
  }

  export type PromotionModifierMarkupUpdateManyWithWhereWithoutModifierInput = {
    where: PromotionModifierMarkupScalarWhereInput
    data: XOR<PromotionModifierMarkupUpdateManyMutationInput, PromotionModifierMarkupUncheckedUpdateManyWithoutModifierInput>
  }

  export type ModifierCategoryCreateWithoutProductCategoriesInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: number
    image?: string | null
    selectionType?: $Enums.ModifierSelectionType
    isRequired?: boolean
    minSelections?: number
    maxSelections?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    company: CompanyCreateNestedOneWithoutModifierCategoriesInput
    modifiers?: ModifierCreateNestedManyWithoutModifierCategoryInput
  }

  export type ModifierCategoryUncheckedCreateWithoutProductCategoriesInput = {
    id?: string
    companyId: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: number
    image?: string | null
    selectionType?: $Enums.ModifierSelectionType
    isRequired?: boolean
    minSelections?: number
    maxSelections?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    modifiers?: ModifierUncheckedCreateNestedManyWithoutModifierCategoryInput
  }

  export type ModifierCategoryCreateOrConnectWithoutProductCategoriesInput = {
    where: ModifierCategoryWhereUniqueInput
    create: XOR<ModifierCategoryCreateWithoutProductCategoriesInput, ModifierCategoryUncheckedCreateWithoutProductCategoriesInput>
  }

  export type MenuProductCreateWithoutModifierCategoriesInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    images?: MenuProductCreateimagesInput | string[]
    slug?: string | null
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    priority?: number
    preparationTime?: number
    pricingMethod?: number
    sellingMethod?: number
    tags?: MenuProductCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    category?: MenuCategoryCreateNestedOneWithoutProductsInput
    company: CompanyCreateNestedOneWithoutMenuProductsInput
    promotionModifierMarkups?: PromotionModifierMarkupCreateNestedManyWithoutProductInput
    promotionProducts?: PromotionProductCreateNestedManyWithoutProductInput
    productImages?: ProductImageCreateNestedManyWithoutProductInput
  }

  export type MenuProductUncheckedCreateWithoutModifierCategoriesInput = {
    id?: string
    companyId: string
    categoryId?: string | null
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    images?: MenuProductCreateimagesInput | string[]
    slug?: string | null
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    priority?: number
    preparationTime?: number
    pricingMethod?: number
    sellingMethod?: number
    tags?: MenuProductCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    promotionModifierMarkups?: PromotionModifierMarkupUncheckedCreateNestedManyWithoutProductInput
    promotionProducts?: PromotionProductUncheckedCreateNestedManyWithoutProductInput
    productImages?: ProductImageUncheckedCreateNestedManyWithoutProductInput
  }

  export type MenuProductCreateOrConnectWithoutModifierCategoriesInput = {
    where: MenuProductWhereUniqueInput
    create: XOR<MenuProductCreateWithoutModifierCategoriesInput, MenuProductUncheckedCreateWithoutModifierCategoriesInput>
  }

  export type ModifierCategoryUpsertWithoutProductCategoriesInput = {
    update: XOR<ModifierCategoryUpdateWithoutProductCategoriesInput, ModifierCategoryUncheckedUpdateWithoutProductCategoriesInput>
    create: XOR<ModifierCategoryCreateWithoutProductCategoriesInput, ModifierCategoryUncheckedCreateWithoutProductCategoriesInput>
    where?: ModifierCategoryWhereInput
  }

  export type ModifierCategoryUpdateToOneWithWhereWithoutProductCategoriesInput = {
    where?: ModifierCategoryWhereInput
    data: XOR<ModifierCategoryUpdateWithoutProductCategoriesInput, ModifierCategoryUncheckedUpdateWithoutProductCategoriesInput>
  }

  export type ModifierCategoryUpdateWithoutProductCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: IntFieldUpdateOperationsInput | number
    image?: NullableStringFieldUpdateOperationsInput | string | null
    selectionType?: EnumModifierSelectionTypeFieldUpdateOperationsInput | $Enums.ModifierSelectionType
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    minSelections?: IntFieldUpdateOperationsInput | number
    maxSelections?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutModifierCategoriesNestedInput
    modifiers?: ModifierUpdateManyWithoutModifierCategoryNestedInput
  }

  export type ModifierCategoryUncheckedUpdateWithoutProductCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: IntFieldUpdateOperationsInput | number
    image?: NullableStringFieldUpdateOperationsInput | string | null
    selectionType?: EnumModifierSelectionTypeFieldUpdateOperationsInput | $Enums.ModifierSelectionType
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    minSelections?: IntFieldUpdateOperationsInput | number
    maxSelections?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiers?: ModifierUncheckedUpdateManyWithoutModifierCategoryNestedInput
  }

  export type MenuProductUpsertWithoutModifierCategoriesInput = {
    update: XOR<MenuProductUpdateWithoutModifierCategoriesInput, MenuProductUncheckedUpdateWithoutModifierCategoriesInput>
    create: XOR<MenuProductCreateWithoutModifierCategoriesInput, MenuProductUncheckedCreateWithoutModifierCategoriesInput>
    where?: MenuProductWhereInput
  }

  export type MenuProductUpdateToOneWithWhereWithoutModifierCategoriesInput = {
    where?: MenuProductWhereInput
    data: XOR<MenuProductUpdateWithoutModifierCategoriesInput, MenuProductUncheckedUpdateWithoutModifierCategoriesInput>
  }

  export type MenuProductUpdateWithoutModifierCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MenuProductUpdateimagesInput | string[]
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    priority?: IntFieldUpdateOperationsInput | number
    preparationTime?: IntFieldUpdateOperationsInput | number
    pricingMethod?: IntFieldUpdateOperationsInput | number
    sellingMethod?: IntFieldUpdateOperationsInput | number
    tags?: MenuProductUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    category?: MenuCategoryUpdateOneWithoutProductsNestedInput
    company?: CompanyUpdateOneRequiredWithoutMenuProductsNestedInput
    promotionModifierMarkups?: PromotionModifierMarkupUpdateManyWithoutProductNestedInput
    promotionProducts?: PromotionProductUpdateManyWithoutProductNestedInput
    productImages?: ProductImageUpdateManyWithoutProductNestedInput
  }

  export type MenuProductUncheckedUpdateWithoutModifierCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MenuProductUpdateimagesInput | string[]
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    priority?: IntFieldUpdateOperationsInput | number
    preparationTime?: IntFieldUpdateOperationsInput | number
    pricingMethod?: IntFieldUpdateOperationsInput | number
    sellingMethod?: IntFieldUpdateOperationsInput | number
    tags?: MenuProductUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    promotionModifierMarkups?: PromotionModifierMarkupUncheckedUpdateManyWithoutProductNestedInput
    promotionProducts?: PromotionProductUncheckedUpdateManyWithoutProductNestedInput
    productImages?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
  }

  export type PriceHistoryCreateWithoutPromotionInput = {
    id?: string
    entityType: string
    entityId: string
    oldPrice?: Decimal | DecimalJsLike | number | string | null
    newPrice?: Decimal | DecimalJsLike | number | string | null
    changeReason?: string | null
    platform?: string | null
    createdAt?: Date | string
    createdBy?: string | null
  }

  export type PriceHistoryUncheckedCreateWithoutPromotionInput = {
    id?: string
    entityType: string
    entityId: string
    oldPrice?: Decimal | DecimalJsLike | number | string | null
    newPrice?: Decimal | DecimalJsLike | number | string | null
    changeReason?: string | null
    platform?: string | null
    createdAt?: Date | string
    createdBy?: string | null
  }

  export type PriceHistoryCreateOrConnectWithoutPromotionInput = {
    where: PriceHistoryWhereUniqueInput
    create: XOR<PriceHistoryCreateWithoutPromotionInput, PriceHistoryUncheckedCreateWithoutPromotionInput>
  }

  export type PriceHistoryCreateManyPromotionInputEnvelope = {
    data: PriceHistoryCreateManyPromotionInput | PriceHistoryCreateManyPromotionInput[]
    skipDuplicates?: boolean
  }

  export type PromotionModifierMarkupCreateWithoutPromotionInput = {
    id?: string
    markupPercentage: Decimal | DecimalJsLike | number | string
    originalPrice: Decimal | DecimalJsLike | number | string
    markedUpPrice: Decimal | DecimalJsLike | number | string
    profitMargin?: Decimal | DecimalJsLike | number | string | null
    businessReason?: string | null
    createdAt?: Date | string
    modifier: ModifierCreateNestedOneWithoutPromotionMarkupsInput
    product: MenuProductCreateNestedOneWithoutPromotionModifierMarkupsInput
  }

  export type PromotionModifierMarkupUncheckedCreateWithoutPromotionInput = {
    id?: string
    productId: string
    modifierId: string
    markupPercentage: Decimal | DecimalJsLike | number | string
    originalPrice: Decimal | DecimalJsLike | number | string
    markedUpPrice: Decimal | DecimalJsLike | number | string
    profitMargin?: Decimal | DecimalJsLike | number | string | null
    businessReason?: string | null
    createdAt?: Date | string
  }

  export type PromotionModifierMarkupCreateOrConnectWithoutPromotionInput = {
    where: PromotionModifierMarkupWhereUniqueInput
    create: XOR<PromotionModifierMarkupCreateWithoutPromotionInput, PromotionModifierMarkupUncheckedCreateWithoutPromotionInput>
  }

  export type PromotionModifierMarkupCreateManyPromotionInputEnvelope = {
    data: PromotionModifierMarkupCreateManyPromotionInput | PromotionModifierMarkupCreateManyPromotionInput[]
    skipDuplicates?: boolean
  }

  export type PromotionProductCreateWithoutPromotionInput = {
    id?: string
    baseDiscountType?: string
    baseDiscountValue: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    product: MenuProductCreateNestedOneWithoutPromotionProductsInput
  }

  export type PromotionProductUncheckedCreateWithoutPromotionInput = {
    id?: string
    productId: string
    baseDiscountType?: string
    baseDiscountValue: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
  }

  export type PromotionProductCreateOrConnectWithoutPromotionInput = {
    where: PromotionProductWhereUniqueInput
    create: XOR<PromotionProductCreateWithoutPromotionInput, PromotionProductUncheckedCreateWithoutPromotionInput>
  }

  export type PromotionProductCreateManyPromotionInputEnvelope = {
    data: PromotionProductCreateManyPromotionInput | PromotionProductCreateManyPromotionInput[]
    skipDuplicates?: boolean
  }

  export type CompanyCreateWithoutPromotionsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    businessType?: string | null
    timezone?: string
    defaultCurrency?: string
    status?: $Enums.CompanyStatus
    subscriptionPlan?: string | null
    subscriptionExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    branches?: BranchCreateNestedManyWithoutCompanyInput
    licenses?: LicenseCreateNestedManyWithoutCompanyInput
    menuCategories?: MenuCategoryCreateNestedManyWithoutCompanyInput
    menuProducts?: MenuProductCreateNestedManyWithoutCompanyInput
    modifierCategories?: ModifierCategoryCreateNestedManyWithoutCompanyInput
    modifiers?: ModifierCreateNestedManyWithoutCompanyInput
    users?: UserCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutPromotionsInput = {
    id?: string
    name: string
    slug: string
    logo?: string | null
    businessType?: string | null
    timezone?: string
    defaultCurrency?: string
    status?: $Enums.CompanyStatus
    subscriptionPlan?: string | null
    subscriptionExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    branches?: BranchUncheckedCreateNestedManyWithoutCompanyInput
    licenses?: LicenseUncheckedCreateNestedManyWithoutCompanyInput
    menuCategories?: MenuCategoryUncheckedCreateNestedManyWithoutCompanyInput
    menuProducts?: MenuProductUncheckedCreateNestedManyWithoutCompanyInput
    modifierCategories?: ModifierCategoryUncheckedCreateNestedManyWithoutCompanyInput
    modifiers?: ModifierUncheckedCreateNestedManyWithoutCompanyInput
    users?: UserUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutPromotionsInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutPromotionsInput, CompanyUncheckedCreateWithoutPromotionsInput>
  }

  export type PriceHistoryUpsertWithWhereUniqueWithoutPromotionInput = {
    where: PriceHistoryWhereUniqueInput
    update: XOR<PriceHistoryUpdateWithoutPromotionInput, PriceHistoryUncheckedUpdateWithoutPromotionInput>
    create: XOR<PriceHistoryCreateWithoutPromotionInput, PriceHistoryUncheckedCreateWithoutPromotionInput>
  }

  export type PriceHistoryUpdateWithWhereUniqueWithoutPromotionInput = {
    where: PriceHistoryWhereUniqueInput
    data: XOR<PriceHistoryUpdateWithoutPromotionInput, PriceHistoryUncheckedUpdateWithoutPromotionInput>
  }

  export type PriceHistoryUpdateManyWithWhereWithoutPromotionInput = {
    where: PriceHistoryScalarWhereInput
    data: XOR<PriceHistoryUpdateManyMutationInput, PriceHistoryUncheckedUpdateManyWithoutPromotionInput>
  }

  export type PriceHistoryScalarWhereInput = {
    AND?: PriceHistoryScalarWhereInput | PriceHistoryScalarWhereInput[]
    OR?: PriceHistoryScalarWhereInput[]
    NOT?: PriceHistoryScalarWhereInput | PriceHistoryScalarWhereInput[]
    id?: StringFilter<"PriceHistory"> | string
    entityType?: StringFilter<"PriceHistory"> | string
    entityId?: StringFilter<"PriceHistory"> | string
    promotionId?: StringNullableFilter<"PriceHistory"> | string | null
    oldPrice?: DecimalNullableFilter<"PriceHistory"> | Decimal | DecimalJsLike | number | string | null
    newPrice?: DecimalNullableFilter<"PriceHistory"> | Decimal | DecimalJsLike | number | string | null
    changeReason?: StringNullableFilter<"PriceHistory"> | string | null
    platform?: StringNullableFilter<"PriceHistory"> | string | null
    createdAt?: DateTimeFilter<"PriceHistory"> | Date | string
    createdBy?: StringNullableFilter<"PriceHistory"> | string | null
  }

  export type PromotionModifierMarkupUpsertWithWhereUniqueWithoutPromotionInput = {
    where: PromotionModifierMarkupWhereUniqueInput
    update: XOR<PromotionModifierMarkupUpdateWithoutPromotionInput, PromotionModifierMarkupUncheckedUpdateWithoutPromotionInput>
    create: XOR<PromotionModifierMarkupCreateWithoutPromotionInput, PromotionModifierMarkupUncheckedCreateWithoutPromotionInput>
  }

  export type PromotionModifierMarkupUpdateWithWhereUniqueWithoutPromotionInput = {
    where: PromotionModifierMarkupWhereUniqueInput
    data: XOR<PromotionModifierMarkupUpdateWithoutPromotionInput, PromotionModifierMarkupUncheckedUpdateWithoutPromotionInput>
  }

  export type PromotionModifierMarkupUpdateManyWithWhereWithoutPromotionInput = {
    where: PromotionModifierMarkupScalarWhereInput
    data: XOR<PromotionModifierMarkupUpdateManyMutationInput, PromotionModifierMarkupUncheckedUpdateManyWithoutPromotionInput>
  }

  export type PromotionProductUpsertWithWhereUniqueWithoutPromotionInput = {
    where: PromotionProductWhereUniqueInput
    update: XOR<PromotionProductUpdateWithoutPromotionInput, PromotionProductUncheckedUpdateWithoutPromotionInput>
    create: XOR<PromotionProductCreateWithoutPromotionInput, PromotionProductUncheckedCreateWithoutPromotionInput>
  }

  export type PromotionProductUpdateWithWhereUniqueWithoutPromotionInput = {
    where: PromotionProductWhereUniqueInput
    data: XOR<PromotionProductUpdateWithoutPromotionInput, PromotionProductUncheckedUpdateWithoutPromotionInput>
  }

  export type PromotionProductUpdateManyWithWhereWithoutPromotionInput = {
    where: PromotionProductScalarWhereInput
    data: XOR<PromotionProductUpdateManyMutationInput, PromotionProductUncheckedUpdateManyWithoutPromotionInput>
  }

  export type CompanyUpsertWithoutPromotionsInput = {
    update: XOR<CompanyUpdateWithoutPromotionsInput, CompanyUncheckedUpdateWithoutPromotionsInput>
    create: XOR<CompanyCreateWithoutPromotionsInput, CompanyUncheckedCreateWithoutPromotionsInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutPromotionsInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutPromotionsInput, CompanyUncheckedUpdateWithoutPromotionsInput>
  }

  export type CompanyUpdateWithoutPromotionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    defaultCurrency?: StringFieldUpdateOperationsInput | string
    status?: EnumCompanyStatusFieldUpdateOperationsInput | $Enums.CompanyStatus
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    branches?: BranchUpdateManyWithoutCompanyNestedInput
    licenses?: LicenseUpdateManyWithoutCompanyNestedInput
    menuCategories?: MenuCategoryUpdateManyWithoutCompanyNestedInput
    menuProducts?: MenuProductUpdateManyWithoutCompanyNestedInput
    modifierCategories?: ModifierCategoryUpdateManyWithoutCompanyNestedInput
    modifiers?: ModifierUpdateManyWithoutCompanyNestedInput
    users?: UserUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutPromotionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    businessType?: NullableStringFieldUpdateOperationsInput | string | null
    timezone?: StringFieldUpdateOperationsInput | string
    defaultCurrency?: StringFieldUpdateOperationsInput | string
    status?: EnumCompanyStatusFieldUpdateOperationsInput | $Enums.CompanyStatus
    subscriptionPlan?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    branches?: BranchUncheckedUpdateManyWithoutCompanyNestedInput
    licenses?: LicenseUncheckedUpdateManyWithoutCompanyNestedInput
    menuCategories?: MenuCategoryUncheckedUpdateManyWithoutCompanyNestedInput
    menuProducts?: MenuProductUncheckedUpdateManyWithoutCompanyNestedInput
    modifierCategories?: ModifierCategoryUncheckedUpdateManyWithoutCompanyNestedInput
    modifiers?: ModifierUncheckedUpdateManyWithoutCompanyNestedInput
    users?: UserUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type MenuProductCreateWithoutPromotionProductsInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    images?: MenuProductCreateimagesInput | string[]
    slug?: string | null
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    priority?: number
    preparationTime?: number
    pricingMethod?: number
    sellingMethod?: number
    tags?: MenuProductCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    category?: MenuCategoryCreateNestedOneWithoutProductsInput
    company: CompanyCreateNestedOneWithoutMenuProductsInput
    modifierCategories?: ProductModifierCategoryCreateNestedManyWithoutProductInput
    promotionModifierMarkups?: PromotionModifierMarkupCreateNestedManyWithoutProductInput
    productImages?: ProductImageCreateNestedManyWithoutProductInput
  }

  export type MenuProductUncheckedCreateWithoutPromotionProductsInput = {
    id?: string
    companyId: string
    categoryId?: string | null
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    images?: MenuProductCreateimagesInput | string[]
    slug?: string | null
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    priority?: number
    preparationTime?: number
    pricingMethod?: number
    sellingMethod?: number
    tags?: MenuProductCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    modifierCategories?: ProductModifierCategoryUncheckedCreateNestedManyWithoutProductInput
    promotionModifierMarkups?: PromotionModifierMarkupUncheckedCreateNestedManyWithoutProductInput
    productImages?: ProductImageUncheckedCreateNestedManyWithoutProductInput
  }

  export type MenuProductCreateOrConnectWithoutPromotionProductsInput = {
    where: MenuProductWhereUniqueInput
    create: XOR<MenuProductCreateWithoutPromotionProductsInput, MenuProductUncheckedCreateWithoutPromotionProductsInput>
  }

  export type PromotionCreateWithoutPromotionProductsInput = {
    id?: string
    name: string
    description?: string | null
    promotionType?: string
    startDate: Date | string
    endDate: Date | string
    isActive?: boolean
    autoRevert?: boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    priceHistories?: PriceHistoryCreateNestedManyWithoutPromotionInput
    modifierMarkups?: PromotionModifierMarkupCreateNestedManyWithoutPromotionInput
    company: CompanyCreateNestedOneWithoutPromotionsInput
  }

  export type PromotionUncheckedCreateWithoutPromotionProductsInput = {
    id?: string
    companyId: string
    name: string
    description?: string | null
    promotionType?: string
    startDate: Date | string
    endDate: Date | string
    isActive?: boolean
    autoRevert?: boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    priceHistories?: PriceHistoryUncheckedCreateNestedManyWithoutPromotionInput
    modifierMarkups?: PromotionModifierMarkupUncheckedCreateNestedManyWithoutPromotionInput
  }

  export type PromotionCreateOrConnectWithoutPromotionProductsInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutPromotionProductsInput, PromotionUncheckedCreateWithoutPromotionProductsInput>
  }

  export type MenuProductUpsertWithoutPromotionProductsInput = {
    update: XOR<MenuProductUpdateWithoutPromotionProductsInput, MenuProductUncheckedUpdateWithoutPromotionProductsInput>
    create: XOR<MenuProductCreateWithoutPromotionProductsInput, MenuProductUncheckedCreateWithoutPromotionProductsInput>
    where?: MenuProductWhereInput
  }

  export type MenuProductUpdateToOneWithWhereWithoutPromotionProductsInput = {
    where?: MenuProductWhereInput
    data: XOR<MenuProductUpdateWithoutPromotionProductsInput, MenuProductUncheckedUpdateWithoutPromotionProductsInput>
  }

  export type MenuProductUpdateWithoutPromotionProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MenuProductUpdateimagesInput | string[]
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    priority?: IntFieldUpdateOperationsInput | number
    preparationTime?: IntFieldUpdateOperationsInput | number
    pricingMethod?: IntFieldUpdateOperationsInput | number
    sellingMethod?: IntFieldUpdateOperationsInput | number
    tags?: MenuProductUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    category?: MenuCategoryUpdateOneWithoutProductsNestedInput
    company?: CompanyUpdateOneRequiredWithoutMenuProductsNestedInput
    modifierCategories?: ProductModifierCategoryUpdateManyWithoutProductNestedInput
    promotionModifierMarkups?: PromotionModifierMarkupUpdateManyWithoutProductNestedInput
    productImages?: ProductImageUpdateManyWithoutProductNestedInput
  }

  export type MenuProductUncheckedUpdateWithoutPromotionProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MenuProductUpdateimagesInput | string[]
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    priority?: IntFieldUpdateOperationsInput | number
    preparationTime?: IntFieldUpdateOperationsInput | number
    pricingMethod?: IntFieldUpdateOperationsInput | number
    sellingMethod?: IntFieldUpdateOperationsInput | number
    tags?: MenuProductUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    modifierCategories?: ProductModifierCategoryUncheckedUpdateManyWithoutProductNestedInput
    promotionModifierMarkups?: PromotionModifierMarkupUncheckedUpdateManyWithoutProductNestedInput
    productImages?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
  }

  export type PromotionUpsertWithoutPromotionProductsInput = {
    update: XOR<PromotionUpdateWithoutPromotionProductsInput, PromotionUncheckedUpdateWithoutPromotionProductsInput>
    create: XOR<PromotionCreateWithoutPromotionProductsInput, PromotionUncheckedCreateWithoutPromotionProductsInput>
    where?: PromotionWhereInput
  }

  export type PromotionUpdateToOneWithWhereWithoutPromotionProductsInput = {
    where?: PromotionWhereInput
    data: XOR<PromotionUpdateWithoutPromotionProductsInput, PromotionUncheckedUpdateWithoutPromotionProductsInput>
  }

  export type PromotionUpdateWithoutPromotionProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    autoRevert?: BoolFieldUpdateOperationsInput | boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    priceHistories?: PriceHistoryUpdateManyWithoutPromotionNestedInput
    modifierMarkups?: PromotionModifierMarkupUpdateManyWithoutPromotionNestedInput
    company?: CompanyUpdateOneRequiredWithoutPromotionsNestedInput
  }

  export type PromotionUncheckedUpdateWithoutPromotionProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    autoRevert?: BoolFieldUpdateOperationsInput | boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    priceHistories?: PriceHistoryUncheckedUpdateManyWithoutPromotionNestedInput
    modifierMarkups?: PromotionModifierMarkupUncheckedUpdateManyWithoutPromotionNestedInput
  }

  export type ModifierCreateWithoutPromotionMarkupsInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    displayNumber?: number
    isDefault?: boolean
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    company: CompanyCreateNestedOneWithoutModifiersInput
    modifierCategory: ModifierCategoryCreateNestedOneWithoutModifiersInput
  }

  export type ModifierUncheckedCreateWithoutPromotionMarkupsInput = {
    id?: string
    modifierCategoryId: string
    companyId: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    displayNumber?: number
    isDefault?: boolean
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ModifierCreateOrConnectWithoutPromotionMarkupsInput = {
    where: ModifierWhereUniqueInput
    create: XOR<ModifierCreateWithoutPromotionMarkupsInput, ModifierUncheckedCreateWithoutPromotionMarkupsInput>
  }

  export type MenuProductCreateWithoutPromotionModifierMarkupsInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    images?: MenuProductCreateimagesInput | string[]
    slug?: string | null
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    priority?: number
    preparationTime?: number
    pricingMethod?: number
    sellingMethod?: number
    tags?: MenuProductCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    category?: MenuCategoryCreateNestedOneWithoutProductsInput
    company: CompanyCreateNestedOneWithoutMenuProductsInput
    modifierCategories?: ProductModifierCategoryCreateNestedManyWithoutProductInput
    promotionProducts?: PromotionProductCreateNestedManyWithoutProductInput
    productImages?: ProductImageCreateNestedManyWithoutProductInput
  }

  export type MenuProductUncheckedCreateWithoutPromotionModifierMarkupsInput = {
    id?: string
    companyId: string
    categoryId?: string | null
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    images?: MenuProductCreateimagesInput | string[]
    slug?: string | null
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    priority?: number
    preparationTime?: number
    pricingMethod?: number
    sellingMethod?: number
    tags?: MenuProductCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    modifierCategories?: ProductModifierCategoryUncheckedCreateNestedManyWithoutProductInput
    promotionProducts?: PromotionProductUncheckedCreateNestedManyWithoutProductInput
    productImages?: ProductImageUncheckedCreateNestedManyWithoutProductInput
  }

  export type MenuProductCreateOrConnectWithoutPromotionModifierMarkupsInput = {
    where: MenuProductWhereUniqueInput
    create: XOR<MenuProductCreateWithoutPromotionModifierMarkupsInput, MenuProductUncheckedCreateWithoutPromotionModifierMarkupsInput>
  }

  export type PromotionCreateWithoutModifierMarkupsInput = {
    id?: string
    name: string
    description?: string | null
    promotionType?: string
    startDate: Date | string
    endDate: Date | string
    isActive?: boolean
    autoRevert?: boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    priceHistories?: PriceHistoryCreateNestedManyWithoutPromotionInput
    promotionProducts?: PromotionProductCreateNestedManyWithoutPromotionInput
    company: CompanyCreateNestedOneWithoutPromotionsInput
  }

  export type PromotionUncheckedCreateWithoutModifierMarkupsInput = {
    id?: string
    companyId: string
    name: string
    description?: string | null
    promotionType?: string
    startDate: Date | string
    endDate: Date | string
    isActive?: boolean
    autoRevert?: boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    priceHistories?: PriceHistoryUncheckedCreateNestedManyWithoutPromotionInput
    promotionProducts?: PromotionProductUncheckedCreateNestedManyWithoutPromotionInput
  }

  export type PromotionCreateOrConnectWithoutModifierMarkupsInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutModifierMarkupsInput, PromotionUncheckedCreateWithoutModifierMarkupsInput>
  }

  export type ModifierUpsertWithoutPromotionMarkupsInput = {
    update: XOR<ModifierUpdateWithoutPromotionMarkupsInput, ModifierUncheckedUpdateWithoutPromotionMarkupsInput>
    create: XOR<ModifierCreateWithoutPromotionMarkupsInput, ModifierUncheckedCreateWithoutPromotionMarkupsInput>
    where?: ModifierWhereInput
  }

  export type ModifierUpdateToOneWithWhereWithoutPromotionMarkupsInput = {
    where?: ModifierWhereInput
    data: XOR<ModifierUpdateWithoutPromotionMarkupsInput, ModifierUncheckedUpdateWithoutPromotionMarkupsInput>
  }

  export type ModifierUpdateWithoutPromotionMarkupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    displayNumber?: IntFieldUpdateOperationsInput | number
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutModifiersNestedInput
    modifierCategory?: ModifierCategoryUpdateOneRequiredWithoutModifiersNestedInput
  }

  export type ModifierUncheckedUpdateWithoutPromotionMarkupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    modifierCategoryId?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    displayNumber?: IntFieldUpdateOperationsInput | number
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MenuProductUpsertWithoutPromotionModifierMarkupsInput = {
    update: XOR<MenuProductUpdateWithoutPromotionModifierMarkupsInput, MenuProductUncheckedUpdateWithoutPromotionModifierMarkupsInput>
    create: XOR<MenuProductCreateWithoutPromotionModifierMarkupsInput, MenuProductUncheckedCreateWithoutPromotionModifierMarkupsInput>
    where?: MenuProductWhereInput
  }

  export type MenuProductUpdateToOneWithWhereWithoutPromotionModifierMarkupsInput = {
    where?: MenuProductWhereInput
    data: XOR<MenuProductUpdateWithoutPromotionModifierMarkupsInput, MenuProductUncheckedUpdateWithoutPromotionModifierMarkupsInput>
  }

  export type MenuProductUpdateWithoutPromotionModifierMarkupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MenuProductUpdateimagesInput | string[]
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    priority?: IntFieldUpdateOperationsInput | number
    preparationTime?: IntFieldUpdateOperationsInput | number
    pricingMethod?: IntFieldUpdateOperationsInput | number
    sellingMethod?: IntFieldUpdateOperationsInput | number
    tags?: MenuProductUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    category?: MenuCategoryUpdateOneWithoutProductsNestedInput
    company?: CompanyUpdateOneRequiredWithoutMenuProductsNestedInput
    modifierCategories?: ProductModifierCategoryUpdateManyWithoutProductNestedInput
    promotionProducts?: PromotionProductUpdateManyWithoutProductNestedInput
    productImages?: ProductImageUpdateManyWithoutProductNestedInput
  }

  export type MenuProductUncheckedUpdateWithoutPromotionModifierMarkupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MenuProductUpdateimagesInput | string[]
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    priority?: IntFieldUpdateOperationsInput | number
    preparationTime?: IntFieldUpdateOperationsInput | number
    pricingMethod?: IntFieldUpdateOperationsInput | number
    sellingMethod?: IntFieldUpdateOperationsInput | number
    tags?: MenuProductUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    modifierCategories?: ProductModifierCategoryUncheckedUpdateManyWithoutProductNestedInput
    promotionProducts?: PromotionProductUncheckedUpdateManyWithoutProductNestedInput
    productImages?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
  }

  export type PromotionUpsertWithoutModifierMarkupsInput = {
    update: XOR<PromotionUpdateWithoutModifierMarkupsInput, PromotionUncheckedUpdateWithoutModifierMarkupsInput>
    create: XOR<PromotionCreateWithoutModifierMarkupsInput, PromotionUncheckedCreateWithoutModifierMarkupsInput>
    where?: PromotionWhereInput
  }

  export type PromotionUpdateToOneWithWhereWithoutModifierMarkupsInput = {
    where?: PromotionWhereInput
    data: XOR<PromotionUpdateWithoutModifierMarkupsInput, PromotionUncheckedUpdateWithoutModifierMarkupsInput>
  }

  export type PromotionUpdateWithoutModifierMarkupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    autoRevert?: BoolFieldUpdateOperationsInput | boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    priceHistories?: PriceHistoryUpdateManyWithoutPromotionNestedInput
    promotionProducts?: PromotionProductUpdateManyWithoutPromotionNestedInput
    company?: CompanyUpdateOneRequiredWithoutPromotionsNestedInput
  }

  export type PromotionUncheckedUpdateWithoutModifierMarkupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    autoRevert?: BoolFieldUpdateOperationsInput | boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    priceHistories?: PriceHistoryUncheckedUpdateManyWithoutPromotionNestedInput
    promotionProducts?: PromotionProductUncheckedUpdateManyWithoutPromotionNestedInput
  }

  export type PromotionCreateWithoutPriceHistoriesInput = {
    id?: string
    name: string
    description?: string | null
    promotionType?: string
    startDate: Date | string
    endDate: Date | string
    isActive?: boolean
    autoRevert?: boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    modifierMarkups?: PromotionModifierMarkupCreateNestedManyWithoutPromotionInput
    promotionProducts?: PromotionProductCreateNestedManyWithoutPromotionInput
    company: CompanyCreateNestedOneWithoutPromotionsInput
  }

  export type PromotionUncheckedCreateWithoutPriceHistoriesInput = {
    id?: string
    companyId: string
    name: string
    description?: string | null
    promotionType?: string
    startDate: Date | string
    endDate: Date | string
    isActive?: boolean
    autoRevert?: boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    modifierMarkups?: PromotionModifierMarkupUncheckedCreateNestedManyWithoutPromotionInput
    promotionProducts?: PromotionProductUncheckedCreateNestedManyWithoutPromotionInput
  }

  export type PromotionCreateOrConnectWithoutPriceHistoriesInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutPriceHistoriesInput, PromotionUncheckedCreateWithoutPriceHistoriesInput>
  }

  export type PromotionUpsertWithoutPriceHistoriesInput = {
    update: XOR<PromotionUpdateWithoutPriceHistoriesInput, PromotionUncheckedUpdateWithoutPriceHistoriesInput>
    create: XOR<PromotionCreateWithoutPriceHistoriesInput, PromotionUncheckedCreateWithoutPriceHistoriesInput>
    where?: PromotionWhereInput
  }

  export type PromotionUpdateToOneWithWhereWithoutPriceHistoriesInput = {
    where?: PromotionWhereInput
    data: XOR<PromotionUpdateWithoutPriceHistoriesInput, PromotionUncheckedUpdateWithoutPriceHistoriesInput>
  }

  export type PromotionUpdateWithoutPriceHistoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    autoRevert?: BoolFieldUpdateOperationsInput | boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    modifierMarkups?: PromotionModifierMarkupUpdateManyWithoutPromotionNestedInput
    promotionProducts?: PromotionProductUpdateManyWithoutPromotionNestedInput
    company?: CompanyUpdateOneRequiredWithoutPromotionsNestedInput
  }

  export type PromotionUncheckedUpdateWithoutPriceHistoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    autoRevert?: BoolFieldUpdateOperationsInput | boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    modifierMarkups?: PromotionModifierMarkupUncheckedUpdateManyWithoutPromotionNestedInput
    promotionProducts?: PromotionProductUncheckedUpdateManyWithoutPromotionNestedInput
  }

  export type BranchCreateManyCompanyInput = {
    id?: string
    name: string
    phone?: string | null
    email?: string | null
    address?: string | null
    city?: string | null
    country?: string | null
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    isDefault?: boolean
    isActive?: boolean
    allowsOnlineOrders?: boolean
    allowsDelivery?: boolean
    allowsPickup?: boolean
    timezone?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    nameAr: string
    openTime?: string | null
    closeTime?: string | null
  }

  export type LicenseCreateManyCompanyInput = {
    id?: string
    status?: $Enums.LicenseStatus
    startDate?: Date | string
    expiresAt: Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    daysRemaining?: number
    lastChecked?: Date | string | null
    renewedAt?: Date | string | null
    totalDays?: number
  }

  export type MenuCategoryCreateManyCompanyInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    displayNumber?: number
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type MenuProductCreateManyCompanyInput = {
    id?: string
    categoryId?: string | null
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    images?: MenuProductCreateimagesInput | string[]
    slug?: string | null
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    priority?: number
    preparationTime?: number
    pricingMethod?: number
    sellingMethod?: number
    tags?: MenuProductCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type ModifierCategoryCreateManyCompanyInput = {
    id?: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: number
    image?: string | null
    selectionType?: $Enums.ModifierSelectionType
    isRequired?: boolean
    minSelections?: number
    maxSelections?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ModifierCreateManyCompanyInput = {
    id?: string
    modifierCategoryId: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    displayNumber?: number
    isDefault?: boolean
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type PromotionCreateManyCompanyInput = {
    id?: string
    name: string
    description?: string | null
    promotionType?: string
    startDate: Date | string
    endDate: Date | string
    isActive?: boolean
    autoRevert?: boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type UserCreateManyCompanyInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    avatarUrl?: string | null
    passwordHash: string
    pin?: string | null
    emailVerifiedAt?: Date | string | null
    role: $Enums.UserRole
    status?: $Enums.UserStatus
    branchId?: string | null
    language?: string
    timezone?: string
    lastLoginAt?: Date | string | null
    lastLoginIp?: string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    mustChangePassword?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    firstName?: string | null
    lastName?: string | null
    username?: string | null
  }

  export type BranchUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowsOnlineOrders?: BoolFieldUpdateOperationsInput | boolean
    allowsDelivery?: BoolFieldUpdateOperationsInput | boolean
    allowsPickup?: BoolFieldUpdateOperationsInput | boolean
    timezone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    nameAr?: StringFieldUpdateOperationsInput | string
    openTime?: NullableStringFieldUpdateOperationsInput | string | null
    closeTime?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUpdateManyWithoutBranchNestedInput
  }

  export type BranchUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowsOnlineOrders?: BoolFieldUpdateOperationsInput | boolean
    allowsDelivery?: BoolFieldUpdateOperationsInput | boolean
    allowsPickup?: BoolFieldUpdateOperationsInput | boolean
    timezone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    nameAr?: StringFieldUpdateOperationsInput | string
    openTime?: NullableStringFieldUpdateOperationsInput | string | null
    closeTime?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UserUncheckedUpdateManyWithoutBranchNestedInput
  }

  export type BranchUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    isActive?: BoolFieldUpdateOperationsInput | boolean
    allowsOnlineOrders?: BoolFieldUpdateOperationsInput | boolean
    allowsDelivery?: BoolFieldUpdateOperationsInput | boolean
    allowsPickup?: BoolFieldUpdateOperationsInput | boolean
    timezone?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    nameAr?: StringFieldUpdateOperationsInput | string
    openTime?: NullableStringFieldUpdateOperationsInput | string | null
    closeTime?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LicenseUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumLicenseStatusFieldUpdateOperationsInput | $Enums.LicenseStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    daysRemaining?: IntFieldUpdateOperationsInput | number
    lastChecked?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    renewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalDays?: IntFieldUpdateOperationsInput | number
  }

  export type LicenseUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumLicenseStatusFieldUpdateOperationsInput | $Enums.LicenseStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    daysRemaining?: IntFieldUpdateOperationsInput | number
    lastChecked?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    renewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalDays?: IntFieldUpdateOperationsInput | number
  }

  export type LicenseUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    status?: EnumLicenseStatusFieldUpdateOperationsInput | $Enums.LicenseStatus
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    daysRemaining?: IntFieldUpdateOperationsInput | number
    lastChecked?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    renewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    totalDays?: IntFieldUpdateOperationsInput | number
  }

  export type MenuCategoryUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    displayNumber?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    products?: MenuProductUpdateManyWithoutCategoryNestedInput
  }

  export type MenuCategoryUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    displayNumber?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    products?: MenuProductUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type MenuCategoryUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    displayNumber?: IntFieldUpdateOperationsInput | number
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MenuProductUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MenuProductUpdateimagesInput | string[]
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    priority?: IntFieldUpdateOperationsInput | number
    preparationTime?: IntFieldUpdateOperationsInput | number
    pricingMethod?: IntFieldUpdateOperationsInput | number
    sellingMethod?: IntFieldUpdateOperationsInput | number
    tags?: MenuProductUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    category?: MenuCategoryUpdateOneWithoutProductsNestedInput
    modifierCategories?: ProductModifierCategoryUpdateManyWithoutProductNestedInput
    promotionModifierMarkups?: PromotionModifierMarkupUpdateManyWithoutProductNestedInput
    promotionProducts?: PromotionProductUpdateManyWithoutProductNestedInput
    productImages?: ProductImageUpdateManyWithoutProductNestedInput
  }

  export type MenuProductUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MenuProductUpdateimagesInput | string[]
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    priority?: IntFieldUpdateOperationsInput | number
    preparationTime?: IntFieldUpdateOperationsInput | number
    pricingMethod?: IntFieldUpdateOperationsInput | number
    sellingMethod?: IntFieldUpdateOperationsInput | number
    tags?: MenuProductUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    modifierCategories?: ProductModifierCategoryUncheckedUpdateManyWithoutProductNestedInput
    promotionModifierMarkups?: PromotionModifierMarkupUncheckedUpdateManyWithoutProductNestedInput
    promotionProducts?: PromotionProductUncheckedUpdateManyWithoutProductNestedInput
    productImages?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
  }

  export type MenuProductUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MenuProductUpdateimagesInput | string[]
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    priority?: IntFieldUpdateOperationsInput | number
    preparationTime?: IntFieldUpdateOperationsInput | number
    pricingMethod?: IntFieldUpdateOperationsInput | number
    sellingMethod?: IntFieldUpdateOperationsInput | number
    tags?: MenuProductUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ModifierCategoryUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: IntFieldUpdateOperationsInput | number
    image?: NullableStringFieldUpdateOperationsInput | string | null
    selectionType?: EnumModifierSelectionTypeFieldUpdateOperationsInput | $Enums.ModifierSelectionType
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    minSelections?: IntFieldUpdateOperationsInput | number
    maxSelections?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiers?: ModifierUpdateManyWithoutModifierCategoryNestedInput
    productCategories?: ProductModifierCategoryUpdateManyWithoutModifierCategoryNestedInput
  }

  export type ModifierCategoryUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: IntFieldUpdateOperationsInput | number
    image?: NullableStringFieldUpdateOperationsInput | string | null
    selectionType?: EnumModifierSelectionTypeFieldUpdateOperationsInput | $Enums.ModifierSelectionType
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    minSelections?: IntFieldUpdateOperationsInput | number
    maxSelections?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifiers?: ModifierUncheckedUpdateManyWithoutModifierCategoryNestedInput
    productCategories?: ProductModifierCategoryUncheckedUpdateManyWithoutModifierCategoryNestedInput
  }

  export type ModifierCategoryUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    displayNumber?: IntFieldUpdateOperationsInput | number
    image?: NullableStringFieldUpdateOperationsInput | string | null
    selectionType?: EnumModifierSelectionTypeFieldUpdateOperationsInput | $Enums.ModifierSelectionType
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    minSelections?: IntFieldUpdateOperationsInput | number
    maxSelections?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ModifierUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    displayNumber?: IntFieldUpdateOperationsInput | number
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    modifierCategory?: ModifierCategoryUpdateOneRequiredWithoutModifiersNestedInput
    promotionMarkups?: PromotionModifierMarkupUpdateManyWithoutModifierNestedInput
  }

  export type ModifierUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    modifierCategoryId?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    displayNumber?: IntFieldUpdateOperationsInput | number
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promotionMarkups?: PromotionModifierMarkupUncheckedUpdateManyWithoutModifierNestedInput
  }

  export type ModifierUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    modifierCategoryId?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    displayNumber?: IntFieldUpdateOperationsInput | number
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PromotionUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    autoRevert?: BoolFieldUpdateOperationsInput | boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    priceHistories?: PriceHistoryUpdateManyWithoutPromotionNestedInput
    modifierMarkups?: PromotionModifierMarkupUpdateManyWithoutPromotionNestedInput
    promotionProducts?: PromotionProductUpdateManyWithoutPromotionNestedInput
  }

  export type PromotionUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    autoRevert?: BoolFieldUpdateOperationsInput | boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    priceHistories?: PriceHistoryUncheckedUpdateManyWithoutPromotionNestedInput
    modifierMarkups?: PromotionModifierMarkupUncheckedUpdateManyWithoutPromotionNestedInput
    promotionProducts?: PromotionProductUncheckedUpdateManyWithoutPromotionNestedInput
  }

  export type PromotionUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    autoRevert?: BoolFieldUpdateOperationsInput | boolean
    platforms?: JsonNullValueInput | InputJsonValue
    minProfitMargin?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPricingSnapshot?: NullableJsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    passwordHash?: StringFieldUpdateOperationsInput | string
    pin?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginIp?: NullableStringFieldUpdateOperationsInput | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    activityLogs?: UserActivityLogUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
    branch?: BranchUpdateOneWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    passwordHash?: StringFieldUpdateOperationsInput | string
    pin?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    branchId?: NullableStringFieldUpdateOperationsInput | string | null
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginIp?: NullableStringFieldUpdateOperationsInput | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    activityLogs?: UserActivityLogUncheckedUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    passwordHash?: StringFieldUpdateOperationsInput | string
    pin?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    branchId?: NullableStringFieldUpdateOperationsInput | string | null
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginIp?: NullableStringFieldUpdateOperationsInput | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateManyBranchInput = {
    id?: string
    name: string
    email: string
    phone?: string | null
    avatarUrl?: string | null
    passwordHash: string
    pin?: string | null
    emailVerifiedAt?: Date | string | null
    role: $Enums.UserRole
    status?: $Enums.UserStatus
    companyId: string
    language?: string
    timezone?: string
    lastLoginAt?: Date | string | null
    lastLoginIp?: string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    mustChangePassword?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
    firstName?: string | null
    lastName?: string | null
    username?: string | null
  }

  export type UserUpdateWithoutBranchInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    passwordHash?: StringFieldUpdateOperationsInput | string
    pin?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginIp?: NullableStringFieldUpdateOperationsInput | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    activityLogs?: UserActivityLogUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
    company?: CompanyUpdateOneRequiredWithoutUsersNestedInput
  }

  export type UserUncheckedUpdateWithoutBranchInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    passwordHash?: StringFieldUpdateOperationsInput | string
    pin?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    companyId?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginIp?: NullableStringFieldUpdateOperationsInput | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    activityLogs?: UserActivityLogUncheckedUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutBranchInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    avatarUrl?: NullableStringFieldUpdateOperationsInput | string | null
    passwordHash?: StringFieldUpdateOperationsInput | string
    pin?: NullableStringFieldUpdateOperationsInput | string | null
    emailVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    companyId?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lastLoginIp?: NullableStringFieldUpdateOperationsInput | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    mustChangePassword?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserActivityLogCreateManyUserInput = {
    id?: string
    action: string
    resourceType?: string | null
    resourceId?: string | null
    description?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    success?: boolean
    errorMessage?: string | null
    timestamp?: Date | string
  }

  export type UserSessionCreateManyUserInput = {
    id?: string
    tokenHash: string
    refreshTokenHash?: string | null
    expiresAt: Date | string
    refreshExpiresAt?: Date | string | null
    ipAddress?: string | null
    userAgent?: string | null
    deviceType?: string | null
    isActive?: boolean
    revokedAt?: Date | string | null
    createdAt?: Date | string
    lastUsedAt?: Date | string
  }

  export type UserActivityLogUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    resourceType?: NullableStringFieldUpdateOperationsInput | string | null
    resourceId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    success?: BoolFieldUpdateOperationsInput | boolean
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserActivityLogUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    resourceType?: NullableStringFieldUpdateOperationsInput | string | null
    resourceId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    success?: BoolFieldUpdateOperationsInput | boolean
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserActivityLogUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    resourceType?: NullableStringFieldUpdateOperationsInput | string | null
    resourceId?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    success?: BoolFieldUpdateOperationsInput | boolean
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    tokenHash?: StringFieldUpdateOperationsInput | string
    refreshTokenHash?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refreshExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    deviceType?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    tokenHash?: StringFieldUpdateOperationsInput | string
    refreshTokenHash?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refreshExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    deviceType?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    tokenHash?: StringFieldUpdateOperationsInput | string
    refreshTokenHash?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    refreshExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    deviceType?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    revokedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MenuProductCreateManyCategoryInput = {
    id?: string
    companyId: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: string | null
    images?: MenuProductCreateimagesInput | string[]
    slug?: string | null
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    priority?: number
    preparationTime?: number
    pricingMethod?: number
    sellingMethod?: number
    tags?: MenuProductCreatetagsInput | string[]
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type MenuProductUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MenuProductUpdateimagesInput | string[]
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    priority?: IntFieldUpdateOperationsInput | number
    preparationTime?: IntFieldUpdateOperationsInput | number
    pricingMethod?: IntFieldUpdateOperationsInput | number
    sellingMethod?: IntFieldUpdateOperationsInput | number
    tags?: MenuProductUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    company?: CompanyUpdateOneRequiredWithoutMenuProductsNestedInput
    modifierCategories?: ProductModifierCategoryUpdateManyWithoutProductNestedInput
    promotionModifierMarkups?: PromotionModifierMarkupUpdateManyWithoutProductNestedInput
    promotionProducts?: PromotionProductUpdateManyWithoutProductNestedInput
    productImages?: ProductImageUpdateManyWithoutProductNestedInput
  }

  export type MenuProductUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MenuProductUpdateimagesInput | string[]
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    priority?: IntFieldUpdateOperationsInput | number
    preparationTime?: IntFieldUpdateOperationsInput | number
    pricingMethod?: IntFieldUpdateOperationsInput | number
    sellingMethod?: IntFieldUpdateOperationsInput | number
    tags?: MenuProductUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    modifierCategories?: ProductModifierCategoryUncheckedUpdateManyWithoutProductNestedInput
    promotionModifierMarkups?: PromotionModifierMarkupUncheckedUpdateManyWithoutProductNestedInput
    promotionProducts?: PromotionProductUncheckedUpdateManyWithoutProductNestedInput
    productImages?: ProductImageUncheckedUpdateManyWithoutProductNestedInput
  }

  export type MenuProductUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    image?: NullableStringFieldUpdateOperationsInput | string | null
    images?: MenuProductUpdateimagesInput | string[]
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    priority?: IntFieldUpdateOperationsInput | number
    preparationTime?: IntFieldUpdateOperationsInput | number
    pricingMethod?: IntFieldUpdateOperationsInput | number
    sellingMethod?: IntFieldUpdateOperationsInput | number
    tags?: MenuProductUpdatetagsInput | string[]
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductModifierCategoryCreateManyProductInput = {
    id?: string
    modifierCategoryId: string
    minQuantity?: number
    maxQuantity?: number
    priceOverride?: Decimal | DecimalJsLike | number | string | null
    isRequired?: boolean
    displayOrder?: number
    createdAt?: Date | string
  }

  export type PromotionModifierMarkupCreateManyProductInput = {
    id?: string
    promotionId: string
    modifierId: string
    markupPercentage: Decimal | DecimalJsLike | number | string
    originalPrice: Decimal | DecimalJsLike | number | string
    markedUpPrice: Decimal | DecimalJsLike | number | string
    profitMargin?: Decimal | DecimalJsLike | number | string | null
    businessReason?: string | null
    createdAt?: Date | string
  }

  export type PromotionProductCreateManyProductInput = {
    id?: string
    promotionId: string
    baseDiscountType?: string
    baseDiscountValue: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
  }

  export type ProductImageCreateManyProductInput = {
    id?: string
    filename: string
    originalName: string
    url: string
    size: number
    width: number
    height: number
    mimeType: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductModifierCategoryUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    minQuantity?: IntFieldUpdateOperationsInput | number
    maxQuantity?: IntFieldUpdateOperationsInput | number
    priceOverride?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modifierCategory?: ModifierCategoryUpdateOneRequiredWithoutProductCategoriesNestedInput
  }

  export type ProductModifierCategoryUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    modifierCategoryId?: StringFieldUpdateOperationsInput | string
    minQuantity?: IntFieldUpdateOperationsInput | number
    maxQuantity?: IntFieldUpdateOperationsInput | number
    priceOverride?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductModifierCategoryUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    modifierCategoryId?: StringFieldUpdateOperationsInput | string
    minQuantity?: IntFieldUpdateOperationsInput | number
    maxQuantity?: IntFieldUpdateOperationsInput | number
    priceOverride?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PromotionModifierMarkupUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    markupPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markedUpPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitMargin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modifier?: ModifierUpdateOneRequiredWithoutPromotionMarkupsNestedInput
    promotion?: PromotionUpdateOneRequiredWithoutModifierMarkupsNestedInput
  }

  export type PromotionModifierMarkupUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    promotionId?: StringFieldUpdateOperationsInput | string
    modifierId?: StringFieldUpdateOperationsInput | string
    markupPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markedUpPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitMargin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PromotionModifierMarkupUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    promotionId?: StringFieldUpdateOperationsInput | string
    modifierId?: StringFieldUpdateOperationsInput | string
    markupPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markedUpPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitMargin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PromotionProductUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    baseDiscountType?: StringFieldUpdateOperationsInput | string
    baseDiscountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    promotion?: PromotionUpdateOneRequiredWithoutPromotionProductsNestedInput
  }

  export type PromotionProductUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    promotionId?: StringFieldUpdateOperationsInput | string
    baseDiscountType?: StringFieldUpdateOperationsInput | string
    baseDiscountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PromotionProductUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    promotionId?: StringFieldUpdateOperationsInput | string
    baseDiscountType?: StringFieldUpdateOperationsInput | string
    baseDiscountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductImageUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    originalName?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    size?: IntFieldUpdateOperationsInput | number
    width?: IntFieldUpdateOperationsInput | number
    height?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductImageUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    originalName?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    size?: IntFieldUpdateOperationsInput | number
    width?: IntFieldUpdateOperationsInput | number
    height?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductImageUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    filename?: StringFieldUpdateOperationsInput | string
    originalName?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    size?: IntFieldUpdateOperationsInput | number
    width?: IntFieldUpdateOperationsInput | number
    height?: IntFieldUpdateOperationsInput | number
    mimeType?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ModifierCreateManyModifierCategoryInput = {
    id?: string
    companyId: string
    name: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice: Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: Decimal | DecimalJsLike | number | string
    status?: number
    displayNumber?: number
    isDefault?: boolean
    image?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type ProductModifierCategoryCreateManyModifierCategoryInput = {
    id?: string
    productId: string
    minQuantity?: number
    maxQuantity?: number
    priceOverride?: Decimal | DecimalJsLike | number | string | null
    isRequired?: boolean
    displayOrder?: number
    createdAt?: Date | string
  }

  export type ModifierUpdateWithoutModifierCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    displayNumber?: IntFieldUpdateOperationsInput | number
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    company?: CompanyUpdateOneRequiredWithoutModifiersNestedInput
    promotionMarkups?: PromotionModifierMarkupUpdateManyWithoutModifierNestedInput
  }

  export type ModifierUncheckedUpdateWithoutModifierCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    displayNumber?: IntFieldUpdateOperationsInput | number
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    promotionMarkups?: PromotionModifierMarkupUncheckedUpdateManyWithoutModifierNestedInput
  }

  export type ModifierUncheckedUpdateManyWithoutModifierCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    companyId?: StringFieldUpdateOperationsInput | string
    name?: JsonNullValueInput | InputJsonValue
    description?: NullableJsonNullValueInput | InputJsonValue
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    pricing?: JsonNullValueInput | InputJsonValue
    cost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    displayNumber?: IntFieldUpdateOperationsInput | number
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProductModifierCategoryUpdateWithoutModifierCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    minQuantity?: IntFieldUpdateOperationsInput | number
    maxQuantity?: IntFieldUpdateOperationsInput | number
    priceOverride?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: MenuProductUpdateOneRequiredWithoutModifierCategoriesNestedInput
  }

  export type ProductModifierCategoryUncheckedUpdateWithoutModifierCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    minQuantity?: IntFieldUpdateOperationsInput | number
    maxQuantity?: IntFieldUpdateOperationsInput | number
    priceOverride?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductModifierCategoryUncheckedUpdateManyWithoutModifierCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    minQuantity?: IntFieldUpdateOperationsInput | number
    maxQuantity?: IntFieldUpdateOperationsInput | number
    priceOverride?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isRequired?: BoolFieldUpdateOperationsInput | boolean
    displayOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PromotionModifierMarkupCreateManyModifierInput = {
    id?: string
    promotionId: string
    productId: string
    markupPercentage: Decimal | DecimalJsLike | number | string
    originalPrice: Decimal | DecimalJsLike | number | string
    markedUpPrice: Decimal | DecimalJsLike | number | string
    profitMargin?: Decimal | DecimalJsLike | number | string | null
    businessReason?: string | null
    createdAt?: Date | string
  }

  export type PromotionModifierMarkupUpdateWithoutModifierInput = {
    id?: StringFieldUpdateOperationsInput | string
    markupPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markedUpPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitMargin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: MenuProductUpdateOneRequiredWithoutPromotionModifierMarkupsNestedInput
    promotion?: PromotionUpdateOneRequiredWithoutModifierMarkupsNestedInput
  }

  export type PromotionModifierMarkupUncheckedUpdateWithoutModifierInput = {
    id?: StringFieldUpdateOperationsInput | string
    promotionId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    markupPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markedUpPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitMargin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PromotionModifierMarkupUncheckedUpdateManyWithoutModifierInput = {
    id?: StringFieldUpdateOperationsInput | string
    promotionId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    markupPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markedUpPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitMargin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PriceHistoryCreateManyPromotionInput = {
    id?: string
    entityType: string
    entityId: string
    oldPrice?: Decimal | DecimalJsLike | number | string | null
    newPrice?: Decimal | DecimalJsLike | number | string | null
    changeReason?: string | null
    platform?: string | null
    createdAt?: Date | string
    createdBy?: string | null
  }

  export type PromotionModifierMarkupCreateManyPromotionInput = {
    id?: string
    productId: string
    modifierId: string
    markupPercentage: Decimal | DecimalJsLike | number | string
    originalPrice: Decimal | DecimalJsLike | number | string
    markedUpPrice: Decimal | DecimalJsLike | number | string
    profitMargin?: Decimal | DecimalJsLike | number | string | null
    businessReason?: string | null
    createdAt?: Date | string
  }

  export type PromotionProductCreateManyPromotionInput = {
    id?: string
    productId: string
    baseDiscountType?: string
    baseDiscountValue: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
  }

  export type PriceHistoryUpdateWithoutPromotionInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    newPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    changeReason?: NullableStringFieldUpdateOperationsInput | string | null
    platform?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PriceHistoryUncheckedUpdateWithoutPromotionInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    newPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    changeReason?: NullableStringFieldUpdateOperationsInput | string | null
    platform?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PriceHistoryUncheckedUpdateManyWithoutPromotionInput = {
    id?: StringFieldUpdateOperationsInput | string
    entityType?: StringFieldUpdateOperationsInput | string
    entityId?: StringFieldUpdateOperationsInput | string
    oldPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    newPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    changeReason?: NullableStringFieldUpdateOperationsInput | string | null
    platform?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PromotionModifierMarkupUpdateWithoutPromotionInput = {
    id?: StringFieldUpdateOperationsInput | string
    markupPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markedUpPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitMargin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modifier?: ModifierUpdateOneRequiredWithoutPromotionMarkupsNestedInput
    product?: MenuProductUpdateOneRequiredWithoutPromotionModifierMarkupsNestedInput
  }

  export type PromotionModifierMarkupUncheckedUpdateWithoutPromotionInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    modifierId?: StringFieldUpdateOperationsInput | string
    markupPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markedUpPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitMargin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PromotionModifierMarkupUncheckedUpdateManyWithoutPromotionInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    modifierId?: StringFieldUpdateOperationsInput | string
    markupPercentage?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    originalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    markedUpPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    profitMargin?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    businessReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PromotionProductUpdateWithoutPromotionInput = {
    id?: StringFieldUpdateOperationsInput | string
    baseDiscountType?: StringFieldUpdateOperationsInput | string
    baseDiscountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: MenuProductUpdateOneRequiredWithoutPromotionProductsNestedInput
  }

  export type PromotionProductUncheckedUpdateWithoutPromotionInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    baseDiscountType?: StringFieldUpdateOperationsInput | string
    baseDiscountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PromotionProductUncheckedUpdateManyWithoutPromotionInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    baseDiscountType?: StringFieldUpdateOperationsInput | string
    baseDiscountValue?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use CompanyCountOutputTypeDefaultArgs instead
     */
    export type CompanyCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CompanyCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BranchCountOutputTypeDefaultArgs instead
     */
    export type BranchCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BranchCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MenuCategoryCountOutputTypeDefaultArgs instead
     */
    export type MenuCategoryCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MenuCategoryCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MenuProductCountOutputTypeDefaultArgs instead
     */
    export type MenuProductCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MenuProductCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ModifierCategoryCountOutputTypeDefaultArgs instead
     */
    export type ModifierCategoryCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ModifierCategoryCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ModifierCountOutputTypeDefaultArgs instead
     */
    export type ModifierCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ModifierCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PromotionCountOutputTypeDefaultArgs instead
     */
    export type PromotionCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PromotionCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CompanyDefaultArgs instead
     */
    export type CompanyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CompanyDefaultArgs<ExtArgs>
    /**
     * @deprecated Use LicenseDefaultArgs instead
     */
    export type LicenseArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = LicenseDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BranchDefaultArgs instead
     */
    export type BranchArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BranchDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserSessionDefaultArgs instead
     */
    export type UserSessionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserSessionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserActivityLogDefaultArgs instead
     */
    export type UserActivityLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserActivityLogDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MenuCategoryDefaultArgs instead
     */
    export type MenuCategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MenuCategoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MenuProductDefaultArgs instead
     */
    export type MenuProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MenuProductDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductImageDefaultArgs instead
     */
    export type ProductImageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductImageDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ModifierCategoryDefaultArgs instead
     */
    export type ModifierCategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ModifierCategoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ModifierDefaultArgs instead
     */
    export type ModifierArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ModifierDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductModifierCategoryDefaultArgs instead
     */
    export type ProductModifierCategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductModifierCategoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PromotionDefaultArgs instead
     */
    export type PromotionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PromotionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PromotionProductDefaultArgs instead
     */
    export type PromotionProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PromotionProductDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PromotionModifierMarkupDefaultArgs instead
     */
    export type PromotionModifierMarkupArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PromotionModifierMarkupDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PriceHistoryDefaultArgs instead
     */
    export type PriceHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PriceHistoryDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}